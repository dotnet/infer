# Licensed to the .NET Foundation under one or more agreements.
# The .NET Foundation licenses this file to you under the MIT license.
# See the LICENSE file in the project root for more information.

# Run all-compiler-options-test.

pool:
  name: InferNet
  demands:
  - msbuild
  - visualstudio
  - vstest

trigger: none # disable CI build
pr: none # disable PR build

variables:
  Configuration: Release

schedules:
- cron: "30 23 * * 3"
  branches:
    include:
    - main

jobs:
- job: Test
  timeoutInMinutes: 40000
  steps:
  - checkout: self
    clean: true
    submodules: recursive
  
  - task: MSBuild@1
    displayName: 'Restore solution Infer.sln'
    inputs:
      solution: Infer.sln
      platform: 'Any CPU'
      configuration: '$(Configuration)'
      msbuildArguments: '/t:Restore'
  
  - task: VSBuild@1
    displayName: 'Build solution Infer'
    inputs:
      solution: Infer.sln
      platform: 'Any CPU'
      configuration: '$(Configuration)'
  
  - script: |
      test\TestAllCompilerOptions\bin\$(Configuration)\net461\TestAllCompilerOptions.exe
    displayName: 'Run test'

  # Clean up the process if the script timeout out.
  - powershell: |
      # ErrorAction is required because if the process is not found, gps logs
      # an error.
      # The test app outputs build variables in this format so that we can kill them all here.
      dir "Env:OptionsBuild_${Env:BUILD_ID}_*" | % { $_.Value } | % { Get-Process -Id $_ } | kill
    condition: always()
  
  - task: ms.vss-governance-buildtask.governance-build-task-component-detection.ComponentGovernanceComponentDetection@0
    displayName: 'Component Detection'
