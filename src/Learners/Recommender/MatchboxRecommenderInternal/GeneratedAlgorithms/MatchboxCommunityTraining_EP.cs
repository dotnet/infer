// <auto-generated />
#pragma warning disable 1570, 1591

using System;
using Microsoft.ML.Probabilistic;
using Microsoft.ML.Probabilistic.Distributions;
using System.Collections.Generic;
using Microsoft.ML.Probabilistic.Factors;
using Microsoft.ML.Probabilistic.Collections;

namespace Microsoft.ML.Probabilistic.Learners.MatchboxRecommenderInternal
{
	public partial class MatchboxCommunityTraining_EP : IGeneratedAlgorithm
	{
		#region Fields
		/// <summary>Field backing the AffinityNoiseVariance property</summary>
		private double affinityNoiseVariance;
		/// <summary>True if Changed_AffinityNoiseVariance_ItemBiasFeatureWeightPriorVariance_ItemBiasInitializer_ItemBiasMessage59 has executed. Set this to false to force re-execution of Changed_AffinityNoiseVariance_ItemBiasFeatureWeightPriorVariance_ItemBiasInitializer_ItemBiasMessage59</summary>
		public bool Changed_AffinityNoiseVariance_ItemBiasFeatureWeightPriorVariance_ItemBiasInitializer_ItemBiasMessage59_isDone;
		/// <summary>True if Changed_AffinityNoiseVariance_ItemBiasFeatureWeightPriorVariance_ItemBiasInitializer_ItemBiasMessage60 has executed. Set this to false to force re-execution of Changed_AffinityNoiseVariance_ItemBiasFeatureWeightPriorVariance_ItemBiasInitializer_ItemBiasMessage60</summary>
		public bool Changed_AffinityNoiseVariance_ItemBiasFeatureWeightPriorVariance_ItemBiasInitializer_ItemBiasMessage60_isDone;
		/// <summary>True if Changed_ItemBiasFeatureWeightPriorVariance_ItemCount_ItemFeatureCount_NonZeroItemFeatureCounts_NonZe55 has executed. Set this to false to force re-execution of Changed_ItemBiasFeatureWeightPriorVariance_ItemCount_ItemFeatureCount_NonZeroItemFeatureCounts_NonZe55</summary>
		public bool Changed_ItemBiasFeatureWeightPriorVariance_ItemCount_ItemFeatureCount_NonZeroItemFeatureCounts_NonZe55_isDone;
		/// <summary>True if Changed_ItemBiasFeatureWeightPriorVariance_ItemCount_ItemFeatureCount_NonZeroItemFeatureCounts_NonZe55 has performed initialisation. Set this to false to force re-execution of Changed_ItemBiasFeatureWeightPriorVariance_ItemCount_ItemFeatureCount_NonZeroItemFeatureCounts_NonZe55</summary>
		public bool Changed_ItemBiasFeatureWeightPriorVariance_ItemCount_ItemFeatureCount_NonZeroItemFeatureCounts_NonZe55_isInitialised;
		/// <summary>True if Changed_ItemBiasFeatureWeightPriorVariance_ItemFeatureCount has executed. Set this to false to force re-execution of Changed_ItemBiasFeatureWeightPriorVariance_ItemFeatureCount</summary>
		public bool Changed_ItemBiasFeatureWeightPriorVariance_ItemFeatureCount_isDone;
		/// <summary>True if Changed_ItemBiasInitializer_ItemCount has executed. Set this to false to force re-execution of Changed_ItemBiasInitializer_ItemCount</summary>
		public bool Changed_ItemBiasInitializer_ItemCount_isDone;
		/// <summary>True if Changed_ItemBiasInitializer_ItemCount_numberOfIterationsDecreased_Init_AffinityNoiseVariance_ItemBia19 has executed. Set this to false to force re-execution of Changed_ItemBiasInitializer_ItemCount_numberOfIterationsDecreased_Init_AffinityNoiseVariance_ItemBia19</summary>
		public bool Changed_ItemBiasInitializer_ItemCount_numberOfIterationsDecreased_Init_AffinityNoiseVariance_ItemBia19_isDone;
		/// <summary>True if Changed_ItemBiasInitializer_ItemCount_numberOfIterationsDecreased_Init_AffinityNoiseVariance_ItemBia19 has performed initialisation. Set this to false to force re-execution of Changed_ItemBiasInitializer_ItemCount_numberOfIterationsDecreased_Init_AffinityNoiseVariance_ItemBia19</summary>
		public bool Changed_ItemBiasInitializer_ItemCount_numberOfIterationsDecreased_Init_AffinityNoiseVariance_ItemBia19_isInitialised;
		/// <summary>True if Changed_ItemBiasMessage_ItemCount has executed. Set this to false to force re-execution of Changed_ItemBiasMessage_ItemCount</summary>
		public bool Changed_ItemBiasMessage_ItemCount_isDone;
		/// <summary>True if Changed_ItemCount has executed. Set this to false to force re-execution of Changed_ItemCount</summary>
		public bool Changed_ItemCount_isDone;
		/// <summary>True if Changed_ItemCount_ItemTraitsInitializer_numberOfIterationsDecreased_TraitCount_Init_AffinityNoiseVar14 has executed. Set this to false to force re-execution of Changed_ItemCount_ItemTraitsInitializer_numberOfIterationsDecreased_TraitCount_Init_AffinityNoiseVar14</summary>
		public bool Changed_ItemCount_ItemTraitsInitializer_numberOfIterationsDecreased_TraitCount_Init_AffinityNoiseVar14_isDone;
		/// <summary>True if Changed_ItemCount_ItemTraitsInitializer_numberOfIterationsDecreased_TraitCount_Init_AffinityNoiseVar14 has performed initialisation. Set this to false to force re-execution of Changed_ItemCount_ItemTraitsInitializer_numberOfIterationsDecreased_TraitCount_Init_AffinityNoiseVar14</summary>
		public bool Changed_ItemCount_ItemTraitsInitializer_numberOfIterationsDecreased_TraitCount_Init_AffinityNoiseVar14_isInitialised;
		/// <summary>True if Changed_ItemCount_ItemTraitsInitializer_TraitCount has executed. Set this to false to force re-execution of Changed_ItemCount_ItemTraitsInitializer_TraitCount</summary>
		public bool Changed_ItemCount_ItemTraitsInitializer_TraitCount_isDone;
		/// <summary>True if Changed_ItemCount_ItemTraitsMessage_TraitCount has executed. Set this to false to force re-execution of Changed_ItemCount_ItemTraitsMessage_TraitCount</summary>
		public bool Changed_ItemCount_ItemTraitsMessage_TraitCount_isDone;
		/// <summary>True if Changed_ItemCount_NonZeroItemFeatureCounts has executed. Set this to false to force re-execution of Changed_ItemCount_NonZeroItemFeatureCounts</summary>
		public bool Changed_ItemCount_NonZeroItemFeatureCounts_isDone;
		/// <summary>True if Changed_ItemCount_NonZeroItemFeatureCounts_numberOfIterationsDecreased_Init_AffinityNoiseVariance_It52 has executed. Set this to false to force re-execution of Changed_ItemCount_NonZeroItemFeatureCounts_numberOfIterationsDecreased_Init_AffinityNoiseVariance_It52</summary>
		public bool Changed_ItemCount_NonZeroItemFeatureCounts_numberOfIterationsDecreased_Init_AffinityNoiseVariance_It52_isDone;
		/// <summary>True if Changed_ItemCount_NonZeroItemFeatureCounts_numberOfIterationsDecreased_Init_AffinityNoiseVariance_It52 has performed initialisation. Set this to false to force re-execution of Changed_ItemCount_NonZeroItemFeatureCounts_numberOfIterationsDecreased_Init_AffinityNoiseVariance_It52</summary>
		public bool Changed_ItemCount_NonZeroItemFeatureCounts_numberOfIterationsDecreased_Init_AffinityNoiseVariance_It52_isInitialised;
		/// <summary>True if Changed_ItemCount_NonZeroItemFeatureCounts_numberOfIterationsDecreased_TraitCount_Init_AffinityNoise50 has executed. Set this to false to force re-execution of Changed_ItemCount_NonZeroItemFeatureCounts_numberOfIterationsDecreased_TraitCount_Init_AffinityNoise50</summary>
		public bool Changed_ItemCount_NonZeroItemFeatureCounts_numberOfIterationsDecreased_TraitCount_Init_AffinityNoise50_isDone;
		/// <summary>True if Changed_ItemCount_NonZeroItemFeatureCounts_numberOfIterationsDecreased_TraitCount_Init_AffinityNoise50 has performed initialisation. Set this to false to force re-execution of Changed_ItemCount_NonZeroItemFeatureCounts_numberOfIterationsDecreased_TraitCount_Init_AffinityNoise50</summary>
		public bool Changed_ItemCount_NonZeroItemFeatureCounts_numberOfIterationsDecreased_TraitCount_Init_AffinityNoise50_isInitialised;
		/// <summary>True if Changed_ItemCount_NonZeroItemFeatureCounts_TraitCount has executed. Set this to false to force re-execution of Changed_ItemCount_NonZeroItemFeatureCounts_TraitCount</summary>
		public bool Changed_ItemCount_NonZeroItemFeatureCounts_TraitCount_isDone;
		/// <summary>True if Changed_ItemCount_numberOfIterationsDecreased_Init_AffinityNoiseVariance_ItemBiasFeatureWeightPriorV8 has executed. Set this to false to force re-execution of Changed_ItemCount_numberOfIterationsDecreased_Init_AffinityNoiseVariance_ItemBiasFeatureWeightPriorV8</summary>
		public bool Changed_ItemCount_numberOfIterationsDecreased_Init_AffinityNoiseVariance_ItemBiasFeatureWeightPriorV8_isDone;
		/// <summary>True if Changed_ItemCount_numberOfIterationsDecreased_Init_AffinityNoiseVariance_ItemBiasFeatureWeightPriorV8 has performed initialisation. Set this to false to force re-execution of Changed_ItemCount_numberOfIterationsDecreased_Init_AffinityNoiseVariance_ItemBiasFeatureWeightPriorV8</summary>
		public bool Changed_ItemCount_numberOfIterationsDecreased_Init_AffinityNoiseVariance_ItemBiasFeatureWeightPriorV8_isInitialised;
		/// <summary>True if Changed_ItemCount_numberOfIterationsDecreased_TraitCount_Init_AffinityNoiseVariance_ItemBiasFeatureW6 has executed. Set this to false to force re-execution of Changed_ItemCount_numberOfIterationsDecreased_TraitCount_Init_AffinityNoiseVariance_ItemBiasFeatureW6</summary>
		public bool Changed_ItemCount_numberOfIterationsDecreased_TraitCount_Init_AffinityNoiseVariance_ItemBiasFeatureW6_isDone;
		/// <summary>True if Changed_ItemCount_numberOfIterationsDecreased_TraitCount_Init_AffinityNoiseVariance_ItemBiasFeatureW6 has performed initialisation. Set this to false to force re-execution of Changed_ItemCount_numberOfIterationsDecreased_TraitCount_Init_AffinityNoiseVariance_ItemBiasFeatureW6</summary>
		public bool Changed_ItemCount_numberOfIterationsDecreased_TraitCount_Init_AffinityNoiseVariance_ItemBiasFeatureW6_isInitialised;
		/// <summary>True if Changed_ItemCount_TraitCount has executed. Set this to false to force re-execution of Changed_ItemCount_TraitCount</summary>
		public bool Changed_ItemCount_TraitCount_isDone;
		/// <summary>True if Changed_ItemFeatureCount has executed. Set this to false to force re-execution of Changed_ItemFeatureCount</summary>
		public bool Changed_ItemFeatureCount_isDone;
		/// <summary>True if Changed_ItemFeatureCount_ItemTraitFeatureWeightPriorVariance_TraitCount has executed. Set this to false to force re-execution of Changed_ItemFeatureCount_ItemTraitFeatureWeightPriorVariance_TraitCount</summary>
		public bool Changed_ItemFeatureCount_ItemTraitFeatureWeightPriorVariance_TraitCount_isDone;
		/// <summary>True if Changed_ItemFeatureCount_numberOfIterationsDecreased_TraitCount_Init_AffinityNoiseVariance_ItemBiasF47 has executed. Set this to false to force re-execution of Changed_ItemFeatureCount_numberOfIterationsDecreased_TraitCount_Init_AffinityNoiseVariance_ItemBiasF47</summary>
		public bool Changed_ItemFeatureCount_numberOfIterationsDecreased_TraitCount_Init_AffinityNoiseVariance_ItemBiasF47_isDone;
		/// <summary>True if Changed_ItemFeatureCount_numberOfIterationsDecreased_TraitCount_Init_AffinityNoiseVariance_ItemBiasF47 has performed initialisation. Set this to false to force re-execution of Changed_ItemFeatureCount_numberOfIterationsDecreased_TraitCount_Init_AffinityNoiseVariance_ItemBiasF47</summary>
		public bool Changed_ItemFeatureCount_numberOfIterationsDecreased_TraitCount_Init_AffinityNoiseVariance_ItemBiasF47_isInitialised;
		/// <summary>True if Changed_ItemFeatureCount_TraitCount has executed. Set this to false to force re-execution of Changed_ItemFeatureCount_TraitCount</summary>
		public bool Changed_ItemFeatureCount_TraitCount_isDone;
		/// <summary>True if Changed_MiddleUserThresholdIndex_UserCount_UserThresholdCount_UserThresholdPriorMean_UserThresholdPr58 has executed. Set this to false to force re-execution of Changed_MiddleUserThresholdIndex_UserCount_UserThresholdCount_UserThresholdPriorMean_UserThresholdPr58</summary>
		public bool Changed_MiddleUserThresholdIndex_UserCount_UserThresholdCount_UserThresholdPriorMean_UserThresholdPr58_isDone;
		/// <summary>True if Changed_MiddleUserThresholdIndex_UserThresholdCount has executed. Set this to false to force re-execution of Changed_MiddleUserThresholdIndex_UserThresholdCount</summary>
		public bool Changed_MiddleUserThresholdIndex_UserThresholdCount_isDone;
		/// <summary>True if Changed_MiddleUserThresholdIndex_UserThresholdCount_UserThresholdPriorVariance has executed. Set this to false to force re-execution of Changed_MiddleUserThresholdIndex_UserThresholdCount_UserThresholdPriorVariance</summary>
		public bool Changed_MiddleUserThresholdIndex_UserThresholdCount_UserThresholdPriorVariance_isDone;
		/// <summary>True if Changed_NonZeroUserFeatureCounts_NonZeroUserFeatureIndices_numberOfIterationsDecreased_UserBiasFeatu45 has executed. Set this to false to force re-execution of Changed_NonZeroUserFeatureCounts_NonZeroUserFeatureIndices_numberOfIterationsDecreased_UserBiasFeatu45</summary>
		public bool Changed_NonZeroUserFeatureCounts_NonZeroUserFeatureIndices_numberOfIterationsDecreased_UserBiasFeatu45_isDone;
		/// <summary>True if Changed_NonZeroUserFeatureCounts_NonZeroUserFeatureIndices_numberOfIterationsDecreased_UserBiasFeatu45 has performed initialisation. Set this to false to force re-execution of Changed_NonZeroUserFeatureCounts_NonZeroUserFeatureIndices_numberOfIterationsDecreased_UserBiasFeatu45</summary>
		public bool Changed_NonZeroUserFeatureCounts_NonZeroUserFeatureIndices_numberOfIterationsDecreased_UserBiasFeatu45_isInitialised;
		/// <summary>True if Changed_NonZeroUserFeatureCounts_numberOfIterationsDecreased_TraitCount_UserCount_Init_AffinityNoise42 has executed. Set this to false to force re-execution of Changed_NonZeroUserFeatureCounts_numberOfIterationsDecreased_TraitCount_UserCount_Init_AffinityNoise42</summary>
		public bool Changed_NonZeroUserFeatureCounts_numberOfIterationsDecreased_TraitCount_UserCount_Init_AffinityNoise42_isDone;
		/// <summary>True if Changed_NonZeroUserFeatureCounts_numberOfIterationsDecreased_TraitCount_UserCount_Init_AffinityNoise42 has performed initialisation. Set this to false to force re-execution of Changed_NonZeroUserFeatureCounts_numberOfIterationsDecreased_TraitCount_UserCount_Init_AffinityNoise42</summary>
		public bool Changed_NonZeroUserFeatureCounts_numberOfIterationsDecreased_TraitCount_UserCount_Init_AffinityNoise42_isInitialised;
		/// <summary>True if Changed_NonZeroUserFeatureCounts_numberOfIterationsDecreased_UserCount_Init_AffinityNoiseVariance_It44 has executed. Set this to false to force re-execution of Changed_NonZeroUserFeatureCounts_numberOfIterationsDecreased_UserCount_Init_AffinityNoiseVariance_It44</summary>
		public bool Changed_NonZeroUserFeatureCounts_numberOfIterationsDecreased_UserCount_Init_AffinityNoiseVariance_It44_isDone;
		/// <summary>True if Changed_NonZeroUserFeatureCounts_numberOfIterationsDecreased_UserCount_Init_AffinityNoiseVariance_It44 has performed initialisation. Set this to false to force re-execution of Changed_NonZeroUserFeatureCounts_numberOfIterationsDecreased_UserCount_Init_AffinityNoiseVariance_It44</summary>
		public bool Changed_NonZeroUserFeatureCounts_numberOfIterationsDecreased_UserCount_Init_AffinityNoiseVariance_It44_isInitialised;
		/// <summary>True if Changed_NonZeroUserFeatureCounts_TraitCount_UserCount has executed. Set this to false to force re-execution of Changed_NonZeroUserFeatureCounts_TraitCount_UserCount</summary>
		public bool Changed_NonZeroUserFeatureCounts_TraitCount_UserCount_isDone;
		/// <summary>True if Changed_NonZeroUserFeatureCounts_UserCount has executed. Set this to false to force re-execution of Changed_NonZeroUserFeatureCounts_UserCount</summary>
		public bool Changed_NonZeroUserFeatureCounts_UserCount_isDone;
		/// <summary>True if Changed_numberOfIterationsDecreased_ObservationCount_Init_AffinityNoiseVariance_ItemBiasFeatureWeigh31 has executed. Set this to false to force re-execution of Changed_numberOfIterationsDecreased_ObservationCount_Init_AffinityNoiseVariance_ItemBiasFeatureWeigh31</summary>
		public bool Changed_numberOfIterationsDecreased_ObservationCount_Init_AffinityNoiseVariance_ItemBiasFeatureWeigh31_isDone;
		/// <summary>True if Changed_numberOfIterationsDecreased_ObservationCount_Init_AffinityNoiseVariance_ItemBiasFeatureWeigh31 has performed initialisation. Set this to false to force re-execution of Changed_numberOfIterationsDecreased_ObservationCount_Init_AffinityNoiseVariance_ItemBiasFeatureWeigh31</summary>
		public bool Changed_numberOfIterationsDecreased_ObservationCount_Init_AffinityNoiseVariance_ItemBiasFeatureWeigh31_isInitialised;
		/// <summary>True if Changed_numberOfIterationsDecreased_ObservationCount_Ratings_UserThresholdCount_Init_AffinityNoiseVa38 has executed. Set this to false to force re-execution of Changed_numberOfIterationsDecreased_ObservationCount_Ratings_UserThresholdCount_Init_AffinityNoiseVa38</summary>
		public bool Changed_numberOfIterationsDecreased_ObservationCount_Ratings_UserThresholdCount_Init_AffinityNoiseVa38_isDone;
		/// <summary>True if Changed_numberOfIterationsDecreased_ObservationCount_Ratings_UserThresholdCount_Init_AffinityNoiseVa38 has performed initialisation. Set this to false to force re-execution of Changed_numberOfIterationsDecreased_ObservationCount_Ratings_UserThresholdCount_Init_AffinityNoiseVa38</summary>
		public bool Changed_numberOfIterationsDecreased_ObservationCount_Ratings_UserThresholdCount_Init_AffinityNoiseVa38_isInitialised;
		/// <summary>True if Changed_numberOfIterationsDecreased_ObservationCount_TraitCount_Init_AffinityNoiseVariance_ItemBiasF30 has executed. Set this to false to force re-execution of Changed_numberOfIterationsDecreased_ObservationCount_TraitCount_Init_AffinityNoiseVariance_ItemBiasF30</summary>
		public bool Changed_numberOfIterationsDecreased_ObservationCount_TraitCount_Init_AffinityNoiseVariance_ItemBiasF30_isDone;
		/// <summary>True if Changed_numberOfIterationsDecreased_ObservationCount_TraitCount_Init_AffinityNoiseVariance_ItemBiasF30 has performed initialisation. Set this to false to force re-execution of Changed_numberOfIterationsDecreased_ObservationCount_TraitCount_Init_AffinityNoiseVariance_ItemBiasF30</summary>
		public bool Changed_numberOfIterationsDecreased_ObservationCount_TraitCount_Init_AffinityNoiseVariance_ItemBiasF30_isInitialised;
		/// <summary>True if Changed_numberOfIterationsDecreased_ObservationCount_UserThresholdCount_Init_AffinityNoiseVariance_I35 has executed. Set this to false to force re-execution of Changed_numberOfIterationsDecreased_ObservationCount_UserThresholdCount_Init_AffinityNoiseVariance_I35</summary>
		public bool Changed_numberOfIterationsDecreased_ObservationCount_UserThresholdCount_Init_AffinityNoiseVariance_I35_isDone;
		/// <summary>True if Changed_numberOfIterationsDecreased_ObservationCount_UserThresholdCount_Init_AffinityNoiseVariance_I35 has performed initialisation. Set this to false to force re-execution of Changed_numberOfIterationsDecreased_ObservationCount_UserThresholdCount_Init_AffinityNoiseVariance_I35</summary>
		public bool Changed_numberOfIterationsDecreased_ObservationCount_UserThresholdCount_Init_AffinityNoiseVariance_I35_isInitialised;
		/// <summary>True if Changed_numberOfIterationsDecreased_ObservationCount_UserThresholdCount_UseSharedUserThresholds_Init33 has executed. Set this to false to force re-execution of Changed_numberOfIterationsDecreased_ObservationCount_UserThresholdCount_UseSharedUserThresholds_Init33</summary>
		public bool Changed_numberOfIterationsDecreased_ObservationCount_UserThresholdCount_UseSharedUserThresholds_Init33_isDone;
		/// <summary>True if Changed_numberOfIterationsDecreased_ObservationCount_UserThresholdCount_UseSharedUserThresholds_Init33 has performed initialisation. Set this to false to force re-execution of Changed_numberOfIterationsDecreased_ObservationCount_UserThresholdCount_UseSharedUserThresholds_Init33</summary>
		public bool Changed_numberOfIterationsDecreased_ObservationCount_UserThresholdCount_UseSharedUserThresholds_Init33_isInitialised;
		/// <summary>True if Changed_numberOfIterationsDecreased_TraitCount_UserCount_Init_AffinityNoiseVariance_ItemBiasFeatureW3 has executed. Set this to false to force re-execution of Changed_numberOfIterationsDecreased_TraitCount_UserCount_Init_AffinityNoiseVariance_ItemBiasFeatureW3</summary>
		public bool Changed_numberOfIterationsDecreased_TraitCount_UserCount_Init_AffinityNoiseVariance_ItemBiasFeatureW3_isDone;
		/// <summary>True if Changed_numberOfIterationsDecreased_TraitCount_UserCount_Init_AffinityNoiseVariance_ItemBiasFeatureW3 has performed initialisation. Set this to false to force re-execution of Changed_numberOfIterationsDecreased_TraitCount_UserCount_Init_AffinityNoiseVariance_ItemBiasFeatureW3</summary>
		public bool Changed_numberOfIterationsDecreased_TraitCount_UserCount_Init_AffinityNoiseVariance_ItemBiasFeatureW3_isInitialised;
		/// <summary>True if Changed_numberOfIterationsDecreased_TraitCount_UserCount_UserTraitsInitializer_Init_AffinityNoiseVar27 has executed. Set this to false to force re-execution of Changed_numberOfIterationsDecreased_TraitCount_UserCount_UserTraitsInitializer_Init_AffinityNoiseVar27</summary>
		public bool Changed_numberOfIterationsDecreased_TraitCount_UserCount_UserTraitsInitializer_Init_AffinityNoiseVar27_isDone;
		/// <summary>True if Changed_numberOfIterationsDecreased_TraitCount_UserCount_UserTraitsInitializer_Init_AffinityNoiseVar27 has performed initialisation. Set this to false to force re-execution of Changed_numberOfIterationsDecreased_TraitCount_UserCount_UserTraitsInitializer_Init_AffinityNoiseVar27</summary>
		public bool Changed_numberOfIterationsDecreased_TraitCount_UserCount_UserTraitsInitializer_Init_AffinityNoiseVar27_isInitialised;
		/// <summary>True if Changed_numberOfIterationsDecreased_TraitCount_UserFeatureCount_Init_AffinityNoiseVariance_ItemBiasF39 has executed. Set this to false to force re-execution of Changed_numberOfIterationsDecreased_TraitCount_UserFeatureCount_Init_AffinityNoiseVariance_ItemBiasF39</summary>
		public bool Changed_numberOfIterationsDecreased_TraitCount_UserFeatureCount_Init_AffinityNoiseVariance_ItemBiasF39_isDone;
		/// <summary>True if Changed_numberOfIterationsDecreased_TraitCount_UserFeatureCount_Init_AffinityNoiseVariance_ItemBiasF39 has performed initialisation. Set this to false to force re-execution of Changed_numberOfIterationsDecreased_TraitCount_UserFeatureCount_Init_AffinityNoiseVariance_ItemBiasF39</summary>
		public bool Changed_numberOfIterationsDecreased_TraitCount_UserFeatureCount_Init_AffinityNoiseVariance_ItemBiasF39_isInitialised;
		/// <summary>True if Changed_numberOfIterationsDecreased_UserBiasInitializer_UserCount_Init_AffinityNoiseVariance_ItemBia17 has executed. Set this to false to force re-execution of Changed_numberOfIterationsDecreased_UserBiasInitializer_UserCount_Init_AffinityNoiseVariance_ItemBia17</summary>
		public bool Changed_numberOfIterationsDecreased_UserBiasInitializer_UserCount_Init_AffinityNoiseVariance_ItemBia17_isDone;
		/// <summary>True if Changed_numberOfIterationsDecreased_UserBiasInitializer_UserCount_Init_AffinityNoiseVariance_ItemBia17 has performed initialisation. Set this to false to force re-execution of Changed_numberOfIterationsDecreased_UserBiasInitializer_UserCount_Init_AffinityNoiseVariance_ItemBia17</summary>
		public bool Changed_numberOfIterationsDecreased_UserBiasInitializer_UserCount_Init_AffinityNoiseVariance_ItemBia17_isInitialised;
		/// <summary>True if Changed_numberOfIterationsDecreased_UserCount_Init_AffinityNoiseVariance_ItemBiasFeatureWeightPriorV7 has executed. Set this to false to force re-execution of Changed_numberOfIterationsDecreased_UserCount_Init_AffinityNoiseVariance_ItemBiasFeatureWeightPriorV7</summary>
		public bool Changed_numberOfIterationsDecreased_UserCount_Init_AffinityNoiseVariance_ItemBiasFeatureWeightPriorV7_isDone;
		/// <summary>True if Changed_numberOfIterationsDecreased_UserCount_Init_AffinityNoiseVariance_ItemBiasFeatureWeightPriorV7 has performed initialisation. Set this to false to force re-execution of Changed_numberOfIterationsDecreased_UserCount_Init_AffinityNoiseVariance_ItemBiasFeatureWeightPriorV7</summary>
		public bool Changed_numberOfIterationsDecreased_UserCount_Init_AffinityNoiseVariance_ItemBiasFeatureWeightPriorV7_isInitialised;
		/// <summary>True if Changed_numberOfIterationsDecreased_UserCount_UserThresholdCount_Init_AffinityNoiseVariance_ItemBias20 has executed. Set this to false to force re-execution of Changed_numberOfIterationsDecreased_UserCount_UserThresholdCount_Init_AffinityNoiseVariance_ItemBias20</summary>
		public bool Changed_numberOfIterationsDecreased_UserCount_UserThresholdCount_Init_AffinityNoiseVariance_ItemBias20_isDone;
		/// <summary>True if Changed_numberOfIterationsDecreased_UserCount_UserThresholdCount_Init_AffinityNoiseVariance_ItemBias20 has performed initialisation. Set this to false to force re-execution of Changed_numberOfIterationsDecreased_UserCount_UserThresholdCount_Init_AffinityNoiseVariance_ItemBias20</summary>
		public bool Changed_numberOfIterationsDecreased_UserCount_UserThresholdCount_Init_AffinityNoiseVariance_ItemBias20_isInitialised;
		/// <summary>True if Changed_numberOfIterationsDecreased_UserCount_UserThresholdCount_UserThresholdsInitializer_Init_Affi23 has executed. Set this to false to force re-execution of Changed_numberOfIterationsDecreased_UserCount_UserThresholdCount_UserThresholdsInitializer_Init_Affi23</summary>
		public bool Changed_numberOfIterationsDecreased_UserCount_UserThresholdCount_UserThresholdsInitializer_Init_Affi23_isDone;
		/// <summary>True if Changed_numberOfIterationsDecreased_UserCount_UserThresholdCount_UserThresholdsInitializer_Init_Affi23 has performed initialisation. Set this to false to force re-execution of Changed_numberOfIterationsDecreased_UserCount_UserThresholdCount_UserThresholdsInitializer_Init_Affi23</summary>
		public bool Changed_numberOfIterationsDecreased_UserCount_UserThresholdCount_UserThresholdsInitializer_Init_Affi23_isInitialised;
		/// <summary>True if Changed_numberOfIterationsDecreased_UserCount_UserThresholdCount_UseSharedUserThresholds_Init_Affini21 has executed. Set this to false to force re-execution of Changed_numberOfIterationsDecreased_UserCount_UserThresholdCount_UseSharedUserThresholds_Init_Affini21</summary>
		public bool Changed_numberOfIterationsDecreased_UserCount_UserThresholdCount_UseSharedUserThresholds_Init_Affini21_isDone;
		/// <summary>True if Changed_numberOfIterationsDecreased_UserCount_UserThresholdCount_UseSharedUserThresholds_Init_Affini21 has performed initialisation. Set this to false to force re-execution of Changed_numberOfIterationsDecreased_UserCount_UserThresholdCount_UseSharedUserThresholds_Init_Affini21</summary>
		public bool Changed_numberOfIterationsDecreased_UserCount_UserThresholdCount_UseSharedUserThresholds_Init_Affini21_isInitialised;
		/// <summary>True if Changed_ObservationCount has executed. Set this to false to force re-execution of Changed_ObservationCount</summary>
		public bool Changed_ObservationCount_isDone;
		/// <summary>True if Changed_ObservationCount_Ratings has executed. Set this to false to force re-execution of Changed_ObservationCount_Ratings</summary>
		public bool Changed_ObservationCount_Ratings_isDone;
		/// <summary>True if Changed_ObservationCount_TraitCount has executed. Set this to false to force re-execution of Changed_ObservationCount_TraitCount</summary>
		public bool Changed_ObservationCount_TraitCount_isDone;
		/// <summary>True if Changed_ObservationCount_UserThresholdCount has executed. Set this to false to force re-execution of Changed_ObservationCount_UserThresholdCount</summary>
		public bool Changed_ObservationCount_UserThresholdCount_isDone;
		/// <summary>True if Changed_ObservationCount_UserThresholdCount_UseSharedUserThresholds has executed. Set this to false to force re-execution of Changed_ObservationCount_UserThresholdCount_UseSharedUserThresholds</summary>
		public bool Changed_ObservationCount_UserThresholdCount_UseSharedUserThresholds_isDone;
		/// <summary>True if Changed_ObservationCount_UseSharedUserThresholds has executed. Set this to false to force re-execution of Changed_ObservationCount_UseSharedUserThresholds</summary>
		public bool Changed_ObservationCount_UseSharedUserThresholds_isDone;
		/// <summary>True if Changed_TraitCount has executed. Set this to false to force re-execution of Changed_TraitCount</summary>
		public bool Changed_TraitCount_isDone;
		/// <summary>True if Changed_TraitCount_UserCount has executed. Set this to false to force re-execution of Changed_TraitCount_UserCount</summary>
		public bool Changed_TraitCount_UserCount_isDone;
		/// <summary>True if Changed_TraitCount_UserCount_UserTraitsInitializer has executed. Set this to false to force re-execution of Changed_TraitCount_UserCount_UserTraitsInitializer</summary>
		public bool Changed_TraitCount_UserCount_UserTraitsInitializer_isDone;
		/// <summary>True if Changed_TraitCount_UserCount_UserTraitsMessage has executed. Set this to false to force re-execution of Changed_TraitCount_UserCount_UserTraitsMessage</summary>
		public bool Changed_TraitCount_UserCount_UserTraitsMessage_isDone;
		/// <summary>True if Changed_TraitCount_UserFeatureCount has executed. Set this to false to force re-execution of Changed_TraitCount_UserFeatureCount</summary>
		public bool Changed_TraitCount_UserFeatureCount_isDone;
		/// <summary>True if Changed_TraitCount_UserFeatureCount_UserTraitFeatureWeightPriorVariance has executed. Set this to false to force re-execution of Changed_TraitCount_UserFeatureCount_UserTraitFeatureWeightPriorVariance</summary>
		public bool Changed_TraitCount_UserFeatureCount_UserTraitFeatureWeightPriorVariance_isDone;
		/// <summary>True if Changed_UserBiasFeatureWeightPriorVariance_UserFeatureCount has executed. Set this to false to force re-execution of Changed_UserBiasFeatureWeightPriorVariance_UserFeatureCount</summary>
		public bool Changed_UserBiasFeatureWeightPriorVariance_UserFeatureCount_isDone;
		/// <summary>True if Changed_UserBiasInitializer_UserCount has executed. Set this to false to force re-execution of Changed_UserBiasInitializer_UserCount</summary>
		public bool Changed_UserBiasInitializer_UserCount_isDone;
		/// <summary>True if Changed_UserBiasMessage_UserCount has executed. Set this to false to force re-execution of Changed_UserBiasMessage_UserCount</summary>
		public bool Changed_UserBiasMessage_UserCount_isDone;
		/// <summary>True if Changed_UserCount has executed. Set this to false to force re-execution of Changed_UserCount</summary>
		public bool Changed_UserCount_isDone;
		/// <summary>True if Changed_UserCount_UserThresholdCount has executed. Set this to false to force re-execution of Changed_UserCount_UserThresholdCount</summary>
		public bool Changed_UserCount_UserThresholdCount_isDone;
		/// <summary>True if Changed_UserCount_UserThresholdCount_UserThresholdsInitializer has executed. Set this to false to force re-execution of Changed_UserCount_UserThresholdCount_UserThresholdsInitializer</summary>
		public bool Changed_UserCount_UserThresholdCount_UserThresholdsInitializer_isDone;
		/// <summary>True if Changed_UserCount_UserThresholdCount_UserThresholdsMessage has executed. Set this to false to force re-execution of Changed_UserCount_UserThresholdCount_UserThresholdsMessage</summary>
		public bool Changed_UserCount_UserThresholdCount_UserThresholdsMessage_isDone;
		/// <summary>True if Changed_UserFeatureCount has executed. Set this to false to force re-execution of Changed_UserFeatureCount</summary>
		public bool Changed_UserFeatureCount_isDone;
		/// <summary>True if Changed_UserThresholdCount_UseSharedUserThresholds has executed. Set this to false to force re-execution of Changed_UserThresholdCount_UseSharedUserThresholds</summary>
		public bool Changed_UserThresholdCount_UseSharedUserThresholds_isDone;
		/// <summary>True if Changed_UseSharedUserThresholds has executed. Set this to false to force re-execution of Changed_UseSharedUserThresholds</summary>
		public bool Changed_UseSharedUserThresholds_isDone;
		/// <summary>True if Constant has executed. Set this to false to force re-execution of Constant</summary>
		public bool Constant_isDone;
		/// <summary>The constant 'CurrentRating'</summary>
		public int[] CurrentRating;
		public DistributionStructArray<Gaussian,double> ItemBias_F;
		public DistributionStructArray<Gaussian,double> ItemBias_itemItemIds_observation__F;
		/// <summary>Message to marginal of 'ItemBias'</summary>
		public DistributionStructArray<Gaussian,double> ItemBias_marginal_F;
		/// <summary>Message from use of 'ItemBias'</summary>
		public DistributionStructArray<Gaussian,double> ItemBias_use_B;
		/// <summary>Message to use of 'ItemBias'</summary>
		public DistributionStructArray<Gaussian,double> ItemBias_use_F;
		/// <summary>Messages from uses of 'ItemBias_use'</summary>
		public DistributionStructArray<Gaussian,double>[] ItemBias_uses_B;
		/// <summary>Messages to uses of 'ItemBias_use'</summary>
		public DistributionStructArray<Gaussian,double>[] ItemBias_uses_F;
		/// <summary>Buffer for GetItemsOp&lt;double&gt;.ItemsAverageConditional&lt;DistributionStructArray&lt;Gaussian, double&gt;, Gaussian&gt;</summary>
		public DistributionStructArray<Gaussian,double> ItemBias_uses_F_1__marginal;
		/// <summary>Field backing the ItemBiasFeatureWeightPriorVariance property</summary>
		private double itemBiasFeatureWeightPriorVariance;
		public DistributionStructArray<Gaussian,double> ItemBiasFeatureWeights_F;
		public Gaussian ItemBiasFeatureWeights_F_reduced;
		/// <summary>Message to marginal of 'ItemBiasFeatureWeights'</summary>
		public DistributionStructArray<Gaussian,double> ItemBiasFeatureWeights_marginal_F;
		public DistributionRefArray<DistributionStructArray<Gaussian,double>,double[]> ItemBiasFeatureWeights_NonZeroItemFeatureIndices_F;
		/// <summary>Field backing the ItemBiasInitializer property</summary>
		private DistributionStructArray<Gaussian,double> itemBiasInitializer;
		public Gaussian[] itemBiasMean_B;
		public Gaussian[] itemBiasMean_F;
		/// <summary>Field backing the ItemBiasMessage property</summary>
		private DistributionStructArray<Gaussian,double> itemBiasMessage;
		public Gaussian[] itemBiasObs_B;
		/// <summary>Field backing the ItemBiasVariance property</summary>
		private double itemBiasVariance;
		/// <summary>Field backing the ItemCount property</summary>
		private int itemCount;
		/// <summary>Field backing the ItemFeatureCount property</summary>
		private int itemFeatureCount;
		/// <summary>Field backing the ItemIds property</summary>
		private IReadOnlyList<int> itemIds;
		public DistributionStructArray<Gaussian,double>[] itemTrait_B;
		/// <summary>Field backing the ItemTraitFeatureWeightPriorVariance property</summary>
		private double itemTraitFeatureWeightPriorVariance;
		public DistributionRefArray<DistributionStructArray<Gaussian,double>,double[]> ItemTraitFeatureWeights_F;
		public Gaussian ItemTraitFeatureWeights_F_reduced;
		/// <summary>Message to marginal of 'ItemTraitFeatureWeights'</summary>
		public DistributionRefArray<DistributionStructArray<Gaussian,double>,double[]> ItemTraitFeatureWeights_marginal_F;
		public DistributionRefArray<DistributionStructArray<Gaussian,double>,double[]>[] ItemTraitFeatureWeights_NonZeroItemFeatureIndices_B;
		public DistributionRefArray<DistributionStructArray<Gaussian,double>,double[]>[] ItemTraitFeatureWeights_NonZeroItemFeatureIndices_F;
		/// <summary>Message from use of 'ItemTraitFeatureWeights'</summary>
		public DistributionRefArray<DistributionStructArray<Gaussian,double>,double[]> ItemTraitFeatureWeights_use_B;
		/// <summary>Buffer for JaggedSubarrayOp&lt;double&gt;.ItemsAverageConditional&lt;DistributionStructArray&lt;Gaussian, double&gt;, Gaussian, DistributionStructArray&lt;Gaussian, double&gt;&gt;</summary>
		public DistributionStructArray<Gaussian,double>[] ItemTraitFeatureWeights_use_F_trait__marginal;
		public DistributionStructArray<Gaussian,double>[] itemTraitMean_B;
		public DistributionStructArray<Gaussian,double>[] itemTraitMean_F;
		public DistributionRefArray<DistributionStructArray<Gaussian,double>,double[]> ItemTraits_depth0_B;
		public DistributionRefArray<DistributionStructArray<Gaussian,double>,double[]> ItemTraits_depth0_F;
		/// <summary>Messages from uses of 'ItemTraits_depth0'</summary>
		public DistributionRefArray<DistributionStructArray<Gaussian,double>,double[]>[] ItemTraits_depth0_uses_B;
		/// <summary>Messages to uses of 'ItemTraits_depth0'</summary>
		public DistributionRefArray<DistributionStructArray<Gaussian,double>,double[]>[] ItemTraits_depth0_uses_F;
		/// <summary>Buffer for GetItemsOp&lt;double[]&gt;.ItemsAverageConditional&lt;DistributionRefArray&lt;DistributionStructArray&lt;Gaussian, double&gt;, double[]&gt;, DistributionStructArray&lt;Gaussian, double&gt;&gt;</summary>
		public DistributionRefArray<DistributionStructArray<Gaussian,double>,double[]> ItemTraits_depth0_uses_F_1__marginal;
		public DistributionRefArray<DistributionStructArray<Gaussian,double>,double[]> ItemTraits_F;
		public Gaussian[][] ItemTraits_index10_index10_0__index10__B;
		public DistributionRefArray<DistributionStructArray<Gaussian,double>,double[]> ItemTraits_itemItemIds_observation__F;
		/// <summary>Message to marginal of 'ItemTraits'</summary>
		public DistributionRefArray<DistributionStructArray<Gaussian,double>,double[]> ItemTraits_marginal_F;
		public Gaussian[][] ItemTraits_trait_index10_0__0__B;
		/// <summary>Message from use of 'ItemTraits'</summary>
		public DistributionRefArray<DistributionStructArray<Gaussian,double>,double[]> ItemTraits_use_B;
		/// <summary>Message to use of 'ItemTraits'</summary>
		public DistributionRefArray<DistributionStructArray<Gaussian,double>,double[]> ItemTraits_use_F;
		/// <summary>Messages from uses of 'ItemTraits_use'</summary>
		public Gaussian[][][] ItemTraits_uses_B;
		/// <summary>Messages to uses of 'ItemTraits_use'</summary>
		public Gaussian[][][] ItemTraits_uses_F;
		/// <summary>Field backing the ItemTraitsInitializer property</summary>
		private DistributionRefArray<DistributionStructArray<Gaussian,double>,double[]> itemTraitsInitializer;
		/// <summary>Field backing the ItemTraitsMessage property</summary>
		private DistributionRefArray<DistributionStructArray<Gaussian,double>,double[]> itemTraitsMessage;
		/// <summary>Field backing the ItemTraitVariance property</summary>
		private double itemTraitVariance;
		/// <summary>Field backing the MiddleUserThresholdIndex property</summary>
		private int middleUserThresholdIndex;
		/// <summary>The constant 'NextRating'</summary>
		public int[] NextRating;
		public DistributionStructArray<Gaussian,double>[] NoisyUserThresholds_F;
		/// <summary>Message from use of 'NoisyUserThresholds'</summary>
		public DistributionStructArray<Gaussian,double>[] NoisyUserThresholds_use_B;
		public DistributionStructArray<Gaussian,double>[] nonZeroItemBiasFeatureWeights_B;
		/// <summary>Field backing the NonZeroItemFeatureCounts property</summary>
		private IReadOnlyList<int> nonZeroItemFeatureCounts;
		/// <summary>Field backing the NonZeroItemFeatureIndices property</summary>
		private IReadOnlyList<IReadOnlyList<int>> nonZeroItemFeatureIndices;
		/// <summary>Field backing the NonZeroItemFeatureValues property</summary>
		private IReadOnlyList<IReadOnlyList<double>> nonZeroItemFeatureValues;
		public DistributionRefArray<DistributionStructArray<Gaussian,double>,double[]>[] nonZeroItemTraitFeatureWeights_B;
		public DistributionStructArray<Gaussian,double>[] nonZeroUserBiasFeatureWeightProducts_B;
		public DistributionStructArray<Gaussian,double>[] nonZeroUserBiasFeatureWeightProducts_F;
		public DistributionStructArray<Gaussian,double>[] nonZeroUserBiasFeatureWeights_B;
		/// <summary>Field backing the NonZeroUserFeatureCounts property</summary>
		private IReadOnlyList<int> nonZeroUserFeatureCounts;
		/// <summary>Field backing the NonZeroUserFeatureIndices property</summary>
		private IReadOnlyList<IReadOnlyList<int>> nonZeroUserFeatureIndices;
		/// <summary>Field backing the NonZeroUserFeatureValues property</summary>
		private IReadOnlyList<IReadOnlyList<double>> nonZeroUserFeatureValues;
		public DistributionRefArray<DistributionStructArray<Gaussian,double>,double[]>[] nonZeroUserTraitFeatureWeightProducts_B;
		public DistributionRefArray<DistributionStructArray<Gaussian,double>,double[]>[] nonZeroUserTraitFeatureWeightProducts_F;
		public DistributionRefArray<DistributionStructArray<Gaussian,double>,double[]>[] nonZeroUserTraitFeatureWeights_B;
		/// <summary>Field backing the NumberOfIterationsDone property</summary>
		private int numberOfIterationsDone;
		/// <summary>Field backing the ObservationCount property</summary>
		private int observationCount;
		/// <summary>Field backing the Ratings property</summary>
		private IReadOnlyList<int> ratings;
		/// <summary>Field backing the TraitCount property</summary>
		private int traitCount;
		/// <summary>Buffer for IsBetweenGaussianOp.XAverageConditional</summary>
		public double[] true_logZ;
		public DistributionStructArray<Gaussian,double> UserBias_F;
		public DistributionStructArray<Gaussian,double> UserBias_itemUserIds_observation__F;
		/// <summary>Message to marginal of 'UserBias'</summary>
		public DistributionStructArray<Gaussian,double> UserBias_marginal_F;
		/// <summary>Message from use of 'UserBias'</summary>
		public DistributionStructArray<Gaussian,double> UserBias_use_B;
		/// <summary>Message to use of 'UserBias'</summary>
		public DistributionStructArray<Gaussian,double> UserBias_use_F;
		/// <summary>Messages from uses of 'UserBias_use'</summary>
		public DistributionStructArray<Gaussian,double>[] UserBias_uses_B;
		/// <summary>Messages to uses of 'UserBias_use'</summary>
		public DistributionStructArray<Gaussian,double>[] UserBias_uses_F;
		/// <summary>Buffer for GetItemsOp&lt;double&gt;.ItemsAverageConditional&lt;DistributionStructArray&lt;Gaussian, double&gt;, Gaussian&gt;</summary>
		public DistributionStructArray<Gaussian,double> UserBias_uses_F_1__marginal;
		/// <summary>Field backing the UserBiasFeatureWeightPriorVariance property</summary>
		private double userBiasFeatureWeightPriorVariance;
		public DistributionStructArray<Gaussian,double> UserBiasFeatureWeights_F;
		public Gaussian UserBiasFeatureWeights_F_reduced;
		/// <summary>Message to marginal of 'UserBiasFeatureWeights'</summary>
		public DistributionStructArray<Gaussian,double> UserBiasFeatureWeights_marginal_F;
		public DistributionRefArray<DistributionStructArray<Gaussian,double>,double[]> UserBiasFeatureWeights_NonZeroUserFeatureIndices_F;
		/// <summary>Field backing the UserBiasInitializer property</summary>
		private DistributionStructArray<Gaussian,double> userBiasInitializer;
		public Gaussian[] userBiasMean_B;
		public Gaussian[] userBiasMean_F;
		/// <summary>Field backing the UserBiasMessage property</summary>
		private DistributionStructArray<Gaussian,double> userBiasMessage;
		public Gaussian[] userBiasObs_B;
		/// <summary>Field backing the UserBiasVariance property</summary>
		private double userBiasVariance;
		/// <summary>Field backing the UserCount property</summary>
		private int userCount;
		/// <summary>Field backing the UserFeatureCount property</summary>
		private int userFeatureCount;
		/// <summary>Field backing the UserIds property</summary>
		private IReadOnlyList<int> userIds;
		/// <summary>Field backing the UserThresholdCount property</summary>
		private int userThresholdCount;
		/// <summary>Field backing the UserThresholdNoiseVariance property</summary>
		private double userThresholdNoiseVariance;
		/// <summary>Field backing the UserThresholdPriorMean property</summary>
		private double[] userThresholdPriorMean;
		/// <summary>Field backing the UserThresholdPriorVariance property</summary>
		private double userThresholdPriorVariance;
		/// <summary>The constant 'UserThresholdPriorVarianceForThreshold'</summary>
		public double[] UserThresholdPriorVarianceForThreshold;
		public DistributionRefArray<DistributionStructArray<Gaussian,double>,double[]> UserThresholds_depth0_B;
		public DistributionRefArray<DistributionStructArray<Gaussian,double>,double[]> UserThresholds_depth0_F;
		/// <summary>Messages from uses of 'UserThresholds_depth0'</summary>
		public DistributionRefArray<DistributionStructArray<Gaussian,double>,double[]>[] UserThresholds_depth0_uses_B;
		/// <summary>Messages to uses of 'UserThresholds_depth0'</summary>
		public DistributionRefArray<DistributionStructArray<Gaussian,double>,double[]>[] UserThresholds_depth0_uses_F;
		/// <summary>Buffer for GetItemsOp&lt;double[]&gt;.ItemsAverageConditional&lt;DistributionRefArray&lt;DistributionStructArray&lt;Gaussian, double&gt;, double[]&gt;, DistributionStructArray&lt;Gaussian, double&gt;&gt;</summary>
		public DistributionRefArray<DistributionStructArray<Gaussian,double>,double[]> UserThresholds_depth0_uses_F_1__marginal;
		public DistributionStructArray<Gaussian,double> UserThresholds_F_reduced;
		public DistributionRefArray<DistributionStructArray<Gaussian,double>,double[]> UserThresholds_itemUserIds_observation__F;
		/// <summary>Message to marginal of 'UserThresholds'</summary>
		public DistributionRefArray<DistributionStructArray<Gaussian,double>,double[]> UserThresholds_marginal_F;
		public Gaussian[][] UserThresholds_rep_B;
		/// <summary>Buffer for ReplicateOp_Divide.Marginal&lt;Gaussian&gt;</summary>
		public Gaussian[] UserThresholds_rep_B_toDef;
		public Gaussian[][] UserThresholds_rep_F;
		/// <summary>Buffer for ReplicateOp_Divide.UsesAverageConditional&lt;Gaussian&gt;</summary>
		public Gaussian[] UserThresholds_rep_F_marginal;
		/// <summary>Message from use of 'UserThresholds'</summary>
		public DistributionRefArray<DistributionStructArray<Gaussian,double>,double[]> UserThresholds_use_B;
		/// <summary>Message to use of 'UserThresholds'</summary>
		public DistributionRefArray<DistributionStructArray<Gaussian,double>,double[]> UserThresholds_use_F;
		/// <summary>Messages from uses of 'UserThresholds_use'</summary>
		public Gaussian[][][] UserThresholds_uses_B;
		/// <summary>Messages to uses of 'UserThresholds_use'</summary>
		public Gaussian[][][] UserThresholds_uses_F;
		/// <summary>Field backing the UserThresholdsInitializer property</summary>
		private DistributionRefArray<DistributionStructArray<Gaussian,double>,double[]> userThresholdsInitializer;
		/// <summary>Field backing the UserThresholdsMessage property</summary>
		private DistributionRefArray<DistributionStructArray<Gaussian,double>,double[]> userThresholdsMessage;
		public DistributionStructArray<Gaussian,double>[] UserThresholdsObs_B;
		public DistributionStructArray<Gaussian,double>[] UserThresholdsObs_F;
		public DistributionStructArray<Gaussian,double>[] userTrait_B;
		public DistributionStructArray<Gaussian,double>[] userTrait_B_new;
		/// <summary>Field backing the UserTraitFeatureWeightPriorVariance property</summary>
		private double userTraitFeatureWeightPriorVariance;
		public DistributionRefArray<DistributionStructArray<Gaussian,double>,double[]> UserTraitFeatureWeights_F;
		public Gaussian UserTraitFeatureWeights_F_reduced;
		/// <summary>Message to marginal of 'UserTraitFeatureWeights'</summary>
		public DistributionRefArray<DistributionStructArray<Gaussian,double>,double[]> UserTraitFeatureWeights_marginal_F;
		public DistributionRefArray<DistributionStructArray<Gaussian,double>,double[]>[] UserTraitFeatureWeights_NonZeroUserFeatureIndices_B;
		public DistributionRefArray<DistributionStructArray<Gaussian,double>,double[]>[] UserTraitFeatureWeights_NonZeroUserFeatureIndices_F;
		/// <summary>Message from use of 'UserTraitFeatureWeights'</summary>
		public DistributionRefArray<DistributionStructArray<Gaussian,double>,double[]> UserTraitFeatureWeights_use_B;
		/// <summary>Buffer for JaggedSubarrayOp&lt;double&gt;.ItemsAverageConditional&lt;DistributionStructArray&lt;Gaussian, double&gt;, Gaussian, DistributionStructArray&lt;Gaussian, double&gt;&gt;</summary>
		public DistributionStructArray<Gaussian,double>[] UserTraitFeatureWeights_use_F_trait__marginal;
		public DistributionStructArray<Gaussian,double>[] userTraitMean_B;
		public DistributionStructArray<Gaussian,double>[] userTraitMean_F;
		public DistributionRefArray<DistributionStructArray<Gaussian,double>,double[]> UserTraits_F;
		public DistributionRefArray<DistributionStructArray<Gaussian,double>,double[]> UserTraits_itemUserIds_observation__F;
		/// <summary>Message to marginal of 'UserTraits'</summary>
		public DistributionRefArray<DistributionStructArray<Gaussian,double>,double[]> UserTraits_marginal_F;
		/// <summary>Message from use of 'UserTraits'</summary>
		public DistributionRefArray<DistributionStructArray<Gaussian,double>,double[]> UserTraits_use_B;
		/// <summary>Message to use of 'UserTraits'</summary>
		public DistributionRefArray<DistributionStructArray<Gaussian,double>,double[]> UserTraits_use_F;
		/// <summary>Messages from uses of 'UserTraits_use'</summary>
		public DistributionRefArray<DistributionStructArray<Gaussian,double>,double[]>[] UserTraits_uses_B;
		/// <summary>Messages to uses of 'UserTraits_use'</summary>
		public DistributionRefArray<DistributionStructArray<Gaussian,double>,double[]>[] UserTraits_uses_F;
		/// <summary>Buffer for GetItemsOp&lt;double[]&gt;.ItemsAverageConditional&lt;DistributionRefArray&lt;DistributionStructArray&lt;Gaussian, double&gt;, double[]&gt;, DistributionStructArray&lt;Gaussian, double&gt;&gt;</summary>
		public DistributionRefArray<DistributionStructArray<Gaussian,double>,double[]> UserTraits_uses_F_1__marginal;
		/// <summary>Field backing the UserTraitsInitializer property</summary>
		private DistributionRefArray<DistributionStructArray<Gaussian,double>,double[]> userTraitsInitializer;
		/// <summary>Field backing the UserTraitsMessage property</summary>
		private DistributionRefArray<DistributionStructArray<Gaussian,double>,double[]> userTraitsMessage;
		/// <summary>Field backing the UserTraitVariance property</summary>
		private double userTraitVariance;
		/// <summary>Field backing the UseSharedUserThresholds property</summary>
		private bool useSharedUserThresholds;
		/// <summary>The constant 'vbool3'</summary>
		public bool[][] vbool3;
		public bool vbool6_reduced;
		public DistributionRefArray<DistributionStructArray<Gaussian,double>,double[]>[] vdouble____11_B;
		public DistributionRefArray<DistributionStructArray<Gaussian,double>,double[]>[] vdouble____11_F;
		public DistributionStructArray<Gaussian,double>[] vdouble__44_B;
		public DistributionStructArray<Gaussian,double>[] vdouble__44_F;
		public DistributionStructArray<Gaussian,double>[] vdouble__51_B;
		public DistributionStructArray<Gaussian,double>[] vdouble__51_F;
		public DistributionStructArray<Gaussian,double>[] vdouble__61_B;
		public DistributionStructArray<Gaussian,double>[] vdouble__61_F;
		public Gaussian[] vdouble109_B;
		public Gaussian[] vdouble109_F;
		public Gaussian[] vdouble111_B;
		public Gaussian[] vdouble111_F;
		public Gaussian[] vdouble112_B;
		public Gaussian[] vdouble112_F;
		public Gaussian[] vdouble113_B;
		public Gaussian[] vdouble113_F;
		public Gaussian[] vdouble114_B;
		public Gaussian[] vdouble114_F;
		public Gaussian[] vdouble115_F;
		/// <summary>Message from use of 'vdouble115'</summary>
		public Gaussian[] vdouble115_use_B;
		#endregion

		#region Properties
		/// <summary>The externally-specified value of 'AffinityNoiseVariance'</summary>
		public double AffinityNoiseVariance
		{
			get {
				return this.affinityNoiseVariance;
			}
			set {
				if (this.affinityNoiseVariance!=value) {
					this.affinityNoiseVariance = value;
					this.numberOfIterationsDone = 0;
					this.Changed_numberOfIterationsDecreased_ObservationCount_Ratings_UserThresholdCount_Init_AffinityNoiseVa38_isInitialised = false;
					this.Changed_numberOfIterationsDecreased_ObservationCount_UserThresholdCount_UseSharedUserThresholds_Init33_isInitialised = false;
					this.Changed_numberOfIterationsDecreased_ObservationCount_UserThresholdCount_Init_AffinityNoiseVariance_I35_isInitialised = false;
					this.Changed_numberOfIterationsDecreased_ObservationCount_Init_AffinityNoiseVariance_ItemBiasFeatureWeigh31_isInitialised = false;
					this.Changed_numberOfIterationsDecreased_ObservationCount_TraitCount_Init_AffinityNoiseVariance_ItemBiasF30_isInitialised = false;
					this.Changed_ItemFeatureCount_numberOfIterationsDecreased_TraitCount_Init_AffinityNoiseVariance_ItemBiasF47_isInitialised = false;
					this.Changed_numberOfIterationsDecreased_TraitCount_UserFeatureCount_Init_AffinityNoiseVariance_ItemBiasF39_isInitialised = false;
					this.Changed_ItemCount_NonZeroItemFeatureCounts_numberOfIterationsDecreased_Init_AffinityNoiseVariance_It52_isInitialised = false;
					this.Changed_ItemBiasFeatureWeightPriorVariance_ItemCount_ItemFeatureCount_NonZeroItemFeatureCounts_NonZe55_isInitialised = false;
					this.Changed_ItemBiasInitializer_ItemCount_numberOfIterationsDecreased_Init_AffinityNoiseVariance_ItemBia19_isInitialised = false;
					this.Changed_ItemCount_numberOfIterationsDecreased_Init_AffinityNoiseVariance_ItemBiasFeatureWeightPriorV8_isInitialised = false;
					this.Changed_ItemCount_NonZeroItemFeatureCounts_numberOfIterationsDecreased_TraitCount_Init_AffinityNoise50_isInitialised = false;
					this.Changed_ItemCount_ItemTraitsInitializer_numberOfIterationsDecreased_TraitCount_Init_AffinityNoiseVar14_isInitialised = false;
					this.Changed_ItemCount_numberOfIterationsDecreased_TraitCount_Init_AffinityNoiseVariance_ItemBiasFeatureW6_isInitialised = false;
					this.Changed_NonZeroUserFeatureCounts_numberOfIterationsDecreased_UserCount_Init_AffinityNoiseVariance_It44_isInitialised = false;
					this.Changed_NonZeroUserFeatureCounts_NonZeroUserFeatureIndices_numberOfIterationsDecreased_UserBiasFeatu45_isInitialised = false;
					this.Changed_numberOfIterationsDecreased_UserBiasInitializer_UserCount_Init_AffinityNoiseVariance_ItemBia17_isInitialised = false;
					this.Changed_numberOfIterationsDecreased_UserCount_UserThresholdCount_UserThresholdsInitializer_Init_Affi23_isInitialised = false;
					this.Changed_numberOfIterationsDecreased_UserCount_UserThresholdCount_Init_AffinityNoiseVariance_ItemBias20_isInitialised = false;
					this.Changed_numberOfIterationsDecreased_UserCount_UserThresholdCount_UseSharedUserThresholds_Init_Affini21_isInitialised = false;
					this.Changed_numberOfIterationsDecreased_UserCount_Init_AffinityNoiseVariance_ItemBiasFeatureWeightPriorV7_isInitialised = false;
					this.Changed_NonZeroUserFeatureCounts_numberOfIterationsDecreased_TraitCount_UserCount_Init_AffinityNoise42_isInitialised = false;
					this.Changed_numberOfIterationsDecreased_TraitCount_UserCount_UserTraitsInitializer_Init_AffinityNoiseVar27_isInitialised = false;
					this.Changed_numberOfIterationsDecreased_TraitCount_UserCount_Init_AffinityNoiseVariance_ItemBiasFeatureW3_isInitialised = false;
					this.Changed_AffinityNoiseVariance_ItemBiasFeatureWeightPriorVariance_ItemBiasInitializer_ItemBiasMessage59_isDone = false;
					this.Changed_AffinityNoiseVariance_ItemBiasFeatureWeightPriorVariance_ItemBiasInitializer_ItemBiasMessage60_isDone = false;
				}
			}
		}

		/// <summary>The externally-specified value of 'ItemBiasFeatureWeightPriorVariance'</summary>
		public double ItemBiasFeatureWeightPriorVariance
		{
			get {
				return this.itemBiasFeatureWeightPriorVariance;
			}
			set {
				if (this.itemBiasFeatureWeightPriorVariance!=value) {
					this.itemBiasFeatureWeightPriorVariance = value;
					this.numberOfIterationsDone = 0;
					this.Changed_ItemBiasFeatureWeightPriorVariance_ItemFeatureCount_isDone = false;
					this.Changed_numberOfIterationsDecreased_ObservationCount_Ratings_UserThresholdCount_Init_AffinityNoiseVa38_isInitialised = false;
					this.Changed_numberOfIterationsDecreased_ObservationCount_UserThresholdCount_UseSharedUserThresholds_Init33_isInitialised = false;
					this.Changed_numberOfIterationsDecreased_ObservationCount_UserThresholdCount_Init_AffinityNoiseVariance_I35_isInitialised = false;
					this.Changed_numberOfIterationsDecreased_ObservationCount_Init_AffinityNoiseVariance_ItemBiasFeatureWeigh31_isInitialised = false;
					this.Changed_numberOfIterationsDecreased_ObservationCount_TraitCount_Init_AffinityNoiseVariance_ItemBiasF30_isInitialised = false;
					this.Changed_ItemFeatureCount_numberOfIterationsDecreased_TraitCount_Init_AffinityNoiseVariance_ItemBiasF47_isInitialised = false;
					this.Changed_numberOfIterationsDecreased_TraitCount_UserFeatureCount_Init_AffinityNoiseVariance_ItemBiasF39_isInitialised = false;
					this.Changed_ItemCount_NonZeroItemFeatureCounts_numberOfIterationsDecreased_Init_AffinityNoiseVariance_It52_isInitialised = false;
					this.Changed_ItemBiasFeatureWeightPriorVariance_ItemCount_ItemFeatureCount_NonZeroItemFeatureCounts_NonZe55_isDone = false;
					this.Changed_ItemBiasInitializer_ItemCount_numberOfIterationsDecreased_Init_AffinityNoiseVariance_ItemBia19_isInitialised = false;
					this.Changed_ItemCount_numberOfIterationsDecreased_Init_AffinityNoiseVariance_ItemBiasFeatureWeightPriorV8_isInitialised = false;
					this.Changed_ItemCount_NonZeroItemFeatureCounts_numberOfIterationsDecreased_TraitCount_Init_AffinityNoise50_isInitialised = false;
					this.Changed_ItemCount_ItemTraitsInitializer_numberOfIterationsDecreased_TraitCount_Init_AffinityNoiseVar14_isInitialised = false;
					this.Changed_ItemCount_numberOfIterationsDecreased_TraitCount_Init_AffinityNoiseVariance_ItemBiasFeatureW6_isInitialised = false;
					this.Changed_NonZeroUserFeatureCounts_numberOfIterationsDecreased_UserCount_Init_AffinityNoiseVariance_It44_isInitialised = false;
					this.Changed_NonZeroUserFeatureCounts_NonZeroUserFeatureIndices_numberOfIterationsDecreased_UserBiasFeatu45_isInitialised = false;
					this.Changed_numberOfIterationsDecreased_UserBiasInitializer_UserCount_Init_AffinityNoiseVariance_ItemBia17_isInitialised = false;
					this.Changed_numberOfIterationsDecreased_UserCount_UserThresholdCount_UserThresholdsInitializer_Init_Affi23_isInitialised = false;
					this.Changed_numberOfIterationsDecreased_UserCount_UserThresholdCount_Init_AffinityNoiseVariance_ItemBias20_isInitialised = false;
					this.Changed_numberOfIterationsDecreased_UserCount_UserThresholdCount_UseSharedUserThresholds_Init_Affini21_isInitialised = false;
					this.Changed_numberOfIterationsDecreased_UserCount_Init_AffinityNoiseVariance_ItemBiasFeatureWeightPriorV7_isInitialised = false;
					this.Changed_NonZeroUserFeatureCounts_numberOfIterationsDecreased_TraitCount_UserCount_Init_AffinityNoise42_isInitialised = false;
					this.Changed_numberOfIterationsDecreased_TraitCount_UserCount_UserTraitsInitializer_Init_AffinityNoiseVar27_isInitialised = false;
					this.Changed_numberOfIterationsDecreased_TraitCount_UserCount_Init_AffinityNoiseVariance_ItemBiasFeatureW3_isInitialised = false;
					this.Changed_AffinityNoiseVariance_ItemBiasFeatureWeightPriorVariance_ItemBiasInitializer_ItemBiasMessage59_isDone = false;
					this.Changed_AffinityNoiseVariance_ItemBiasFeatureWeightPriorVariance_ItemBiasInitializer_ItemBiasMessage60_isDone = false;
				}
			}
		}

		/// <summary>The externally-specified value of 'ItemBiasInitializer'</summary>
		public DistributionStructArray<Gaussian,double> ItemBiasInitializer
		{
			get {
				return this.itemBiasInitializer;
			}
			set {
				this.itemBiasInitializer = value;
				this.numberOfIterationsDone = 0;
				this.Changed_numberOfIterationsDecreased_ObservationCount_Ratings_UserThresholdCount_Init_AffinityNoiseVa38_isInitialised = false;
				this.Changed_numberOfIterationsDecreased_ObservationCount_UserThresholdCount_UseSharedUserThresholds_Init33_isInitialised = false;
				this.Changed_numberOfIterationsDecreased_ObservationCount_UserThresholdCount_Init_AffinityNoiseVariance_I35_isInitialised = false;
				this.Changed_numberOfIterationsDecreased_ObservationCount_Init_AffinityNoiseVariance_ItemBiasFeatureWeigh31_isInitialised = false;
				this.Changed_numberOfIterationsDecreased_ObservationCount_TraitCount_Init_AffinityNoiseVariance_ItemBiasF30_isInitialised = false;
				this.Changed_ItemFeatureCount_numberOfIterationsDecreased_TraitCount_Init_AffinityNoiseVariance_ItemBiasF47_isInitialised = false;
				this.Changed_numberOfIterationsDecreased_TraitCount_UserFeatureCount_Init_AffinityNoiseVariance_ItemBiasF39_isInitialised = false;
				this.Changed_ItemBiasInitializer_ItemCount_isDone = false;
				this.Changed_ItemCount_NonZeroItemFeatureCounts_numberOfIterationsDecreased_Init_AffinityNoiseVariance_It52_isInitialised = false;
				this.Changed_ItemBiasFeatureWeightPriorVariance_ItemCount_ItemFeatureCount_NonZeroItemFeatureCounts_NonZe55_isInitialised = false;
				this.Changed_ItemBiasInitializer_ItemCount_numberOfIterationsDecreased_Init_AffinityNoiseVariance_ItemBia19_isDone = false;
				this.Changed_ItemCount_numberOfIterationsDecreased_Init_AffinityNoiseVariance_ItemBiasFeatureWeightPriorV8_isInitialised = false;
				this.Changed_ItemCount_NonZeroItemFeatureCounts_numberOfIterationsDecreased_TraitCount_Init_AffinityNoise50_isInitialised = false;
				this.Changed_ItemCount_ItemTraitsInitializer_numberOfIterationsDecreased_TraitCount_Init_AffinityNoiseVar14_isInitialised = false;
				this.Changed_ItemCount_numberOfIterationsDecreased_TraitCount_Init_AffinityNoiseVariance_ItemBiasFeatureW6_isInitialised = false;
				this.Changed_NonZeroUserFeatureCounts_numberOfIterationsDecreased_UserCount_Init_AffinityNoiseVariance_It44_isInitialised = false;
				this.Changed_NonZeroUserFeatureCounts_NonZeroUserFeatureIndices_numberOfIterationsDecreased_UserBiasFeatu45_isInitialised = false;
				this.Changed_numberOfIterationsDecreased_UserBiasInitializer_UserCount_Init_AffinityNoiseVariance_ItemBia17_isInitialised = false;
				this.Changed_numberOfIterationsDecreased_UserCount_UserThresholdCount_UserThresholdsInitializer_Init_Affi23_isInitialised = false;
				this.Changed_numberOfIterationsDecreased_UserCount_UserThresholdCount_Init_AffinityNoiseVariance_ItemBias20_isInitialised = false;
				this.Changed_numberOfIterationsDecreased_UserCount_UserThresholdCount_UseSharedUserThresholds_Init_Affini21_isInitialised = false;
				this.Changed_numberOfIterationsDecreased_UserCount_Init_AffinityNoiseVariance_ItemBiasFeatureWeightPriorV7_isInitialised = false;
				this.Changed_NonZeroUserFeatureCounts_numberOfIterationsDecreased_TraitCount_UserCount_Init_AffinityNoise42_isInitialised = false;
				this.Changed_numberOfIterationsDecreased_TraitCount_UserCount_UserTraitsInitializer_Init_AffinityNoiseVar27_isInitialised = false;
				this.Changed_numberOfIterationsDecreased_TraitCount_UserCount_Init_AffinityNoiseVariance_ItemBiasFeatureW3_isInitialised = false;
				this.Changed_AffinityNoiseVariance_ItemBiasFeatureWeightPriorVariance_ItemBiasInitializer_ItemBiasMessage59_isDone = false;
				this.Changed_AffinityNoiseVariance_ItemBiasFeatureWeightPriorVariance_ItemBiasInitializer_ItemBiasMessage60_isDone = false;
			}
		}

		/// <summary>The externally-specified value of 'ItemBiasMessage'</summary>
		public DistributionStructArray<Gaussian,double> ItemBiasMessage
		{
			get {
				return this.itemBiasMessage;
			}
			set {
				this.itemBiasMessage = value;
				this.numberOfIterationsDone = 0;
				this.Changed_numberOfIterationsDecreased_ObservationCount_Ratings_UserThresholdCount_Init_AffinityNoiseVa38_isInitialised = false;
				this.Changed_numberOfIterationsDecreased_ObservationCount_UserThresholdCount_UseSharedUserThresholds_Init33_isInitialised = false;
				this.Changed_numberOfIterationsDecreased_ObservationCount_UserThresholdCount_Init_AffinityNoiseVariance_I35_isInitialised = false;
				this.Changed_numberOfIterationsDecreased_ObservationCount_Init_AffinityNoiseVariance_ItemBiasFeatureWeigh31_isInitialised = false;
				this.Changed_numberOfIterationsDecreased_ObservationCount_TraitCount_Init_AffinityNoiseVariance_ItemBiasF30_isInitialised = false;
				this.Changed_ItemFeatureCount_numberOfIterationsDecreased_TraitCount_Init_AffinityNoiseVariance_ItemBiasF47_isInitialised = false;
				this.Changed_numberOfIterationsDecreased_TraitCount_UserFeatureCount_Init_AffinityNoiseVariance_ItemBiasF39_isInitialised = false;
				this.Changed_ItemCount_NonZeroItemFeatureCounts_numberOfIterationsDecreased_Init_AffinityNoiseVariance_It52_isInitialised = false;
				this.Changed_ItemBiasFeatureWeightPriorVariance_ItemCount_ItemFeatureCount_NonZeroItemFeatureCounts_NonZe55_isInitialised = false;
				this.Changed_ItemBiasInitializer_ItemCount_numberOfIterationsDecreased_Init_AffinityNoiseVariance_ItemBia19_isInitialised = false;
				this.Changed_ItemBiasMessage_ItemCount_isDone = false;
				this.Changed_ItemCount_numberOfIterationsDecreased_Init_AffinityNoiseVariance_ItemBiasFeatureWeightPriorV8_isInitialised = false;
				this.Changed_ItemCount_NonZeroItemFeatureCounts_numberOfIterationsDecreased_TraitCount_Init_AffinityNoise50_isInitialised = false;
				this.Changed_ItemCount_ItemTraitsInitializer_numberOfIterationsDecreased_TraitCount_Init_AffinityNoiseVar14_isInitialised = false;
				this.Changed_ItemCount_numberOfIterationsDecreased_TraitCount_Init_AffinityNoiseVariance_ItemBiasFeatureW6_isInitialised = false;
				this.Changed_NonZeroUserFeatureCounts_numberOfIterationsDecreased_UserCount_Init_AffinityNoiseVariance_It44_isInitialised = false;
				this.Changed_NonZeroUserFeatureCounts_NonZeroUserFeatureIndices_numberOfIterationsDecreased_UserBiasFeatu45_isInitialised = false;
				this.Changed_numberOfIterationsDecreased_UserBiasInitializer_UserCount_Init_AffinityNoiseVariance_ItemBia17_isInitialised = false;
				this.Changed_numberOfIterationsDecreased_UserCount_UserThresholdCount_UserThresholdsInitializer_Init_Affi23_isInitialised = false;
				this.Changed_numberOfIterationsDecreased_UserCount_UserThresholdCount_Init_AffinityNoiseVariance_ItemBias20_isInitialised = false;
				this.Changed_numberOfIterationsDecreased_UserCount_UserThresholdCount_UseSharedUserThresholds_Init_Affini21_isInitialised = false;
				this.Changed_numberOfIterationsDecreased_UserCount_Init_AffinityNoiseVariance_ItemBiasFeatureWeightPriorV7_isInitialised = false;
				this.Changed_NonZeroUserFeatureCounts_numberOfIterationsDecreased_TraitCount_UserCount_Init_AffinityNoise42_isInitialised = false;
				this.Changed_numberOfIterationsDecreased_TraitCount_UserCount_UserTraitsInitializer_Init_AffinityNoiseVar27_isInitialised = false;
				this.Changed_numberOfIterationsDecreased_TraitCount_UserCount_Init_AffinityNoiseVariance_ItemBiasFeatureW3_isInitialised = false;
				this.Changed_AffinityNoiseVariance_ItemBiasFeatureWeightPriorVariance_ItemBiasInitializer_ItemBiasMessage59_isDone = false;
				this.Changed_AffinityNoiseVariance_ItemBiasFeatureWeightPriorVariance_ItemBiasInitializer_ItemBiasMessage60_isDone = false;
			}
		}

		/// <summary>The externally-specified value of 'ItemBiasVariance'</summary>
		public double ItemBiasVariance
		{
			get {
				return this.itemBiasVariance;
			}
			set {
				if (this.itemBiasVariance!=value) {
					this.itemBiasVariance = value;
					this.numberOfIterationsDone = 0;
					this.Changed_numberOfIterationsDecreased_ObservationCount_Ratings_UserThresholdCount_Init_AffinityNoiseVa38_isInitialised = false;
					this.Changed_numberOfIterationsDecreased_ObservationCount_UserThresholdCount_UseSharedUserThresholds_Init33_isInitialised = false;
					this.Changed_numberOfIterationsDecreased_ObservationCount_UserThresholdCount_Init_AffinityNoiseVariance_I35_isInitialised = false;
					this.Changed_numberOfIterationsDecreased_ObservationCount_Init_AffinityNoiseVariance_ItemBiasFeatureWeigh31_isInitialised = false;
					this.Changed_numberOfIterationsDecreased_ObservationCount_TraitCount_Init_AffinityNoiseVariance_ItemBiasF30_isInitialised = false;
					this.Changed_ItemFeatureCount_numberOfIterationsDecreased_TraitCount_Init_AffinityNoiseVariance_ItemBiasF47_isInitialised = false;
					this.Changed_numberOfIterationsDecreased_TraitCount_UserFeatureCount_Init_AffinityNoiseVariance_ItemBiasF39_isInitialised = false;
					this.Changed_ItemCount_NonZeroItemFeatureCounts_numberOfIterationsDecreased_Init_AffinityNoiseVariance_It52_isInitialised = false;
					this.Changed_ItemBiasFeatureWeightPriorVariance_ItemCount_ItemFeatureCount_NonZeroItemFeatureCounts_NonZe55_isInitialised = false;
					this.Changed_ItemBiasInitializer_ItemCount_numberOfIterationsDecreased_Init_AffinityNoiseVariance_ItemBia19_isInitialised = false;
					this.Changed_ItemCount_numberOfIterationsDecreased_Init_AffinityNoiseVariance_ItemBiasFeatureWeightPriorV8_isInitialised = false;
					this.Changed_ItemCount_NonZeroItemFeatureCounts_numberOfIterationsDecreased_TraitCount_Init_AffinityNoise50_isInitialised = false;
					this.Changed_ItemCount_ItemTraitsInitializer_numberOfIterationsDecreased_TraitCount_Init_AffinityNoiseVar14_isInitialised = false;
					this.Changed_ItemCount_numberOfIterationsDecreased_TraitCount_Init_AffinityNoiseVariance_ItemBiasFeatureW6_isInitialised = false;
					this.Changed_NonZeroUserFeatureCounts_numberOfIterationsDecreased_UserCount_Init_AffinityNoiseVariance_It44_isInitialised = false;
					this.Changed_NonZeroUserFeatureCounts_NonZeroUserFeatureIndices_numberOfIterationsDecreased_UserBiasFeatu45_isInitialised = false;
					this.Changed_numberOfIterationsDecreased_UserBiasInitializer_UserCount_Init_AffinityNoiseVariance_ItemBia17_isInitialised = false;
					this.Changed_numberOfIterationsDecreased_UserCount_UserThresholdCount_UserThresholdsInitializer_Init_Affi23_isInitialised = false;
					this.Changed_numberOfIterationsDecreased_UserCount_UserThresholdCount_Init_AffinityNoiseVariance_ItemBias20_isInitialised = false;
					this.Changed_numberOfIterationsDecreased_UserCount_UserThresholdCount_UseSharedUserThresholds_Init_Affini21_isInitialised = false;
					this.Changed_numberOfIterationsDecreased_UserCount_Init_AffinityNoiseVariance_ItemBiasFeatureWeightPriorV7_isInitialised = false;
					this.Changed_NonZeroUserFeatureCounts_numberOfIterationsDecreased_TraitCount_UserCount_Init_AffinityNoise42_isInitialised = false;
					this.Changed_numberOfIterationsDecreased_TraitCount_UserCount_UserTraitsInitializer_Init_AffinityNoiseVar27_isInitialised = false;
					this.Changed_numberOfIterationsDecreased_TraitCount_UserCount_Init_AffinityNoiseVariance_ItemBiasFeatureW3_isInitialised = false;
					this.Changed_AffinityNoiseVariance_ItemBiasFeatureWeightPriorVariance_ItemBiasInitializer_ItemBiasMessage59_isDone = false;
					this.Changed_AffinityNoiseVariance_ItemBiasFeatureWeightPriorVariance_ItemBiasInitializer_ItemBiasMessage60_isDone = false;
				}
			}
		}

		/// <summary>The externally-specified value of 'ItemCount'</summary>
		public int ItemCount
		{
			get {
				return this.itemCount;
			}
			set {
				if (this.itemCount!=value) {
					this.itemCount = value;
					this.numberOfIterationsDone = 0;
					this.Changed_numberOfIterationsDecreased_ObservationCount_Ratings_UserThresholdCount_Init_AffinityNoiseVa38_isInitialised = false;
					this.Changed_numberOfIterationsDecreased_ObservationCount_UserThresholdCount_UseSharedUserThresholds_Init33_isInitialised = false;
					this.Changed_numberOfIterationsDecreased_ObservationCount_UserThresholdCount_Init_AffinityNoiseVariance_I35_isInitialised = false;
					this.Changed_numberOfIterationsDecreased_ObservationCount_Init_AffinityNoiseVariance_ItemBiasFeatureWeigh31_isInitialised = false;
					this.Changed_numberOfIterationsDecreased_ObservationCount_TraitCount_Init_AffinityNoiseVariance_ItemBiasF30_isInitialised = false;
					this.Changed_ItemFeatureCount_numberOfIterationsDecreased_TraitCount_Init_AffinityNoiseVariance_ItemBiasF47_isInitialised = false;
					this.Changed_numberOfIterationsDecreased_TraitCount_UserFeatureCount_Init_AffinityNoiseVariance_ItemBiasF39_isInitialised = false;
					this.Changed_ItemCount_isDone = false;
					this.Changed_ItemBiasInitializer_ItemCount_isDone = false;
					this.Changed_ItemCount_NonZeroItemFeatureCounts_isDone = false;
					this.Changed_ItemCount_NonZeroItemFeatureCounts_numberOfIterationsDecreased_Init_AffinityNoiseVariance_It52_isDone = false;
					this.Changed_ItemBiasFeatureWeightPriorVariance_ItemCount_ItemFeatureCount_NonZeroItemFeatureCounts_NonZe55_isDone = false;
					this.Changed_ItemBiasInitializer_ItemCount_numberOfIterationsDecreased_Init_AffinityNoiseVariance_ItemBia19_isDone = false;
					this.Changed_ItemBiasMessage_ItemCount_isDone = false;
					this.Changed_ItemCount_numberOfIterationsDecreased_Init_AffinityNoiseVariance_ItemBiasFeatureWeightPriorV8_isDone = false;
					this.Changed_ItemCount_TraitCount_isDone = false;
					this.Changed_ItemCount_ItemTraitsInitializer_TraitCount_isDone = false;
					this.Changed_ItemCount_NonZeroItemFeatureCounts_TraitCount_isDone = false;
					this.Changed_ItemCount_NonZeroItemFeatureCounts_numberOfIterationsDecreased_TraitCount_Init_AffinityNoise50_isDone = false;
					this.Changed_ItemCount_ItemTraitsMessage_TraitCount_isDone = false;
					this.Changed_ItemCount_ItemTraitsInitializer_numberOfIterationsDecreased_TraitCount_Init_AffinityNoiseVar14_isDone = false;
					this.Changed_ItemCount_numberOfIterationsDecreased_TraitCount_Init_AffinityNoiseVariance_ItemBiasFeatureW6_isDone = false;
					this.Changed_NonZeroUserFeatureCounts_numberOfIterationsDecreased_UserCount_Init_AffinityNoiseVariance_It44_isInitialised = false;
					this.Changed_NonZeroUserFeatureCounts_NonZeroUserFeatureIndices_numberOfIterationsDecreased_UserBiasFeatu45_isInitialised = false;
					this.Changed_numberOfIterationsDecreased_UserBiasInitializer_UserCount_Init_AffinityNoiseVariance_ItemBia17_isInitialised = false;
					this.Changed_numberOfIterationsDecreased_UserCount_UserThresholdCount_UserThresholdsInitializer_Init_Affi23_isInitialised = false;
					this.Changed_numberOfIterationsDecreased_UserCount_UserThresholdCount_Init_AffinityNoiseVariance_ItemBias20_isInitialised = false;
					this.Changed_numberOfIterationsDecreased_UserCount_UserThresholdCount_UseSharedUserThresholds_Init_Affini21_isInitialised = false;
					this.Changed_numberOfIterationsDecreased_UserCount_Init_AffinityNoiseVariance_ItemBiasFeatureWeightPriorV7_isInitialised = false;
					this.Changed_NonZeroUserFeatureCounts_numberOfIterationsDecreased_TraitCount_UserCount_Init_AffinityNoise42_isInitialised = false;
					this.Changed_numberOfIterationsDecreased_TraitCount_UserCount_UserTraitsInitializer_Init_AffinityNoiseVar27_isInitialised = false;
					this.Changed_numberOfIterationsDecreased_TraitCount_UserCount_Init_AffinityNoiseVariance_ItemBiasFeatureW3_isInitialised = false;
					this.Changed_AffinityNoiseVariance_ItemBiasFeatureWeightPriorVariance_ItemBiasInitializer_ItemBiasMessage59_isDone = false;
					this.Changed_AffinityNoiseVariance_ItemBiasFeatureWeightPriorVariance_ItemBiasInitializer_ItemBiasMessage60_isDone = false;
				}
			}
		}

		/// <summary>The externally-specified value of 'ItemFeatureCount'</summary>
		public int ItemFeatureCount
		{
			get {
				return this.itemFeatureCount;
			}
			set {
				if (this.itemFeatureCount!=value) {
					this.itemFeatureCount = value;
					this.numberOfIterationsDone = 0;
					this.Changed_ItemFeatureCount_isDone = false;
					this.Changed_ItemBiasFeatureWeightPriorVariance_ItemFeatureCount_isDone = false;
					this.Changed_numberOfIterationsDecreased_ObservationCount_Ratings_UserThresholdCount_Init_AffinityNoiseVa38_isInitialised = false;
					this.Changed_numberOfIterationsDecreased_ObservationCount_UserThresholdCount_UseSharedUserThresholds_Init33_isInitialised = false;
					this.Changed_numberOfIterationsDecreased_ObservationCount_UserThresholdCount_Init_AffinityNoiseVariance_I35_isInitialised = false;
					this.Changed_numberOfIterationsDecreased_ObservationCount_Init_AffinityNoiseVariance_ItemBiasFeatureWeigh31_isInitialised = false;
					this.Changed_numberOfIterationsDecreased_ObservationCount_TraitCount_Init_AffinityNoiseVariance_ItemBiasF30_isInitialised = false;
					this.Changed_ItemFeatureCount_TraitCount_isDone = false;
					this.Changed_ItemFeatureCount_ItemTraitFeatureWeightPriorVariance_TraitCount_isDone = false;
					this.Changed_ItemFeatureCount_numberOfIterationsDecreased_TraitCount_Init_AffinityNoiseVariance_ItemBiasF47_isDone = false;
					this.Changed_numberOfIterationsDecreased_TraitCount_UserFeatureCount_Init_AffinityNoiseVariance_ItemBiasF39_isInitialised = false;
					this.Changed_ItemCount_NonZeroItemFeatureCounts_numberOfIterationsDecreased_Init_AffinityNoiseVariance_It52_isInitialised = false;
					this.Changed_ItemBiasFeatureWeightPriorVariance_ItemCount_ItemFeatureCount_NonZeroItemFeatureCounts_NonZe55_isDone = false;
					this.Changed_ItemBiasInitializer_ItemCount_numberOfIterationsDecreased_Init_AffinityNoiseVariance_ItemBia19_isInitialised = false;
					this.Changed_ItemCount_numberOfIterationsDecreased_Init_AffinityNoiseVariance_ItemBiasFeatureWeightPriorV8_isInitialised = false;
					this.Changed_ItemCount_NonZeroItemFeatureCounts_numberOfIterationsDecreased_TraitCount_Init_AffinityNoise50_isInitialised = false;
					this.Changed_ItemCount_ItemTraitsInitializer_numberOfIterationsDecreased_TraitCount_Init_AffinityNoiseVar14_isInitialised = false;
					this.Changed_ItemCount_numberOfIterationsDecreased_TraitCount_Init_AffinityNoiseVariance_ItemBiasFeatureW6_isInitialised = false;
					this.Changed_NonZeroUserFeatureCounts_numberOfIterationsDecreased_UserCount_Init_AffinityNoiseVariance_It44_isInitialised = false;
					this.Changed_NonZeroUserFeatureCounts_NonZeroUserFeatureIndices_numberOfIterationsDecreased_UserBiasFeatu45_isInitialised = false;
					this.Changed_numberOfIterationsDecreased_UserBiasInitializer_UserCount_Init_AffinityNoiseVariance_ItemBia17_isInitialised = false;
					this.Changed_numberOfIterationsDecreased_UserCount_UserThresholdCount_UserThresholdsInitializer_Init_Affi23_isInitialised = false;
					this.Changed_numberOfIterationsDecreased_UserCount_UserThresholdCount_Init_AffinityNoiseVariance_ItemBias20_isInitialised = false;
					this.Changed_numberOfIterationsDecreased_UserCount_UserThresholdCount_UseSharedUserThresholds_Init_Affini21_isInitialised = false;
					this.Changed_numberOfIterationsDecreased_UserCount_Init_AffinityNoiseVariance_ItemBiasFeatureWeightPriorV7_isInitialised = false;
					this.Changed_NonZeroUserFeatureCounts_numberOfIterationsDecreased_TraitCount_UserCount_Init_AffinityNoise42_isInitialised = false;
					this.Changed_numberOfIterationsDecreased_TraitCount_UserCount_UserTraitsInitializer_Init_AffinityNoiseVar27_isInitialised = false;
					this.Changed_numberOfIterationsDecreased_TraitCount_UserCount_Init_AffinityNoiseVariance_ItemBiasFeatureW3_isInitialised = false;
					this.Changed_AffinityNoiseVariance_ItemBiasFeatureWeightPriorVariance_ItemBiasInitializer_ItemBiasMessage59_isDone = false;
					this.Changed_AffinityNoiseVariance_ItemBiasFeatureWeightPriorVariance_ItemBiasInitializer_ItemBiasMessage60_isDone = false;
				}
			}
		}

		/// <summary>The externally-specified value of 'ItemIds'</summary>
		public IReadOnlyList<int> ItemIds
		{
			get {
				return this.itemIds;
			}
			set {
				if ((value!=null)&&(value.Count!=this.observationCount)) {
					throw new ArgumentException(((("Provided array of length "+value.Count)+" when length ")+this.observationCount)+" was expected for variable \'ItemIds\'");
				}
				this.itemIds = value;
				this.numberOfIterationsDone = 0;
				this.Changed_numberOfIterationsDecreased_ObservationCount_Ratings_UserThresholdCount_Init_AffinityNoiseVa38_isInitialised = false;
				this.Changed_numberOfIterationsDecreased_ObservationCount_UserThresholdCount_UseSharedUserThresholds_Init33_isInitialised = false;
				this.Changed_numberOfIterationsDecreased_ObservationCount_UserThresholdCount_Init_AffinityNoiseVariance_I35_isInitialised = false;
				this.Changed_numberOfIterationsDecreased_ObservationCount_Init_AffinityNoiseVariance_ItemBiasFeatureWeigh31_isInitialised = false;
				this.Changed_numberOfIterationsDecreased_ObservationCount_TraitCount_Init_AffinityNoiseVariance_ItemBiasF30_isInitialised = false;
				this.Changed_ItemFeatureCount_numberOfIterationsDecreased_TraitCount_Init_AffinityNoiseVariance_ItemBiasF47_isInitialised = false;
				this.Changed_numberOfIterationsDecreased_TraitCount_UserFeatureCount_Init_AffinityNoiseVariance_ItemBiasF39_isInitialised = false;
				this.Changed_ItemCount_NonZeroItemFeatureCounts_numberOfIterationsDecreased_Init_AffinityNoiseVariance_It52_isInitialised = false;
				this.Changed_ItemBiasFeatureWeightPriorVariance_ItemCount_ItemFeatureCount_NonZeroItemFeatureCounts_NonZe55_isInitialised = false;
				this.Changed_ItemBiasInitializer_ItemCount_numberOfIterationsDecreased_Init_AffinityNoiseVariance_ItemBia19_isInitialised = false;
				this.Changed_ItemCount_numberOfIterationsDecreased_Init_AffinityNoiseVariance_ItemBiasFeatureWeightPriorV8_isInitialised = false;
				this.Changed_ItemCount_NonZeroItemFeatureCounts_numberOfIterationsDecreased_TraitCount_Init_AffinityNoise50_isInitialised = false;
				this.Changed_ItemCount_ItemTraitsInitializer_numberOfIterationsDecreased_TraitCount_Init_AffinityNoiseVar14_isInitialised = false;
				this.Changed_ItemCount_numberOfIterationsDecreased_TraitCount_Init_AffinityNoiseVariance_ItemBiasFeatureW6_isInitialised = false;
				this.Changed_NonZeroUserFeatureCounts_numberOfIterationsDecreased_UserCount_Init_AffinityNoiseVariance_It44_isInitialised = false;
				this.Changed_NonZeroUserFeatureCounts_NonZeroUserFeatureIndices_numberOfIterationsDecreased_UserBiasFeatu45_isInitialised = false;
				this.Changed_numberOfIterationsDecreased_UserBiasInitializer_UserCount_Init_AffinityNoiseVariance_ItemBia17_isInitialised = false;
				this.Changed_numberOfIterationsDecreased_UserCount_UserThresholdCount_UserThresholdsInitializer_Init_Affi23_isInitialised = false;
				this.Changed_numberOfIterationsDecreased_UserCount_UserThresholdCount_Init_AffinityNoiseVariance_ItemBias20_isInitialised = false;
				this.Changed_numberOfIterationsDecreased_UserCount_UserThresholdCount_UseSharedUserThresholds_Init_Affini21_isInitialised = false;
				this.Changed_numberOfIterationsDecreased_UserCount_Init_AffinityNoiseVariance_ItemBiasFeatureWeightPriorV7_isInitialised = false;
				this.Changed_NonZeroUserFeatureCounts_numberOfIterationsDecreased_TraitCount_UserCount_Init_AffinityNoise42_isInitialised = false;
				this.Changed_numberOfIterationsDecreased_TraitCount_UserCount_UserTraitsInitializer_Init_AffinityNoiseVar27_isInitialised = false;
				this.Changed_numberOfIterationsDecreased_TraitCount_UserCount_Init_AffinityNoiseVariance_ItemBiasFeatureW3_isInitialised = false;
				this.Changed_AffinityNoiseVariance_ItemBiasFeatureWeightPriorVariance_ItemBiasInitializer_ItemBiasMessage59_isDone = false;
				this.Changed_AffinityNoiseVariance_ItemBiasFeatureWeightPriorVariance_ItemBiasInitializer_ItemBiasMessage60_isDone = false;
			}
		}

		/// <summary>The externally-specified value of 'ItemTraitFeatureWeightPriorVariance'</summary>
		public double ItemTraitFeatureWeightPriorVariance
		{
			get {
				return this.itemTraitFeatureWeightPriorVariance;
			}
			set {
				if (this.itemTraitFeatureWeightPriorVariance!=value) {
					this.itemTraitFeatureWeightPriorVariance = value;
					this.numberOfIterationsDone = 0;
					this.Changed_numberOfIterationsDecreased_ObservationCount_Ratings_UserThresholdCount_Init_AffinityNoiseVa38_isInitialised = false;
					this.Changed_numberOfIterationsDecreased_ObservationCount_UserThresholdCount_UseSharedUserThresholds_Init33_isInitialised = false;
					this.Changed_numberOfIterationsDecreased_ObservationCount_UserThresholdCount_Init_AffinityNoiseVariance_I35_isInitialised = false;
					this.Changed_numberOfIterationsDecreased_ObservationCount_Init_AffinityNoiseVariance_ItemBiasFeatureWeigh31_isInitialised = false;
					this.Changed_numberOfIterationsDecreased_ObservationCount_TraitCount_Init_AffinityNoiseVariance_ItemBiasF30_isInitialised = false;
					this.Changed_ItemFeatureCount_ItemTraitFeatureWeightPriorVariance_TraitCount_isDone = false;
					this.Changed_ItemFeatureCount_numberOfIterationsDecreased_TraitCount_Init_AffinityNoiseVariance_ItemBiasF47_isInitialised = false;
					this.Changed_numberOfIterationsDecreased_TraitCount_UserFeatureCount_Init_AffinityNoiseVariance_ItemBiasF39_isInitialised = false;
					this.Changed_ItemCount_NonZeroItemFeatureCounts_numberOfIterationsDecreased_Init_AffinityNoiseVariance_It52_isInitialised = false;
					this.Changed_ItemBiasFeatureWeightPriorVariance_ItemCount_ItemFeatureCount_NonZeroItemFeatureCounts_NonZe55_isInitialised = false;
					this.Changed_ItemBiasInitializer_ItemCount_numberOfIterationsDecreased_Init_AffinityNoiseVariance_ItemBia19_isInitialised = false;
					this.Changed_ItemCount_numberOfIterationsDecreased_Init_AffinityNoiseVariance_ItemBiasFeatureWeightPriorV8_isInitialised = false;
					this.Changed_ItemCount_NonZeroItemFeatureCounts_numberOfIterationsDecreased_TraitCount_Init_AffinityNoise50_isInitialised = false;
					this.Changed_ItemCount_ItemTraitsInitializer_numberOfIterationsDecreased_TraitCount_Init_AffinityNoiseVar14_isInitialised = false;
					this.Changed_ItemCount_numberOfIterationsDecreased_TraitCount_Init_AffinityNoiseVariance_ItemBiasFeatureW6_isInitialised = false;
					this.Changed_NonZeroUserFeatureCounts_numberOfIterationsDecreased_UserCount_Init_AffinityNoiseVariance_It44_isInitialised = false;
					this.Changed_NonZeroUserFeatureCounts_NonZeroUserFeatureIndices_numberOfIterationsDecreased_UserBiasFeatu45_isInitialised = false;
					this.Changed_numberOfIterationsDecreased_UserBiasInitializer_UserCount_Init_AffinityNoiseVariance_ItemBia17_isInitialised = false;
					this.Changed_numberOfIterationsDecreased_UserCount_UserThresholdCount_UserThresholdsInitializer_Init_Affi23_isInitialised = false;
					this.Changed_numberOfIterationsDecreased_UserCount_UserThresholdCount_Init_AffinityNoiseVariance_ItemBias20_isInitialised = false;
					this.Changed_numberOfIterationsDecreased_UserCount_UserThresholdCount_UseSharedUserThresholds_Init_Affini21_isInitialised = false;
					this.Changed_numberOfIterationsDecreased_UserCount_Init_AffinityNoiseVariance_ItemBiasFeatureWeightPriorV7_isInitialised = false;
					this.Changed_NonZeroUserFeatureCounts_numberOfIterationsDecreased_TraitCount_UserCount_Init_AffinityNoise42_isInitialised = false;
					this.Changed_numberOfIterationsDecreased_TraitCount_UserCount_UserTraitsInitializer_Init_AffinityNoiseVar27_isInitialised = false;
					this.Changed_numberOfIterationsDecreased_TraitCount_UserCount_Init_AffinityNoiseVariance_ItemBiasFeatureW3_isInitialised = false;
					this.Changed_AffinityNoiseVariance_ItemBiasFeatureWeightPriorVariance_ItemBiasInitializer_ItemBiasMessage59_isDone = false;
					this.Changed_AffinityNoiseVariance_ItemBiasFeatureWeightPriorVariance_ItemBiasInitializer_ItemBiasMessage60_isDone = false;
				}
			}
		}

		/// <summary>The externally-specified value of 'ItemTraitsInitializer'</summary>
		public DistributionRefArray<DistributionStructArray<Gaussian,double>,double[]> ItemTraitsInitializer
		{
			get {
				return this.itemTraitsInitializer;
			}
			set {
				this.itemTraitsInitializer = value;
				this.numberOfIterationsDone = 0;
				this.Changed_numberOfIterationsDecreased_ObservationCount_Ratings_UserThresholdCount_Init_AffinityNoiseVa38_isInitialised = false;
				this.Changed_numberOfIterationsDecreased_ObservationCount_UserThresholdCount_UseSharedUserThresholds_Init33_isInitialised = false;
				this.Changed_numberOfIterationsDecreased_ObservationCount_UserThresholdCount_Init_AffinityNoiseVariance_I35_isInitialised = false;
				this.Changed_numberOfIterationsDecreased_ObservationCount_Init_AffinityNoiseVariance_ItemBiasFeatureWeigh31_isInitialised = false;
				this.Changed_numberOfIterationsDecreased_ObservationCount_TraitCount_Init_AffinityNoiseVariance_ItemBiasF30_isInitialised = false;
				this.Changed_ItemFeatureCount_numberOfIterationsDecreased_TraitCount_Init_AffinityNoiseVariance_ItemBiasF47_isInitialised = false;
				this.Changed_numberOfIterationsDecreased_TraitCount_UserFeatureCount_Init_AffinityNoiseVariance_ItemBiasF39_isInitialised = false;
				this.Changed_ItemCount_NonZeroItemFeatureCounts_numberOfIterationsDecreased_Init_AffinityNoiseVariance_It52_isInitialised = false;
				this.Changed_ItemBiasFeatureWeightPriorVariance_ItemCount_ItemFeatureCount_NonZeroItemFeatureCounts_NonZe55_isInitialised = false;
				this.Changed_ItemBiasInitializer_ItemCount_numberOfIterationsDecreased_Init_AffinityNoiseVariance_ItemBia19_isInitialised = false;
				this.Changed_ItemCount_numberOfIterationsDecreased_Init_AffinityNoiseVariance_ItemBiasFeatureWeightPriorV8_isInitialised = false;
				this.Changed_ItemCount_ItemTraitsInitializer_TraitCount_isDone = false;
				this.Changed_ItemCount_NonZeroItemFeatureCounts_numberOfIterationsDecreased_TraitCount_Init_AffinityNoise50_isInitialised = false;
				this.Changed_ItemCount_ItemTraitsInitializer_numberOfIterationsDecreased_TraitCount_Init_AffinityNoiseVar14_isDone = false;
				this.Changed_ItemCount_numberOfIterationsDecreased_TraitCount_Init_AffinityNoiseVariance_ItemBiasFeatureW6_isInitialised = false;
				this.Changed_NonZeroUserFeatureCounts_numberOfIterationsDecreased_UserCount_Init_AffinityNoiseVariance_It44_isInitialised = false;
				this.Changed_NonZeroUserFeatureCounts_NonZeroUserFeatureIndices_numberOfIterationsDecreased_UserBiasFeatu45_isInitialised = false;
				this.Changed_numberOfIterationsDecreased_UserBiasInitializer_UserCount_Init_AffinityNoiseVariance_ItemBia17_isInitialised = false;
				this.Changed_numberOfIterationsDecreased_UserCount_UserThresholdCount_UserThresholdsInitializer_Init_Affi23_isInitialised = false;
				this.Changed_numberOfIterationsDecreased_UserCount_UserThresholdCount_Init_AffinityNoiseVariance_ItemBias20_isInitialised = false;
				this.Changed_numberOfIterationsDecreased_UserCount_UserThresholdCount_UseSharedUserThresholds_Init_Affini21_isInitialised = false;
				this.Changed_numberOfIterationsDecreased_UserCount_Init_AffinityNoiseVariance_ItemBiasFeatureWeightPriorV7_isInitialised = false;
				this.Changed_NonZeroUserFeatureCounts_numberOfIterationsDecreased_TraitCount_UserCount_Init_AffinityNoise42_isInitialised = false;
				this.Changed_numberOfIterationsDecreased_TraitCount_UserCount_UserTraitsInitializer_Init_AffinityNoiseVar27_isInitialised = false;
				this.Changed_numberOfIterationsDecreased_TraitCount_UserCount_Init_AffinityNoiseVariance_ItemBiasFeatureW3_isInitialised = false;
				this.Changed_AffinityNoiseVariance_ItemBiasFeatureWeightPriorVariance_ItemBiasInitializer_ItemBiasMessage59_isDone = false;
				this.Changed_AffinityNoiseVariance_ItemBiasFeatureWeightPriorVariance_ItemBiasInitializer_ItemBiasMessage60_isDone = false;
			}
		}

		/// <summary>The externally-specified value of 'ItemTraitsMessage'</summary>
		public DistributionRefArray<DistributionStructArray<Gaussian,double>,double[]> ItemTraitsMessage
		{
			get {
				return this.itemTraitsMessage;
			}
			set {
				this.itemTraitsMessage = value;
				this.numberOfIterationsDone = 0;
				this.Changed_numberOfIterationsDecreased_ObservationCount_Ratings_UserThresholdCount_Init_AffinityNoiseVa38_isInitialised = false;
				this.Changed_numberOfIterationsDecreased_ObservationCount_UserThresholdCount_UseSharedUserThresholds_Init33_isInitialised = false;
				this.Changed_numberOfIterationsDecreased_ObservationCount_UserThresholdCount_Init_AffinityNoiseVariance_I35_isInitialised = false;
				this.Changed_numberOfIterationsDecreased_ObservationCount_Init_AffinityNoiseVariance_ItemBiasFeatureWeigh31_isInitialised = false;
				this.Changed_numberOfIterationsDecreased_ObservationCount_TraitCount_Init_AffinityNoiseVariance_ItemBiasF30_isInitialised = false;
				this.Changed_ItemFeatureCount_numberOfIterationsDecreased_TraitCount_Init_AffinityNoiseVariance_ItemBiasF47_isInitialised = false;
				this.Changed_numberOfIterationsDecreased_TraitCount_UserFeatureCount_Init_AffinityNoiseVariance_ItemBiasF39_isInitialised = false;
				this.Changed_ItemCount_NonZeroItemFeatureCounts_numberOfIterationsDecreased_Init_AffinityNoiseVariance_It52_isInitialised = false;
				this.Changed_ItemBiasFeatureWeightPriorVariance_ItemCount_ItemFeatureCount_NonZeroItemFeatureCounts_NonZe55_isInitialised = false;
				this.Changed_ItemBiasInitializer_ItemCount_numberOfIterationsDecreased_Init_AffinityNoiseVariance_ItemBia19_isInitialised = false;
				this.Changed_ItemCount_numberOfIterationsDecreased_Init_AffinityNoiseVariance_ItemBiasFeatureWeightPriorV8_isInitialised = false;
				this.Changed_ItemCount_NonZeroItemFeatureCounts_numberOfIterationsDecreased_TraitCount_Init_AffinityNoise50_isInitialised = false;
				this.Changed_ItemCount_ItemTraitsMessage_TraitCount_isDone = false;
				this.Changed_ItemCount_ItemTraitsInitializer_numberOfIterationsDecreased_TraitCount_Init_AffinityNoiseVar14_isInitialised = false;
				this.Changed_ItemCount_numberOfIterationsDecreased_TraitCount_Init_AffinityNoiseVariance_ItemBiasFeatureW6_isInitialised = false;
				this.Changed_NonZeroUserFeatureCounts_numberOfIterationsDecreased_UserCount_Init_AffinityNoiseVariance_It44_isInitialised = false;
				this.Changed_NonZeroUserFeatureCounts_NonZeroUserFeatureIndices_numberOfIterationsDecreased_UserBiasFeatu45_isInitialised = false;
				this.Changed_numberOfIterationsDecreased_UserBiasInitializer_UserCount_Init_AffinityNoiseVariance_ItemBia17_isInitialised = false;
				this.Changed_numberOfIterationsDecreased_UserCount_UserThresholdCount_UserThresholdsInitializer_Init_Affi23_isInitialised = false;
				this.Changed_numberOfIterationsDecreased_UserCount_UserThresholdCount_Init_AffinityNoiseVariance_ItemBias20_isInitialised = false;
				this.Changed_numberOfIterationsDecreased_UserCount_UserThresholdCount_UseSharedUserThresholds_Init_Affini21_isInitialised = false;
				this.Changed_numberOfIterationsDecreased_UserCount_Init_AffinityNoiseVariance_ItemBiasFeatureWeightPriorV7_isInitialised = false;
				this.Changed_NonZeroUserFeatureCounts_numberOfIterationsDecreased_TraitCount_UserCount_Init_AffinityNoise42_isInitialised = false;
				this.Changed_numberOfIterationsDecreased_TraitCount_UserCount_UserTraitsInitializer_Init_AffinityNoiseVar27_isInitialised = false;
				this.Changed_numberOfIterationsDecreased_TraitCount_UserCount_Init_AffinityNoiseVariance_ItemBiasFeatureW3_isInitialised = false;
				this.Changed_AffinityNoiseVariance_ItemBiasFeatureWeightPriorVariance_ItemBiasInitializer_ItemBiasMessage59_isDone = false;
				this.Changed_AffinityNoiseVariance_ItemBiasFeatureWeightPriorVariance_ItemBiasInitializer_ItemBiasMessage60_isDone = false;
			}
		}

		/// <summary>The externally-specified value of 'ItemTraitVariance'</summary>
		public double ItemTraitVariance
		{
			get {
				return this.itemTraitVariance;
			}
			set {
				if (this.itemTraitVariance!=value) {
					this.itemTraitVariance = value;
					this.numberOfIterationsDone = 0;
					this.Changed_numberOfIterationsDecreased_ObservationCount_Ratings_UserThresholdCount_Init_AffinityNoiseVa38_isInitialised = false;
					this.Changed_numberOfIterationsDecreased_ObservationCount_UserThresholdCount_UseSharedUserThresholds_Init33_isInitialised = false;
					this.Changed_numberOfIterationsDecreased_ObservationCount_UserThresholdCount_Init_AffinityNoiseVariance_I35_isInitialised = false;
					this.Changed_numberOfIterationsDecreased_ObservationCount_Init_AffinityNoiseVariance_ItemBiasFeatureWeigh31_isInitialised = false;
					this.Changed_numberOfIterationsDecreased_ObservationCount_TraitCount_Init_AffinityNoiseVariance_ItemBiasF30_isInitialised = false;
					this.Changed_ItemFeatureCount_numberOfIterationsDecreased_TraitCount_Init_AffinityNoiseVariance_ItemBiasF47_isInitialised = false;
					this.Changed_numberOfIterationsDecreased_TraitCount_UserFeatureCount_Init_AffinityNoiseVariance_ItemBiasF39_isInitialised = false;
					this.Changed_ItemCount_NonZeroItemFeatureCounts_numberOfIterationsDecreased_Init_AffinityNoiseVariance_It52_isInitialised = false;
					this.Changed_ItemBiasFeatureWeightPriorVariance_ItemCount_ItemFeatureCount_NonZeroItemFeatureCounts_NonZe55_isInitialised = false;
					this.Changed_ItemBiasInitializer_ItemCount_numberOfIterationsDecreased_Init_AffinityNoiseVariance_ItemBia19_isInitialised = false;
					this.Changed_ItemCount_numberOfIterationsDecreased_Init_AffinityNoiseVariance_ItemBiasFeatureWeightPriorV8_isInitialised = false;
					this.Changed_ItemCount_NonZeroItemFeatureCounts_numberOfIterationsDecreased_TraitCount_Init_AffinityNoise50_isInitialised = false;
					this.Changed_ItemCount_ItemTraitsInitializer_numberOfIterationsDecreased_TraitCount_Init_AffinityNoiseVar14_isInitialised = false;
					this.Changed_ItemCount_numberOfIterationsDecreased_TraitCount_Init_AffinityNoiseVariance_ItemBiasFeatureW6_isInitialised = false;
					this.Changed_NonZeroUserFeatureCounts_numberOfIterationsDecreased_UserCount_Init_AffinityNoiseVariance_It44_isInitialised = false;
					this.Changed_NonZeroUserFeatureCounts_NonZeroUserFeatureIndices_numberOfIterationsDecreased_UserBiasFeatu45_isInitialised = false;
					this.Changed_numberOfIterationsDecreased_UserBiasInitializer_UserCount_Init_AffinityNoiseVariance_ItemBia17_isInitialised = false;
					this.Changed_numberOfIterationsDecreased_UserCount_UserThresholdCount_UserThresholdsInitializer_Init_Affi23_isInitialised = false;
					this.Changed_numberOfIterationsDecreased_UserCount_UserThresholdCount_Init_AffinityNoiseVariance_ItemBias20_isInitialised = false;
					this.Changed_numberOfIterationsDecreased_UserCount_UserThresholdCount_UseSharedUserThresholds_Init_Affini21_isInitialised = false;
					this.Changed_numberOfIterationsDecreased_UserCount_Init_AffinityNoiseVariance_ItemBiasFeatureWeightPriorV7_isInitialised = false;
					this.Changed_NonZeroUserFeatureCounts_numberOfIterationsDecreased_TraitCount_UserCount_Init_AffinityNoise42_isInitialised = false;
					this.Changed_numberOfIterationsDecreased_TraitCount_UserCount_UserTraitsInitializer_Init_AffinityNoiseVar27_isInitialised = false;
					this.Changed_numberOfIterationsDecreased_TraitCount_UserCount_Init_AffinityNoiseVariance_ItemBiasFeatureW3_isInitialised = false;
					this.Changed_AffinityNoiseVariance_ItemBiasFeatureWeightPriorVariance_ItemBiasInitializer_ItemBiasMessage59_isDone = false;
					this.Changed_AffinityNoiseVariance_ItemBiasFeatureWeightPriorVariance_ItemBiasInitializer_ItemBiasMessage60_isDone = false;
				}
			}
		}

		/// <summary>The externally-specified value of 'MiddleUserThresholdIndex'</summary>
		public int MiddleUserThresholdIndex
		{
			get {
				return this.middleUserThresholdIndex;
			}
			set {
				if (this.middleUserThresholdIndex!=value) {
					this.middleUserThresholdIndex = value;
					this.numberOfIterationsDone = 0;
					this.Changed_MiddleUserThresholdIndex_UserThresholdCount_isDone = false;
					this.Changed_MiddleUserThresholdIndex_UserThresholdCount_UserThresholdPriorVariance_isDone = false;
					this.Changed_numberOfIterationsDecreased_ObservationCount_Ratings_UserThresholdCount_Init_AffinityNoiseVa38_isInitialised = false;
					this.Changed_numberOfIterationsDecreased_ObservationCount_UserThresholdCount_UseSharedUserThresholds_Init33_isInitialised = false;
					this.Changed_numberOfIterationsDecreased_ObservationCount_UserThresholdCount_Init_AffinityNoiseVariance_I35_isInitialised = false;
					this.Changed_numberOfIterationsDecreased_ObservationCount_Init_AffinityNoiseVariance_ItemBiasFeatureWeigh31_isInitialised = false;
					this.Changed_numberOfIterationsDecreased_ObservationCount_TraitCount_Init_AffinityNoiseVariance_ItemBiasF30_isInitialised = false;
					this.Changed_ItemFeatureCount_numberOfIterationsDecreased_TraitCount_Init_AffinityNoiseVariance_ItemBiasF47_isInitialised = false;
					this.Changed_numberOfIterationsDecreased_TraitCount_UserFeatureCount_Init_AffinityNoiseVariance_ItemBiasF39_isInitialised = false;
					this.Changed_ItemCount_NonZeroItemFeatureCounts_numberOfIterationsDecreased_Init_AffinityNoiseVariance_It52_isInitialised = false;
					this.Changed_ItemBiasFeatureWeightPriorVariance_ItemCount_ItemFeatureCount_NonZeroItemFeatureCounts_NonZe55_isInitialised = false;
					this.Changed_ItemBiasInitializer_ItemCount_numberOfIterationsDecreased_Init_AffinityNoiseVariance_ItemBia19_isInitialised = false;
					this.Changed_ItemCount_numberOfIterationsDecreased_Init_AffinityNoiseVariance_ItemBiasFeatureWeightPriorV8_isInitialised = false;
					this.Changed_ItemCount_NonZeroItemFeatureCounts_numberOfIterationsDecreased_TraitCount_Init_AffinityNoise50_isInitialised = false;
					this.Changed_ItemCount_ItemTraitsInitializer_numberOfIterationsDecreased_TraitCount_Init_AffinityNoiseVar14_isInitialised = false;
					this.Changed_ItemCount_numberOfIterationsDecreased_TraitCount_Init_AffinityNoiseVariance_ItemBiasFeatureW6_isInitialised = false;
					this.Changed_NonZeroUserFeatureCounts_numberOfIterationsDecreased_UserCount_Init_AffinityNoiseVariance_It44_isInitialised = false;
					this.Changed_NonZeroUserFeatureCounts_NonZeroUserFeatureIndices_numberOfIterationsDecreased_UserBiasFeatu45_isInitialised = false;
					this.Changed_numberOfIterationsDecreased_UserBiasInitializer_UserCount_Init_AffinityNoiseVariance_ItemBia17_isInitialised = false;
					this.Changed_MiddleUserThresholdIndex_UserCount_UserThresholdCount_UserThresholdPriorMean_UserThresholdPr58_isDone = false;
					this.Changed_numberOfIterationsDecreased_UserCount_UserThresholdCount_UserThresholdsInitializer_Init_Affi23_isInitialised = false;
					this.Changed_numberOfIterationsDecreased_UserCount_UserThresholdCount_Init_AffinityNoiseVariance_ItemBias20_isInitialised = false;
					this.Changed_numberOfIterationsDecreased_UserCount_UserThresholdCount_UseSharedUserThresholds_Init_Affini21_isInitialised = false;
					this.Changed_numberOfIterationsDecreased_UserCount_Init_AffinityNoiseVariance_ItemBiasFeatureWeightPriorV7_isInitialised = false;
					this.Changed_NonZeroUserFeatureCounts_numberOfIterationsDecreased_TraitCount_UserCount_Init_AffinityNoise42_isInitialised = false;
					this.Changed_numberOfIterationsDecreased_TraitCount_UserCount_UserTraitsInitializer_Init_AffinityNoiseVar27_isInitialised = false;
					this.Changed_numberOfIterationsDecreased_TraitCount_UserCount_Init_AffinityNoiseVariance_ItemBiasFeatureW3_isInitialised = false;
					this.Changed_AffinityNoiseVariance_ItemBiasFeatureWeightPriorVariance_ItemBiasInitializer_ItemBiasMessage59_isDone = false;
					this.Changed_AffinityNoiseVariance_ItemBiasFeatureWeightPriorVariance_ItemBiasInitializer_ItemBiasMessage60_isDone = false;
				}
			}
		}

		/// <summary>The externally-specified value of 'NonZeroItemFeatureCounts'</summary>
		public IReadOnlyList<int> NonZeroItemFeatureCounts
		{
			get {
				return this.nonZeroItemFeatureCounts;
			}
			set {
				if ((value!=null)&&(value.Count!=this.itemCount)) {
					throw new ArgumentException(((("Provided array of length "+value.Count)+" when length ")+this.itemCount)+" was expected for variable \'NonZeroItemFeatureCounts\'");
				}
				this.nonZeroItemFeatureCounts = value;
				this.numberOfIterationsDone = 0;
				this.Changed_numberOfIterationsDecreased_ObservationCount_Ratings_UserThresholdCount_Init_AffinityNoiseVa38_isInitialised = false;
				this.Changed_numberOfIterationsDecreased_ObservationCount_UserThresholdCount_UseSharedUserThresholds_Init33_isInitialised = false;
				this.Changed_numberOfIterationsDecreased_ObservationCount_UserThresholdCount_Init_AffinityNoiseVariance_I35_isInitialised = false;
				this.Changed_numberOfIterationsDecreased_ObservationCount_Init_AffinityNoiseVariance_ItemBiasFeatureWeigh31_isInitialised = false;
				this.Changed_numberOfIterationsDecreased_ObservationCount_TraitCount_Init_AffinityNoiseVariance_ItemBiasF30_isInitialised = false;
				this.Changed_ItemFeatureCount_numberOfIterationsDecreased_TraitCount_Init_AffinityNoiseVariance_ItemBiasF47_isInitialised = false;
				this.Changed_numberOfIterationsDecreased_TraitCount_UserFeatureCount_Init_AffinityNoiseVariance_ItemBiasF39_isInitialised = false;
				this.Changed_ItemCount_NonZeroItemFeatureCounts_isDone = false;
				this.Changed_ItemCount_NonZeroItemFeatureCounts_numberOfIterationsDecreased_Init_AffinityNoiseVariance_It52_isDone = false;
				this.Changed_ItemBiasFeatureWeightPriorVariance_ItemCount_ItemFeatureCount_NonZeroItemFeatureCounts_NonZe55_isDone = false;
				this.Changed_ItemBiasInitializer_ItemCount_numberOfIterationsDecreased_Init_AffinityNoiseVariance_ItemBia19_isInitialised = false;
				this.Changed_ItemCount_numberOfIterationsDecreased_Init_AffinityNoiseVariance_ItemBiasFeatureWeightPriorV8_isInitialised = false;
				this.Changed_ItemCount_NonZeroItemFeatureCounts_TraitCount_isDone = false;
				this.Changed_ItemCount_NonZeroItemFeatureCounts_numberOfIterationsDecreased_TraitCount_Init_AffinityNoise50_isDone = false;
				this.Changed_ItemCount_ItemTraitsInitializer_numberOfIterationsDecreased_TraitCount_Init_AffinityNoiseVar14_isInitialised = false;
				this.Changed_ItemCount_numberOfIterationsDecreased_TraitCount_Init_AffinityNoiseVariance_ItemBiasFeatureW6_isInitialised = false;
				this.Changed_NonZeroUserFeatureCounts_numberOfIterationsDecreased_UserCount_Init_AffinityNoiseVariance_It44_isInitialised = false;
				this.Changed_NonZeroUserFeatureCounts_NonZeroUserFeatureIndices_numberOfIterationsDecreased_UserBiasFeatu45_isInitialised = false;
				this.Changed_numberOfIterationsDecreased_UserBiasInitializer_UserCount_Init_AffinityNoiseVariance_ItemBia17_isInitialised = false;
				this.Changed_numberOfIterationsDecreased_UserCount_UserThresholdCount_UserThresholdsInitializer_Init_Affi23_isInitialised = false;
				this.Changed_numberOfIterationsDecreased_UserCount_UserThresholdCount_Init_AffinityNoiseVariance_ItemBias20_isInitialised = false;
				this.Changed_numberOfIterationsDecreased_UserCount_UserThresholdCount_UseSharedUserThresholds_Init_Affini21_isInitialised = false;
				this.Changed_numberOfIterationsDecreased_UserCount_Init_AffinityNoiseVariance_ItemBiasFeatureWeightPriorV7_isInitialised = false;
				this.Changed_NonZeroUserFeatureCounts_numberOfIterationsDecreased_TraitCount_UserCount_Init_AffinityNoise42_isInitialised = false;
				this.Changed_numberOfIterationsDecreased_TraitCount_UserCount_UserTraitsInitializer_Init_AffinityNoiseVar27_isInitialised = false;
				this.Changed_numberOfIterationsDecreased_TraitCount_UserCount_Init_AffinityNoiseVariance_ItemBiasFeatureW3_isInitialised = false;
				this.Changed_AffinityNoiseVariance_ItemBiasFeatureWeightPriorVariance_ItemBiasInitializer_ItemBiasMessage59_isDone = false;
				this.Changed_AffinityNoiseVariance_ItemBiasFeatureWeightPriorVariance_ItemBiasInitializer_ItemBiasMessage60_isDone = false;
			}
		}

		/// <summary>The externally-specified value of 'NonZeroItemFeatureIndices'</summary>
		public IReadOnlyList<IReadOnlyList<int>> NonZeroItemFeatureIndices
		{
			get {
				return this.nonZeroItemFeatureIndices;
			}
			set {
				if ((value!=null)&&(value.Count!=this.itemCount)) {
					throw new ArgumentException(((("Provided array of length "+value.Count)+" when length ")+this.itemCount)+" was expected for variable \'NonZeroItemFeatureIndices\'");
				}
				this.nonZeroItemFeatureIndices = value;
				this.numberOfIterationsDone = 0;
				this.Changed_numberOfIterationsDecreased_ObservationCount_Ratings_UserThresholdCount_Init_AffinityNoiseVa38_isInitialised = false;
				this.Changed_numberOfIterationsDecreased_ObservationCount_UserThresholdCount_UseSharedUserThresholds_Init33_isInitialised = false;
				this.Changed_numberOfIterationsDecreased_ObservationCount_UserThresholdCount_Init_AffinityNoiseVariance_I35_isInitialised = false;
				this.Changed_numberOfIterationsDecreased_ObservationCount_Init_AffinityNoiseVariance_ItemBiasFeatureWeigh31_isInitialised = false;
				this.Changed_numberOfIterationsDecreased_ObservationCount_TraitCount_Init_AffinityNoiseVariance_ItemBiasF30_isInitialised = false;
				this.Changed_ItemFeatureCount_numberOfIterationsDecreased_TraitCount_Init_AffinityNoiseVariance_ItemBiasF47_isInitialised = false;
				this.Changed_numberOfIterationsDecreased_TraitCount_UserFeatureCount_Init_AffinityNoiseVariance_ItemBiasF39_isInitialised = false;
				this.Changed_ItemCount_NonZeroItemFeatureCounts_numberOfIterationsDecreased_Init_AffinityNoiseVariance_It52_isInitialised = false;
				this.Changed_ItemBiasFeatureWeightPriorVariance_ItemCount_ItemFeatureCount_NonZeroItemFeatureCounts_NonZe55_isDone = false;
				this.Changed_ItemBiasInitializer_ItemCount_numberOfIterationsDecreased_Init_AffinityNoiseVariance_ItemBia19_isInitialised = false;
				this.Changed_ItemCount_numberOfIterationsDecreased_Init_AffinityNoiseVariance_ItemBiasFeatureWeightPriorV8_isInitialised = false;
				this.Changed_ItemCount_NonZeroItemFeatureCounts_numberOfIterationsDecreased_TraitCount_Init_AffinityNoise50_isInitialised = false;
				this.Changed_ItemCount_ItemTraitsInitializer_numberOfIterationsDecreased_TraitCount_Init_AffinityNoiseVar14_isInitialised = false;
				this.Changed_ItemCount_numberOfIterationsDecreased_TraitCount_Init_AffinityNoiseVariance_ItemBiasFeatureW6_isInitialised = false;
				this.Changed_NonZeroUserFeatureCounts_numberOfIterationsDecreased_UserCount_Init_AffinityNoiseVariance_It44_isInitialised = false;
				this.Changed_NonZeroUserFeatureCounts_NonZeroUserFeatureIndices_numberOfIterationsDecreased_UserBiasFeatu45_isInitialised = false;
				this.Changed_numberOfIterationsDecreased_UserBiasInitializer_UserCount_Init_AffinityNoiseVariance_ItemBia17_isInitialised = false;
				this.Changed_numberOfIterationsDecreased_UserCount_UserThresholdCount_UserThresholdsInitializer_Init_Affi23_isInitialised = false;
				this.Changed_numberOfIterationsDecreased_UserCount_UserThresholdCount_Init_AffinityNoiseVariance_ItemBias20_isInitialised = false;
				this.Changed_numberOfIterationsDecreased_UserCount_UserThresholdCount_UseSharedUserThresholds_Init_Affini21_isInitialised = false;
				this.Changed_numberOfIterationsDecreased_UserCount_Init_AffinityNoiseVariance_ItemBiasFeatureWeightPriorV7_isInitialised = false;
				this.Changed_NonZeroUserFeatureCounts_numberOfIterationsDecreased_TraitCount_UserCount_Init_AffinityNoise42_isInitialised = false;
				this.Changed_numberOfIterationsDecreased_TraitCount_UserCount_UserTraitsInitializer_Init_AffinityNoiseVar27_isInitialised = false;
				this.Changed_numberOfIterationsDecreased_TraitCount_UserCount_Init_AffinityNoiseVariance_ItemBiasFeatureW3_isInitialised = false;
				this.Changed_AffinityNoiseVariance_ItemBiasFeatureWeightPriorVariance_ItemBiasInitializer_ItemBiasMessage59_isDone = false;
				this.Changed_AffinityNoiseVariance_ItemBiasFeatureWeightPriorVariance_ItemBiasInitializer_ItemBiasMessage60_isDone = false;
			}
		}

		/// <summary>The externally-specified value of 'NonZeroItemFeatureValues'</summary>
		public IReadOnlyList<IReadOnlyList<double>> NonZeroItemFeatureValues
		{
			get {
				return this.nonZeroItemFeatureValues;
			}
			set {
				if ((value!=null)&&(value.Count!=this.itemCount)) {
					throw new ArgumentException(((("Provided array of length "+value.Count)+" when length ")+this.itemCount)+" was expected for variable \'NonZeroItemFeatureValues\'");
				}
				this.nonZeroItemFeatureValues = value;
				this.numberOfIterationsDone = 0;
				this.Changed_numberOfIterationsDecreased_ObservationCount_Ratings_UserThresholdCount_Init_AffinityNoiseVa38_isInitialised = false;
				this.Changed_numberOfIterationsDecreased_ObservationCount_UserThresholdCount_UseSharedUserThresholds_Init33_isInitialised = false;
				this.Changed_numberOfIterationsDecreased_ObservationCount_UserThresholdCount_Init_AffinityNoiseVariance_I35_isInitialised = false;
				this.Changed_numberOfIterationsDecreased_ObservationCount_Init_AffinityNoiseVariance_ItemBiasFeatureWeigh31_isInitialised = false;
				this.Changed_numberOfIterationsDecreased_ObservationCount_TraitCount_Init_AffinityNoiseVariance_ItemBiasF30_isInitialised = false;
				this.Changed_ItemFeatureCount_numberOfIterationsDecreased_TraitCount_Init_AffinityNoiseVariance_ItemBiasF47_isInitialised = false;
				this.Changed_numberOfIterationsDecreased_TraitCount_UserFeatureCount_Init_AffinityNoiseVariance_ItemBiasF39_isInitialised = false;
				this.Changed_ItemCount_NonZeroItemFeatureCounts_numberOfIterationsDecreased_Init_AffinityNoiseVariance_It52_isInitialised = false;
				this.Changed_ItemBiasFeatureWeightPriorVariance_ItemCount_ItemFeatureCount_NonZeroItemFeatureCounts_NonZe55_isInitialised = false;
				this.Changed_ItemBiasInitializer_ItemCount_numberOfIterationsDecreased_Init_AffinityNoiseVariance_ItemBia19_isInitialised = false;
				this.Changed_ItemCount_numberOfIterationsDecreased_Init_AffinityNoiseVariance_ItemBiasFeatureWeightPriorV8_isInitialised = false;
				this.Changed_ItemCount_NonZeroItemFeatureCounts_numberOfIterationsDecreased_TraitCount_Init_AffinityNoise50_isInitialised = false;
				this.Changed_ItemCount_ItemTraitsInitializer_numberOfIterationsDecreased_TraitCount_Init_AffinityNoiseVar14_isInitialised = false;
				this.Changed_ItemCount_numberOfIterationsDecreased_TraitCount_Init_AffinityNoiseVariance_ItemBiasFeatureW6_isInitialised = false;
				this.Changed_NonZeroUserFeatureCounts_numberOfIterationsDecreased_UserCount_Init_AffinityNoiseVariance_It44_isInitialised = false;
				this.Changed_NonZeroUserFeatureCounts_NonZeroUserFeatureIndices_numberOfIterationsDecreased_UserBiasFeatu45_isInitialised = false;
				this.Changed_numberOfIterationsDecreased_UserBiasInitializer_UserCount_Init_AffinityNoiseVariance_ItemBia17_isInitialised = false;
				this.Changed_numberOfIterationsDecreased_UserCount_UserThresholdCount_UserThresholdsInitializer_Init_Affi23_isInitialised = false;
				this.Changed_numberOfIterationsDecreased_UserCount_UserThresholdCount_Init_AffinityNoiseVariance_ItemBias20_isInitialised = false;
				this.Changed_numberOfIterationsDecreased_UserCount_UserThresholdCount_UseSharedUserThresholds_Init_Affini21_isInitialised = false;
				this.Changed_numberOfIterationsDecreased_UserCount_Init_AffinityNoiseVariance_ItemBiasFeatureWeightPriorV7_isInitialised = false;
				this.Changed_NonZeroUserFeatureCounts_numberOfIterationsDecreased_TraitCount_UserCount_Init_AffinityNoise42_isInitialised = false;
				this.Changed_numberOfIterationsDecreased_TraitCount_UserCount_UserTraitsInitializer_Init_AffinityNoiseVar27_isInitialised = false;
				this.Changed_numberOfIterationsDecreased_TraitCount_UserCount_Init_AffinityNoiseVariance_ItemBiasFeatureW3_isInitialised = false;
				this.Changed_AffinityNoiseVariance_ItemBiasFeatureWeightPriorVariance_ItemBiasInitializer_ItemBiasMessage59_isDone = false;
				this.Changed_AffinityNoiseVariance_ItemBiasFeatureWeightPriorVariance_ItemBiasInitializer_ItemBiasMessage60_isDone = false;
			}
		}

		/// <summary>The externally-specified value of 'NonZeroUserFeatureCounts'</summary>
		public IReadOnlyList<int> NonZeroUserFeatureCounts
		{
			get {
				return this.nonZeroUserFeatureCounts;
			}
			set {
				if ((value!=null)&&(value.Count!=this.userCount)) {
					throw new ArgumentException(((("Provided array of length "+value.Count)+" when length ")+this.userCount)+" was expected for variable \'NonZeroUserFeatureCounts\'");
				}
				this.nonZeroUserFeatureCounts = value;
				this.numberOfIterationsDone = 0;
				this.Changed_numberOfIterationsDecreased_ObservationCount_Ratings_UserThresholdCount_Init_AffinityNoiseVa38_isInitialised = false;
				this.Changed_numberOfIterationsDecreased_ObservationCount_UserThresholdCount_UseSharedUserThresholds_Init33_isInitialised = false;
				this.Changed_numberOfIterationsDecreased_ObservationCount_UserThresholdCount_Init_AffinityNoiseVariance_I35_isInitialised = false;
				this.Changed_numberOfIterationsDecreased_ObservationCount_Init_AffinityNoiseVariance_ItemBiasFeatureWeigh31_isInitialised = false;
				this.Changed_numberOfIterationsDecreased_ObservationCount_TraitCount_Init_AffinityNoiseVariance_ItemBiasF30_isInitialised = false;
				this.Changed_ItemFeatureCount_numberOfIterationsDecreased_TraitCount_Init_AffinityNoiseVariance_ItemBiasF47_isInitialised = false;
				this.Changed_numberOfIterationsDecreased_TraitCount_UserFeatureCount_Init_AffinityNoiseVariance_ItemBiasF39_isInitialised = false;
				this.Changed_ItemCount_NonZeroItemFeatureCounts_numberOfIterationsDecreased_Init_AffinityNoiseVariance_It52_isInitialised = false;
				this.Changed_ItemBiasFeatureWeightPriorVariance_ItemCount_ItemFeatureCount_NonZeroItemFeatureCounts_NonZe55_isInitialised = false;
				this.Changed_ItemBiasInitializer_ItemCount_numberOfIterationsDecreased_Init_AffinityNoiseVariance_ItemBia19_isInitialised = false;
				this.Changed_ItemCount_numberOfIterationsDecreased_Init_AffinityNoiseVariance_ItemBiasFeatureWeightPriorV8_isInitialised = false;
				this.Changed_ItemCount_NonZeroItemFeatureCounts_numberOfIterationsDecreased_TraitCount_Init_AffinityNoise50_isInitialised = false;
				this.Changed_ItemCount_ItemTraitsInitializer_numberOfIterationsDecreased_TraitCount_Init_AffinityNoiseVar14_isInitialised = false;
				this.Changed_ItemCount_numberOfIterationsDecreased_TraitCount_Init_AffinityNoiseVariance_ItemBiasFeatureW6_isInitialised = false;
				this.Changed_NonZeroUserFeatureCounts_UserCount_isDone = false;
				this.Changed_NonZeroUserFeatureCounts_numberOfIterationsDecreased_UserCount_Init_AffinityNoiseVariance_It44_isDone = false;
				this.Changed_NonZeroUserFeatureCounts_NonZeroUserFeatureIndices_numberOfIterationsDecreased_UserBiasFeatu45_isDone = false;
				this.Changed_numberOfIterationsDecreased_UserBiasInitializer_UserCount_Init_AffinityNoiseVariance_ItemBia17_isInitialised = false;
				this.Changed_numberOfIterationsDecreased_UserCount_UserThresholdCount_UserThresholdsInitializer_Init_Affi23_isInitialised = false;
				this.Changed_numberOfIterationsDecreased_UserCount_UserThresholdCount_Init_AffinityNoiseVariance_ItemBias20_isInitialised = false;
				this.Changed_numberOfIterationsDecreased_UserCount_UserThresholdCount_UseSharedUserThresholds_Init_Affini21_isInitialised = false;
				this.Changed_numberOfIterationsDecreased_UserCount_Init_AffinityNoiseVariance_ItemBiasFeatureWeightPriorV7_isInitialised = false;
				this.Changed_NonZeroUserFeatureCounts_TraitCount_UserCount_isDone = false;
				this.Changed_NonZeroUserFeatureCounts_numberOfIterationsDecreased_TraitCount_UserCount_Init_AffinityNoise42_isDone = false;
				this.Changed_numberOfIterationsDecreased_TraitCount_UserCount_UserTraitsInitializer_Init_AffinityNoiseVar27_isInitialised = false;
				this.Changed_numberOfIterationsDecreased_TraitCount_UserCount_Init_AffinityNoiseVariance_ItemBiasFeatureW3_isInitialised = false;
				this.Changed_AffinityNoiseVariance_ItemBiasFeatureWeightPriorVariance_ItemBiasInitializer_ItemBiasMessage59_isDone = false;
				this.Changed_AffinityNoiseVariance_ItemBiasFeatureWeightPriorVariance_ItemBiasInitializer_ItemBiasMessage60_isDone = false;
			}
		}

		/// <summary>The externally-specified value of 'NonZeroUserFeatureIndices'</summary>
		public IReadOnlyList<IReadOnlyList<int>> NonZeroUserFeatureIndices
		{
			get {
				return this.nonZeroUserFeatureIndices;
			}
			set {
				if ((value!=null)&&(value.Count!=this.userCount)) {
					throw new ArgumentException(((("Provided array of length "+value.Count)+" when length ")+this.userCount)+" was expected for variable \'NonZeroUserFeatureIndices\'");
				}
				this.nonZeroUserFeatureIndices = value;
				this.numberOfIterationsDone = 0;
				this.Changed_numberOfIterationsDecreased_ObservationCount_Ratings_UserThresholdCount_Init_AffinityNoiseVa38_isInitialised = false;
				this.Changed_numberOfIterationsDecreased_ObservationCount_UserThresholdCount_UseSharedUserThresholds_Init33_isInitialised = false;
				this.Changed_numberOfIterationsDecreased_ObservationCount_UserThresholdCount_Init_AffinityNoiseVariance_I35_isInitialised = false;
				this.Changed_numberOfIterationsDecreased_ObservationCount_Init_AffinityNoiseVariance_ItemBiasFeatureWeigh31_isInitialised = false;
				this.Changed_numberOfIterationsDecreased_ObservationCount_TraitCount_Init_AffinityNoiseVariance_ItemBiasF30_isInitialised = false;
				this.Changed_ItemFeatureCount_numberOfIterationsDecreased_TraitCount_Init_AffinityNoiseVariance_ItemBiasF47_isInitialised = false;
				this.Changed_numberOfIterationsDecreased_TraitCount_UserFeatureCount_Init_AffinityNoiseVariance_ItemBiasF39_isInitialised = false;
				this.Changed_ItemCount_NonZeroItemFeatureCounts_numberOfIterationsDecreased_Init_AffinityNoiseVariance_It52_isInitialised = false;
				this.Changed_ItemBiasFeatureWeightPriorVariance_ItemCount_ItemFeatureCount_NonZeroItemFeatureCounts_NonZe55_isInitialised = false;
				this.Changed_ItemBiasInitializer_ItemCount_numberOfIterationsDecreased_Init_AffinityNoiseVariance_ItemBia19_isInitialised = false;
				this.Changed_ItemCount_numberOfIterationsDecreased_Init_AffinityNoiseVariance_ItemBiasFeatureWeightPriorV8_isInitialised = false;
				this.Changed_ItemCount_NonZeroItemFeatureCounts_numberOfIterationsDecreased_TraitCount_Init_AffinityNoise50_isInitialised = false;
				this.Changed_ItemCount_ItemTraitsInitializer_numberOfIterationsDecreased_TraitCount_Init_AffinityNoiseVar14_isInitialised = false;
				this.Changed_ItemCount_numberOfIterationsDecreased_TraitCount_Init_AffinityNoiseVariance_ItemBiasFeatureW6_isInitialised = false;
				this.Changed_NonZeroUserFeatureCounts_numberOfIterationsDecreased_UserCount_Init_AffinityNoiseVariance_It44_isInitialised = false;
				this.Changed_NonZeroUserFeatureCounts_NonZeroUserFeatureIndices_numberOfIterationsDecreased_UserBiasFeatu45_isDone = false;
				this.Changed_numberOfIterationsDecreased_UserBiasInitializer_UserCount_Init_AffinityNoiseVariance_ItemBia17_isInitialised = false;
				this.Changed_numberOfIterationsDecreased_UserCount_UserThresholdCount_UserThresholdsInitializer_Init_Affi23_isInitialised = false;
				this.Changed_numberOfIterationsDecreased_UserCount_UserThresholdCount_Init_AffinityNoiseVariance_ItemBias20_isInitialised = false;
				this.Changed_numberOfIterationsDecreased_UserCount_UserThresholdCount_UseSharedUserThresholds_Init_Affini21_isInitialised = false;
				this.Changed_numberOfIterationsDecreased_UserCount_Init_AffinityNoiseVariance_ItemBiasFeatureWeightPriorV7_isInitialised = false;
				this.Changed_NonZeroUserFeatureCounts_numberOfIterationsDecreased_TraitCount_UserCount_Init_AffinityNoise42_isInitialised = false;
				this.Changed_numberOfIterationsDecreased_TraitCount_UserCount_UserTraitsInitializer_Init_AffinityNoiseVar27_isInitialised = false;
				this.Changed_numberOfIterationsDecreased_TraitCount_UserCount_Init_AffinityNoiseVariance_ItemBiasFeatureW3_isInitialised = false;
				this.Changed_AffinityNoiseVariance_ItemBiasFeatureWeightPriorVariance_ItemBiasInitializer_ItemBiasMessage59_isDone = false;
				this.Changed_AffinityNoiseVariance_ItemBiasFeatureWeightPriorVariance_ItemBiasInitializer_ItemBiasMessage60_isDone = false;
			}
		}

		/// <summary>The externally-specified value of 'NonZeroUserFeatureValues'</summary>
		public IReadOnlyList<IReadOnlyList<double>> NonZeroUserFeatureValues
		{
			get {
				return this.nonZeroUserFeatureValues;
			}
			set {
				if ((value!=null)&&(value.Count!=this.userCount)) {
					throw new ArgumentException(((("Provided array of length "+value.Count)+" when length ")+this.userCount)+" was expected for variable \'NonZeroUserFeatureValues\'");
				}
				this.nonZeroUserFeatureValues = value;
				this.numberOfIterationsDone = 0;
				this.Changed_numberOfIterationsDecreased_ObservationCount_Ratings_UserThresholdCount_Init_AffinityNoiseVa38_isInitialised = false;
				this.Changed_numberOfIterationsDecreased_ObservationCount_UserThresholdCount_UseSharedUserThresholds_Init33_isInitialised = false;
				this.Changed_numberOfIterationsDecreased_ObservationCount_UserThresholdCount_Init_AffinityNoiseVariance_I35_isInitialised = false;
				this.Changed_numberOfIterationsDecreased_ObservationCount_Init_AffinityNoiseVariance_ItemBiasFeatureWeigh31_isInitialised = false;
				this.Changed_numberOfIterationsDecreased_ObservationCount_TraitCount_Init_AffinityNoiseVariance_ItemBiasF30_isInitialised = false;
				this.Changed_ItemFeatureCount_numberOfIterationsDecreased_TraitCount_Init_AffinityNoiseVariance_ItemBiasF47_isInitialised = false;
				this.Changed_numberOfIterationsDecreased_TraitCount_UserFeatureCount_Init_AffinityNoiseVariance_ItemBiasF39_isInitialised = false;
				this.Changed_ItemCount_NonZeroItemFeatureCounts_numberOfIterationsDecreased_Init_AffinityNoiseVariance_It52_isInitialised = false;
				this.Changed_ItemBiasFeatureWeightPriorVariance_ItemCount_ItemFeatureCount_NonZeroItemFeatureCounts_NonZe55_isInitialised = false;
				this.Changed_ItemBiasInitializer_ItemCount_numberOfIterationsDecreased_Init_AffinityNoiseVariance_ItemBia19_isInitialised = false;
				this.Changed_ItemCount_numberOfIterationsDecreased_Init_AffinityNoiseVariance_ItemBiasFeatureWeightPriorV8_isInitialised = false;
				this.Changed_ItemCount_NonZeroItemFeatureCounts_numberOfIterationsDecreased_TraitCount_Init_AffinityNoise50_isInitialised = false;
				this.Changed_ItemCount_ItemTraitsInitializer_numberOfIterationsDecreased_TraitCount_Init_AffinityNoiseVar14_isInitialised = false;
				this.Changed_ItemCount_numberOfIterationsDecreased_TraitCount_Init_AffinityNoiseVariance_ItemBiasFeatureW6_isInitialised = false;
				this.Changed_NonZeroUserFeatureCounts_numberOfIterationsDecreased_UserCount_Init_AffinityNoiseVariance_It44_isInitialised = false;
				this.Changed_NonZeroUserFeatureCounts_NonZeroUserFeatureIndices_numberOfIterationsDecreased_UserBiasFeatu45_isInitialised = false;
				this.Changed_numberOfIterationsDecreased_UserBiasInitializer_UserCount_Init_AffinityNoiseVariance_ItemBia17_isInitialised = false;
				this.Changed_numberOfIterationsDecreased_UserCount_UserThresholdCount_UserThresholdsInitializer_Init_Affi23_isInitialised = false;
				this.Changed_numberOfIterationsDecreased_UserCount_UserThresholdCount_Init_AffinityNoiseVariance_ItemBias20_isInitialised = false;
				this.Changed_numberOfIterationsDecreased_UserCount_UserThresholdCount_UseSharedUserThresholds_Init_Affini21_isInitialised = false;
				this.Changed_numberOfIterationsDecreased_UserCount_Init_AffinityNoiseVariance_ItemBiasFeatureWeightPriorV7_isInitialised = false;
				this.Changed_NonZeroUserFeatureCounts_numberOfIterationsDecreased_TraitCount_UserCount_Init_AffinityNoise42_isInitialised = false;
				this.Changed_numberOfIterationsDecreased_TraitCount_UserCount_UserTraitsInitializer_Init_AffinityNoiseVar27_isInitialised = false;
				this.Changed_numberOfIterationsDecreased_TraitCount_UserCount_Init_AffinityNoiseVariance_ItemBiasFeatureW3_isInitialised = false;
				this.Changed_AffinityNoiseVariance_ItemBiasFeatureWeightPriorVariance_ItemBiasInitializer_ItemBiasMessage59_isDone = false;
				this.Changed_AffinityNoiseVariance_ItemBiasFeatureWeightPriorVariance_ItemBiasInitializer_ItemBiasMessage60_isDone = false;
			}
		}

		/// <summary>The number of iterations done from the initial state</summary>
		public int NumberOfIterationsDone
		{
			get {
				return this.numberOfIterationsDone;
			}
		}

		/// <summary>The externally-specified value of 'ObservationCount'</summary>
		public int ObservationCount
		{
			get {
				return this.observationCount;
			}
			set {
				if (this.observationCount!=value) {
					this.observationCount = value;
					this.numberOfIterationsDone = 0;
					this.Changed_ObservationCount_UseSharedUserThresholds_isDone = false;
					this.Changed_ObservationCount_UserThresholdCount_UseSharedUserThresholds_isDone = false;
					this.Changed_ObservationCount_isDone = false;
					this.Changed_ObservationCount_Ratings_isDone = false;
					this.Changed_ObservationCount_UserThresholdCount_isDone = false;
					this.Changed_numberOfIterationsDecreased_ObservationCount_Ratings_UserThresholdCount_Init_AffinityNoiseVa38_isDone = false;
					this.Changed_numberOfIterationsDecreased_ObservationCount_UserThresholdCount_UseSharedUserThresholds_Init33_isDone = false;
					this.Changed_numberOfIterationsDecreased_ObservationCount_UserThresholdCount_Init_AffinityNoiseVariance_I35_isDone = false;
					this.Changed_numberOfIterationsDecreased_ObservationCount_Init_AffinityNoiseVariance_ItemBiasFeatureWeigh31_isDone = false;
					this.Changed_ObservationCount_TraitCount_isDone = false;
					this.Changed_numberOfIterationsDecreased_ObservationCount_TraitCount_Init_AffinityNoiseVariance_ItemBiasF30_isDone = false;
					this.Changed_ItemFeatureCount_numberOfIterationsDecreased_TraitCount_Init_AffinityNoiseVariance_ItemBiasF47_isInitialised = false;
					this.Changed_numberOfIterationsDecreased_TraitCount_UserFeatureCount_Init_AffinityNoiseVariance_ItemBiasF39_isInitialised = false;
					this.Changed_ItemCount_NonZeroItemFeatureCounts_numberOfIterationsDecreased_Init_AffinityNoiseVariance_It52_isInitialised = false;
					this.Changed_ItemBiasFeatureWeightPriorVariance_ItemCount_ItemFeatureCount_NonZeroItemFeatureCounts_NonZe55_isInitialised = false;
					this.Changed_ItemBiasInitializer_ItemCount_numberOfIterationsDecreased_Init_AffinityNoiseVariance_ItemBia19_isInitialised = false;
					this.Changed_ItemCount_numberOfIterationsDecreased_Init_AffinityNoiseVariance_ItemBiasFeatureWeightPriorV8_isInitialised = false;
					this.Changed_ItemCount_NonZeroItemFeatureCounts_numberOfIterationsDecreased_TraitCount_Init_AffinityNoise50_isInitialised = false;
					this.Changed_ItemCount_ItemTraitsInitializer_numberOfIterationsDecreased_TraitCount_Init_AffinityNoiseVar14_isInitialised = false;
					this.Changed_ItemCount_numberOfIterationsDecreased_TraitCount_Init_AffinityNoiseVariance_ItemBiasFeatureW6_isInitialised = false;
					this.Changed_NonZeroUserFeatureCounts_numberOfIterationsDecreased_UserCount_Init_AffinityNoiseVariance_It44_isInitialised = false;
					this.Changed_NonZeroUserFeatureCounts_NonZeroUserFeatureIndices_numberOfIterationsDecreased_UserBiasFeatu45_isInitialised = false;
					this.Changed_numberOfIterationsDecreased_UserBiasInitializer_UserCount_Init_AffinityNoiseVariance_ItemBia17_isInitialised = false;
					this.Changed_numberOfIterationsDecreased_UserCount_UserThresholdCount_UserThresholdsInitializer_Init_Affi23_isInitialised = false;
					this.Changed_numberOfIterationsDecreased_UserCount_UserThresholdCount_Init_AffinityNoiseVariance_ItemBias20_isInitialised = false;
					this.Changed_numberOfIterationsDecreased_UserCount_UserThresholdCount_UseSharedUserThresholds_Init_Affini21_isInitialised = false;
					this.Changed_numberOfIterationsDecreased_UserCount_Init_AffinityNoiseVariance_ItemBiasFeatureWeightPriorV7_isInitialised = false;
					this.Changed_NonZeroUserFeatureCounts_numberOfIterationsDecreased_TraitCount_UserCount_Init_AffinityNoise42_isInitialised = false;
					this.Changed_numberOfIterationsDecreased_TraitCount_UserCount_UserTraitsInitializer_Init_AffinityNoiseVar27_isInitialised = false;
					this.Changed_numberOfIterationsDecreased_TraitCount_UserCount_Init_AffinityNoiseVariance_ItemBiasFeatureW3_isInitialised = false;
					this.Changed_AffinityNoiseVariance_ItemBiasFeatureWeightPriorVariance_ItemBiasInitializer_ItemBiasMessage59_isDone = false;
					this.Changed_AffinityNoiseVariance_ItemBiasFeatureWeightPriorVariance_ItemBiasInitializer_ItemBiasMessage60_isDone = false;
				}
			}
		}

		/// <summary>The externally-specified value of 'Ratings'</summary>
		public IReadOnlyList<int> Ratings
		{
			get {
				return this.ratings;
			}
			set {
				if ((value!=null)&&(value.Count!=this.observationCount)) {
					throw new ArgumentException(((("Provided array of length "+value.Count)+" when length ")+this.observationCount)+" was expected for variable \'Ratings\'");
				}
				this.ratings = value;
				this.numberOfIterationsDone = 0;
				this.Changed_ObservationCount_Ratings_isDone = false;
				this.Changed_numberOfIterationsDecreased_ObservationCount_Ratings_UserThresholdCount_Init_AffinityNoiseVa38_isDone = false;
				this.Changed_numberOfIterationsDecreased_ObservationCount_UserThresholdCount_UseSharedUserThresholds_Init33_isInitialised = false;
				this.Changed_numberOfIterationsDecreased_ObservationCount_UserThresholdCount_Init_AffinityNoiseVariance_I35_isInitialised = false;
				this.Changed_numberOfIterationsDecreased_ObservationCount_Init_AffinityNoiseVariance_ItemBiasFeatureWeigh31_isInitialised = false;
				this.Changed_numberOfIterationsDecreased_ObservationCount_TraitCount_Init_AffinityNoiseVariance_ItemBiasF30_isInitialised = false;
				this.Changed_ItemFeatureCount_numberOfIterationsDecreased_TraitCount_Init_AffinityNoiseVariance_ItemBiasF47_isInitialised = false;
				this.Changed_numberOfIterationsDecreased_TraitCount_UserFeatureCount_Init_AffinityNoiseVariance_ItemBiasF39_isInitialised = false;
				this.Changed_ItemCount_NonZeroItemFeatureCounts_numberOfIterationsDecreased_Init_AffinityNoiseVariance_It52_isInitialised = false;
				this.Changed_ItemBiasFeatureWeightPriorVariance_ItemCount_ItemFeatureCount_NonZeroItemFeatureCounts_NonZe55_isInitialised = false;
				this.Changed_ItemBiasInitializer_ItemCount_numberOfIterationsDecreased_Init_AffinityNoiseVariance_ItemBia19_isInitialised = false;
				this.Changed_ItemCount_numberOfIterationsDecreased_Init_AffinityNoiseVariance_ItemBiasFeatureWeightPriorV8_isInitialised = false;
				this.Changed_ItemCount_NonZeroItemFeatureCounts_numberOfIterationsDecreased_TraitCount_Init_AffinityNoise50_isInitialised = false;
				this.Changed_ItemCount_ItemTraitsInitializer_numberOfIterationsDecreased_TraitCount_Init_AffinityNoiseVar14_isInitialised = false;
				this.Changed_ItemCount_numberOfIterationsDecreased_TraitCount_Init_AffinityNoiseVariance_ItemBiasFeatureW6_isInitialised = false;
				this.Changed_NonZeroUserFeatureCounts_numberOfIterationsDecreased_UserCount_Init_AffinityNoiseVariance_It44_isInitialised = false;
				this.Changed_NonZeroUserFeatureCounts_NonZeroUserFeatureIndices_numberOfIterationsDecreased_UserBiasFeatu45_isInitialised = false;
				this.Changed_numberOfIterationsDecreased_UserBiasInitializer_UserCount_Init_AffinityNoiseVariance_ItemBia17_isInitialised = false;
				this.Changed_numberOfIterationsDecreased_UserCount_UserThresholdCount_UserThresholdsInitializer_Init_Affi23_isInitialised = false;
				this.Changed_numberOfIterationsDecreased_UserCount_UserThresholdCount_Init_AffinityNoiseVariance_ItemBias20_isInitialised = false;
				this.Changed_numberOfIterationsDecreased_UserCount_UserThresholdCount_UseSharedUserThresholds_Init_Affini21_isInitialised = false;
				this.Changed_numberOfIterationsDecreased_UserCount_Init_AffinityNoiseVariance_ItemBiasFeatureWeightPriorV7_isInitialised = false;
				this.Changed_NonZeroUserFeatureCounts_numberOfIterationsDecreased_TraitCount_UserCount_Init_AffinityNoise42_isInitialised = false;
				this.Changed_numberOfIterationsDecreased_TraitCount_UserCount_UserTraitsInitializer_Init_AffinityNoiseVar27_isInitialised = false;
				this.Changed_numberOfIterationsDecreased_TraitCount_UserCount_Init_AffinityNoiseVariance_ItemBiasFeatureW3_isInitialised = false;
				this.Changed_AffinityNoiseVariance_ItemBiasFeatureWeightPriorVariance_ItemBiasInitializer_ItemBiasMessage59_isDone = false;
				this.Changed_AffinityNoiseVariance_ItemBiasFeatureWeightPriorVariance_ItemBiasInitializer_ItemBiasMessage60_isDone = false;
			}
		}

		/// <summary>The externally-specified value of 'TraitCount'</summary>
		public int TraitCount
		{
			get {
				return this.traitCount;
			}
			set {
				if (this.traitCount!=value) {
					this.traitCount = value;
					this.numberOfIterationsDone = 0;
					this.Changed_numberOfIterationsDecreased_ObservationCount_Ratings_UserThresholdCount_Init_AffinityNoiseVa38_isInitialised = false;
					this.Changed_numberOfIterationsDecreased_ObservationCount_UserThresholdCount_UseSharedUserThresholds_Init33_isInitialised = false;
					this.Changed_numberOfIterationsDecreased_ObservationCount_UserThresholdCount_Init_AffinityNoiseVariance_I35_isInitialised = false;
					this.Changed_numberOfIterationsDecreased_ObservationCount_Init_AffinityNoiseVariance_ItemBiasFeatureWeigh31_isInitialised = false;
					this.Changed_ObservationCount_TraitCount_isDone = false;
					this.Changed_numberOfIterationsDecreased_ObservationCount_TraitCount_Init_AffinityNoiseVariance_ItemBiasF30_isDone = false;
					this.Changed_TraitCount_isDone = false;
					this.Changed_ItemFeatureCount_TraitCount_isDone = false;
					this.Changed_ItemFeatureCount_ItemTraitFeatureWeightPriorVariance_TraitCount_isDone = false;
					this.Changed_ItemFeatureCount_numberOfIterationsDecreased_TraitCount_Init_AffinityNoiseVariance_ItemBiasF47_isDone = false;
					this.Changed_TraitCount_UserFeatureCount_isDone = false;
					this.Changed_TraitCount_UserFeatureCount_UserTraitFeatureWeightPriorVariance_isDone = false;
					this.Changed_numberOfIterationsDecreased_TraitCount_UserFeatureCount_Init_AffinityNoiseVariance_ItemBiasF39_isDone = false;
					this.Changed_ItemCount_NonZeroItemFeatureCounts_numberOfIterationsDecreased_Init_AffinityNoiseVariance_It52_isInitialised = false;
					this.Changed_ItemBiasFeatureWeightPriorVariance_ItemCount_ItemFeatureCount_NonZeroItemFeatureCounts_NonZe55_isInitialised = false;
					this.Changed_ItemBiasInitializer_ItemCount_numberOfIterationsDecreased_Init_AffinityNoiseVariance_ItemBia19_isInitialised = false;
					this.Changed_ItemCount_numberOfIterationsDecreased_Init_AffinityNoiseVariance_ItemBiasFeatureWeightPriorV8_isInitialised = false;
					this.Changed_ItemCount_TraitCount_isDone = false;
					this.Changed_ItemCount_ItemTraitsInitializer_TraitCount_isDone = false;
					this.Changed_ItemCount_NonZeroItemFeatureCounts_TraitCount_isDone = false;
					this.Changed_ItemCount_NonZeroItemFeatureCounts_numberOfIterationsDecreased_TraitCount_Init_AffinityNoise50_isDone = false;
					this.Changed_ItemCount_ItemTraitsMessage_TraitCount_isDone = false;
					this.Changed_ItemCount_ItemTraitsInitializer_numberOfIterationsDecreased_TraitCount_Init_AffinityNoiseVar14_isDone = false;
					this.Changed_ItemCount_numberOfIterationsDecreased_TraitCount_Init_AffinityNoiseVariance_ItemBiasFeatureW6_isDone = false;
					this.Changed_NonZeroUserFeatureCounts_numberOfIterationsDecreased_UserCount_Init_AffinityNoiseVariance_It44_isInitialised = false;
					this.Changed_NonZeroUserFeatureCounts_NonZeroUserFeatureIndices_numberOfIterationsDecreased_UserBiasFeatu45_isInitialised = false;
					this.Changed_numberOfIterationsDecreased_UserBiasInitializer_UserCount_Init_AffinityNoiseVariance_ItemBia17_isInitialised = false;
					this.Changed_numberOfIterationsDecreased_UserCount_UserThresholdCount_UserThresholdsInitializer_Init_Affi23_isInitialised = false;
					this.Changed_numberOfIterationsDecreased_UserCount_UserThresholdCount_Init_AffinityNoiseVariance_ItemBias20_isInitialised = false;
					this.Changed_numberOfIterationsDecreased_UserCount_UserThresholdCount_UseSharedUserThresholds_Init_Affini21_isInitialised = false;
					this.Changed_numberOfIterationsDecreased_UserCount_Init_AffinityNoiseVariance_ItemBiasFeatureWeightPriorV7_isInitialised = false;
					this.Changed_TraitCount_UserCount_isDone = false;
					this.Changed_TraitCount_UserCount_UserTraitsInitializer_isDone = false;
					this.Changed_NonZeroUserFeatureCounts_TraitCount_UserCount_isDone = false;
					this.Changed_NonZeroUserFeatureCounts_numberOfIterationsDecreased_TraitCount_UserCount_Init_AffinityNoise42_isDone = false;
					this.Changed_numberOfIterationsDecreased_TraitCount_UserCount_UserTraitsInitializer_Init_AffinityNoiseVar27_isDone = false;
					this.Changed_TraitCount_UserCount_UserTraitsMessage_isDone = false;
					this.Changed_numberOfIterationsDecreased_TraitCount_UserCount_Init_AffinityNoiseVariance_ItemBiasFeatureW3_isDone = false;
					this.Changed_AffinityNoiseVariance_ItemBiasFeatureWeightPriorVariance_ItemBiasInitializer_ItemBiasMessage59_isDone = false;
					this.Changed_AffinityNoiseVariance_ItemBiasFeatureWeightPriorVariance_ItemBiasInitializer_ItemBiasMessage60_isDone = false;
				}
			}
		}

		/// <summary>The externally-specified value of 'UserBiasFeatureWeightPriorVariance'</summary>
		public double UserBiasFeatureWeightPriorVariance
		{
			get {
				return this.userBiasFeatureWeightPriorVariance;
			}
			set {
				if (this.userBiasFeatureWeightPriorVariance!=value) {
					this.userBiasFeatureWeightPriorVariance = value;
					this.numberOfIterationsDone = 0;
					this.Changed_numberOfIterationsDecreased_ObservationCount_Ratings_UserThresholdCount_Init_AffinityNoiseVa38_isInitialised = false;
					this.Changed_numberOfIterationsDecreased_ObservationCount_UserThresholdCount_UseSharedUserThresholds_Init33_isInitialised = false;
					this.Changed_numberOfIterationsDecreased_ObservationCount_UserThresholdCount_Init_AffinityNoiseVariance_I35_isInitialised = false;
					this.Changed_numberOfIterationsDecreased_ObservationCount_Init_AffinityNoiseVariance_ItemBiasFeatureWeigh31_isInitialised = false;
					this.Changed_numberOfIterationsDecreased_ObservationCount_TraitCount_Init_AffinityNoiseVariance_ItemBiasF30_isInitialised = false;
					this.Changed_UserBiasFeatureWeightPriorVariance_UserFeatureCount_isDone = false;
					this.Changed_ItemFeatureCount_numberOfIterationsDecreased_TraitCount_Init_AffinityNoiseVariance_ItemBiasF47_isInitialised = false;
					this.Changed_numberOfIterationsDecreased_TraitCount_UserFeatureCount_Init_AffinityNoiseVariance_ItemBiasF39_isInitialised = false;
					this.Changed_ItemCount_NonZeroItemFeatureCounts_numberOfIterationsDecreased_Init_AffinityNoiseVariance_It52_isInitialised = false;
					this.Changed_ItemBiasFeatureWeightPriorVariance_ItemCount_ItemFeatureCount_NonZeroItemFeatureCounts_NonZe55_isInitialised = false;
					this.Changed_ItemBiasInitializer_ItemCount_numberOfIterationsDecreased_Init_AffinityNoiseVariance_ItemBia19_isInitialised = false;
					this.Changed_ItemCount_numberOfIterationsDecreased_Init_AffinityNoiseVariance_ItemBiasFeatureWeightPriorV8_isInitialised = false;
					this.Changed_ItemCount_NonZeroItemFeatureCounts_numberOfIterationsDecreased_TraitCount_Init_AffinityNoise50_isInitialised = false;
					this.Changed_ItemCount_ItemTraitsInitializer_numberOfIterationsDecreased_TraitCount_Init_AffinityNoiseVar14_isInitialised = false;
					this.Changed_ItemCount_numberOfIterationsDecreased_TraitCount_Init_AffinityNoiseVariance_ItemBiasFeatureW6_isInitialised = false;
					this.Changed_NonZeroUserFeatureCounts_numberOfIterationsDecreased_UserCount_Init_AffinityNoiseVariance_It44_isInitialised = false;
					this.Changed_NonZeroUserFeatureCounts_NonZeroUserFeatureIndices_numberOfIterationsDecreased_UserBiasFeatu45_isDone = false;
					this.Changed_numberOfIterationsDecreased_UserBiasInitializer_UserCount_Init_AffinityNoiseVariance_ItemBia17_isInitialised = false;
					this.Changed_numberOfIterationsDecreased_UserCount_UserThresholdCount_UserThresholdsInitializer_Init_Affi23_isInitialised = false;
					this.Changed_numberOfIterationsDecreased_UserCount_UserThresholdCount_Init_AffinityNoiseVariance_ItemBias20_isInitialised = false;
					this.Changed_numberOfIterationsDecreased_UserCount_UserThresholdCount_UseSharedUserThresholds_Init_Affini21_isInitialised = false;
					this.Changed_numberOfIterationsDecreased_UserCount_Init_AffinityNoiseVariance_ItemBiasFeatureWeightPriorV7_isInitialised = false;
					this.Changed_NonZeroUserFeatureCounts_numberOfIterationsDecreased_TraitCount_UserCount_Init_AffinityNoise42_isInitialised = false;
					this.Changed_numberOfIterationsDecreased_TraitCount_UserCount_UserTraitsInitializer_Init_AffinityNoiseVar27_isInitialised = false;
					this.Changed_numberOfIterationsDecreased_TraitCount_UserCount_Init_AffinityNoiseVariance_ItemBiasFeatureW3_isInitialised = false;
					this.Changed_AffinityNoiseVariance_ItemBiasFeatureWeightPriorVariance_ItemBiasInitializer_ItemBiasMessage59_isDone = false;
					this.Changed_AffinityNoiseVariance_ItemBiasFeatureWeightPriorVariance_ItemBiasInitializer_ItemBiasMessage60_isDone = false;
				}
			}
		}

		/// <summary>The externally-specified value of 'UserBiasInitializer'</summary>
		public DistributionStructArray<Gaussian,double> UserBiasInitializer
		{
			get {
				return this.userBiasInitializer;
			}
			set {
				this.userBiasInitializer = value;
				this.numberOfIterationsDone = 0;
				this.Changed_numberOfIterationsDecreased_ObservationCount_Ratings_UserThresholdCount_Init_AffinityNoiseVa38_isInitialised = false;
				this.Changed_numberOfIterationsDecreased_ObservationCount_UserThresholdCount_UseSharedUserThresholds_Init33_isInitialised = false;
				this.Changed_numberOfIterationsDecreased_ObservationCount_UserThresholdCount_Init_AffinityNoiseVariance_I35_isInitialised = false;
				this.Changed_numberOfIterationsDecreased_ObservationCount_Init_AffinityNoiseVariance_ItemBiasFeatureWeigh31_isInitialised = false;
				this.Changed_numberOfIterationsDecreased_ObservationCount_TraitCount_Init_AffinityNoiseVariance_ItemBiasF30_isInitialised = false;
				this.Changed_ItemFeatureCount_numberOfIterationsDecreased_TraitCount_Init_AffinityNoiseVariance_ItemBiasF47_isInitialised = false;
				this.Changed_numberOfIterationsDecreased_TraitCount_UserFeatureCount_Init_AffinityNoiseVariance_ItemBiasF39_isInitialised = false;
				this.Changed_ItemCount_NonZeroItemFeatureCounts_numberOfIterationsDecreased_Init_AffinityNoiseVariance_It52_isInitialised = false;
				this.Changed_ItemBiasFeatureWeightPriorVariance_ItemCount_ItemFeatureCount_NonZeroItemFeatureCounts_NonZe55_isInitialised = false;
				this.Changed_ItemBiasInitializer_ItemCount_numberOfIterationsDecreased_Init_AffinityNoiseVariance_ItemBia19_isInitialised = false;
				this.Changed_ItemCount_numberOfIterationsDecreased_Init_AffinityNoiseVariance_ItemBiasFeatureWeightPriorV8_isInitialised = false;
				this.Changed_ItemCount_NonZeroItemFeatureCounts_numberOfIterationsDecreased_TraitCount_Init_AffinityNoise50_isInitialised = false;
				this.Changed_ItemCount_ItemTraitsInitializer_numberOfIterationsDecreased_TraitCount_Init_AffinityNoiseVar14_isInitialised = false;
				this.Changed_ItemCount_numberOfIterationsDecreased_TraitCount_Init_AffinityNoiseVariance_ItemBiasFeatureW6_isInitialised = false;
				this.Changed_UserBiasInitializer_UserCount_isDone = false;
				this.Changed_NonZeroUserFeatureCounts_numberOfIterationsDecreased_UserCount_Init_AffinityNoiseVariance_It44_isInitialised = false;
				this.Changed_NonZeroUserFeatureCounts_NonZeroUserFeatureIndices_numberOfIterationsDecreased_UserBiasFeatu45_isInitialised = false;
				this.Changed_numberOfIterationsDecreased_UserBiasInitializer_UserCount_Init_AffinityNoiseVariance_ItemBia17_isDone = false;
				this.Changed_numberOfIterationsDecreased_UserCount_UserThresholdCount_UserThresholdsInitializer_Init_Affi23_isInitialised = false;
				this.Changed_numberOfIterationsDecreased_UserCount_UserThresholdCount_Init_AffinityNoiseVariance_ItemBias20_isInitialised = false;
				this.Changed_numberOfIterationsDecreased_UserCount_UserThresholdCount_UseSharedUserThresholds_Init_Affini21_isInitialised = false;
				this.Changed_numberOfIterationsDecreased_UserCount_Init_AffinityNoiseVariance_ItemBiasFeatureWeightPriorV7_isInitialised = false;
				this.Changed_NonZeroUserFeatureCounts_numberOfIterationsDecreased_TraitCount_UserCount_Init_AffinityNoise42_isInitialised = false;
				this.Changed_numberOfIterationsDecreased_TraitCount_UserCount_UserTraitsInitializer_Init_AffinityNoiseVar27_isInitialised = false;
				this.Changed_numberOfIterationsDecreased_TraitCount_UserCount_Init_AffinityNoiseVariance_ItemBiasFeatureW3_isInitialised = false;
				this.Changed_AffinityNoiseVariance_ItemBiasFeatureWeightPriorVariance_ItemBiasInitializer_ItemBiasMessage59_isDone = false;
				this.Changed_AffinityNoiseVariance_ItemBiasFeatureWeightPriorVariance_ItemBiasInitializer_ItemBiasMessage60_isDone = false;
			}
		}

		/// <summary>The externally-specified value of 'UserBiasMessage'</summary>
		public DistributionStructArray<Gaussian,double> UserBiasMessage
		{
			get {
				return this.userBiasMessage;
			}
			set {
				this.userBiasMessage = value;
				this.numberOfIterationsDone = 0;
				this.Changed_numberOfIterationsDecreased_ObservationCount_Ratings_UserThresholdCount_Init_AffinityNoiseVa38_isInitialised = false;
				this.Changed_numberOfIterationsDecreased_ObservationCount_UserThresholdCount_UseSharedUserThresholds_Init33_isInitialised = false;
				this.Changed_numberOfIterationsDecreased_ObservationCount_UserThresholdCount_Init_AffinityNoiseVariance_I35_isInitialised = false;
				this.Changed_numberOfIterationsDecreased_ObservationCount_Init_AffinityNoiseVariance_ItemBiasFeatureWeigh31_isInitialised = false;
				this.Changed_numberOfIterationsDecreased_ObservationCount_TraitCount_Init_AffinityNoiseVariance_ItemBiasF30_isInitialised = false;
				this.Changed_ItemFeatureCount_numberOfIterationsDecreased_TraitCount_Init_AffinityNoiseVariance_ItemBiasF47_isInitialised = false;
				this.Changed_numberOfIterationsDecreased_TraitCount_UserFeatureCount_Init_AffinityNoiseVariance_ItemBiasF39_isInitialised = false;
				this.Changed_ItemCount_NonZeroItemFeatureCounts_numberOfIterationsDecreased_Init_AffinityNoiseVariance_It52_isInitialised = false;
				this.Changed_ItemBiasFeatureWeightPriorVariance_ItemCount_ItemFeatureCount_NonZeroItemFeatureCounts_NonZe55_isInitialised = false;
				this.Changed_ItemBiasInitializer_ItemCount_numberOfIterationsDecreased_Init_AffinityNoiseVariance_ItemBia19_isInitialised = false;
				this.Changed_ItemCount_numberOfIterationsDecreased_Init_AffinityNoiseVariance_ItemBiasFeatureWeightPriorV8_isInitialised = false;
				this.Changed_ItemCount_NonZeroItemFeatureCounts_numberOfIterationsDecreased_TraitCount_Init_AffinityNoise50_isInitialised = false;
				this.Changed_ItemCount_ItemTraitsInitializer_numberOfIterationsDecreased_TraitCount_Init_AffinityNoiseVar14_isInitialised = false;
				this.Changed_ItemCount_numberOfIterationsDecreased_TraitCount_Init_AffinityNoiseVariance_ItemBiasFeatureW6_isInitialised = false;
				this.Changed_NonZeroUserFeatureCounts_numberOfIterationsDecreased_UserCount_Init_AffinityNoiseVariance_It44_isInitialised = false;
				this.Changed_NonZeroUserFeatureCounts_NonZeroUserFeatureIndices_numberOfIterationsDecreased_UserBiasFeatu45_isInitialised = false;
				this.Changed_numberOfIterationsDecreased_UserBiasInitializer_UserCount_Init_AffinityNoiseVariance_ItemBia17_isInitialised = false;
				this.Changed_UserBiasMessage_UserCount_isDone = false;
				this.Changed_numberOfIterationsDecreased_UserCount_UserThresholdCount_UserThresholdsInitializer_Init_Affi23_isInitialised = false;
				this.Changed_numberOfIterationsDecreased_UserCount_UserThresholdCount_Init_AffinityNoiseVariance_ItemBias20_isInitialised = false;
				this.Changed_numberOfIterationsDecreased_UserCount_UserThresholdCount_UseSharedUserThresholds_Init_Affini21_isInitialised = false;
				this.Changed_numberOfIterationsDecreased_UserCount_Init_AffinityNoiseVariance_ItemBiasFeatureWeightPriorV7_isInitialised = false;
				this.Changed_NonZeroUserFeatureCounts_numberOfIterationsDecreased_TraitCount_UserCount_Init_AffinityNoise42_isInitialised = false;
				this.Changed_numberOfIterationsDecreased_TraitCount_UserCount_UserTraitsInitializer_Init_AffinityNoiseVar27_isInitialised = false;
				this.Changed_numberOfIterationsDecreased_TraitCount_UserCount_Init_AffinityNoiseVariance_ItemBiasFeatureW3_isInitialised = false;
				this.Changed_AffinityNoiseVariance_ItemBiasFeatureWeightPriorVariance_ItemBiasInitializer_ItemBiasMessage59_isDone = false;
				this.Changed_AffinityNoiseVariance_ItemBiasFeatureWeightPriorVariance_ItemBiasInitializer_ItemBiasMessage60_isDone = false;
			}
		}

		/// <summary>The externally-specified value of 'UserBiasVariance'</summary>
		public double UserBiasVariance
		{
			get {
				return this.userBiasVariance;
			}
			set {
				if (this.userBiasVariance!=value) {
					this.userBiasVariance = value;
					this.numberOfIterationsDone = 0;
					this.Changed_numberOfIterationsDecreased_ObservationCount_Ratings_UserThresholdCount_Init_AffinityNoiseVa38_isInitialised = false;
					this.Changed_numberOfIterationsDecreased_ObservationCount_UserThresholdCount_UseSharedUserThresholds_Init33_isInitialised = false;
					this.Changed_numberOfIterationsDecreased_ObservationCount_UserThresholdCount_Init_AffinityNoiseVariance_I35_isInitialised = false;
					this.Changed_numberOfIterationsDecreased_ObservationCount_Init_AffinityNoiseVariance_ItemBiasFeatureWeigh31_isInitialised = false;
					this.Changed_numberOfIterationsDecreased_ObservationCount_TraitCount_Init_AffinityNoiseVariance_ItemBiasF30_isInitialised = false;
					this.Changed_ItemFeatureCount_numberOfIterationsDecreased_TraitCount_Init_AffinityNoiseVariance_ItemBiasF47_isInitialised = false;
					this.Changed_numberOfIterationsDecreased_TraitCount_UserFeatureCount_Init_AffinityNoiseVariance_ItemBiasF39_isInitialised = false;
					this.Changed_ItemCount_NonZeroItemFeatureCounts_numberOfIterationsDecreased_Init_AffinityNoiseVariance_It52_isInitialised = false;
					this.Changed_ItemBiasFeatureWeightPriorVariance_ItemCount_ItemFeatureCount_NonZeroItemFeatureCounts_NonZe55_isInitialised = false;
					this.Changed_ItemBiasInitializer_ItemCount_numberOfIterationsDecreased_Init_AffinityNoiseVariance_ItemBia19_isInitialised = false;
					this.Changed_ItemCount_numberOfIterationsDecreased_Init_AffinityNoiseVariance_ItemBiasFeatureWeightPriorV8_isInitialised = false;
					this.Changed_ItemCount_NonZeroItemFeatureCounts_numberOfIterationsDecreased_TraitCount_Init_AffinityNoise50_isInitialised = false;
					this.Changed_ItemCount_ItemTraitsInitializer_numberOfIterationsDecreased_TraitCount_Init_AffinityNoiseVar14_isInitialised = false;
					this.Changed_ItemCount_numberOfIterationsDecreased_TraitCount_Init_AffinityNoiseVariance_ItemBiasFeatureW6_isInitialised = false;
					this.Changed_NonZeroUserFeatureCounts_numberOfIterationsDecreased_UserCount_Init_AffinityNoiseVariance_It44_isInitialised = false;
					this.Changed_NonZeroUserFeatureCounts_NonZeroUserFeatureIndices_numberOfIterationsDecreased_UserBiasFeatu45_isInitialised = false;
					this.Changed_numberOfIterationsDecreased_UserBiasInitializer_UserCount_Init_AffinityNoiseVariance_ItemBia17_isInitialised = false;
					this.Changed_numberOfIterationsDecreased_UserCount_UserThresholdCount_UserThresholdsInitializer_Init_Affi23_isInitialised = false;
					this.Changed_numberOfIterationsDecreased_UserCount_UserThresholdCount_Init_AffinityNoiseVariance_ItemBias20_isInitialised = false;
					this.Changed_numberOfIterationsDecreased_UserCount_UserThresholdCount_UseSharedUserThresholds_Init_Affini21_isInitialised = false;
					this.Changed_numberOfIterationsDecreased_UserCount_Init_AffinityNoiseVariance_ItemBiasFeatureWeightPriorV7_isInitialised = false;
					this.Changed_NonZeroUserFeatureCounts_numberOfIterationsDecreased_TraitCount_UserCount_Init_AffinityNoise42_isInitialised = false;
					this.Changed_numberOfIterationsDecreased_TraitCount_UserCount_UserTraitsInitializer_Init_AffinityNoiseVar27_isInitialised = false;
					this.Changed_numberOfIterationsDecreased_TraitCount_UserCount_Init_AffinityNoiseVariance_ItemBiasFeatureW3_isInitialised = false;
					this.Changed_AffinityNoiseVariance_ItemBiasFeatureWeightPriorVariance_ItemBiasInitializer_ItemBiasMessage59_isDone = false;
					this.Changed_AffinityNoiseVariance_ItemBiasFeatureWeightPriorVariance_ItemBiasInitializer_ItemBiasMessage60_isDone = false;
				}
			}
		}

		/// <summary>The externally-specified value of 'UserCount'</summary>
		public int UserCount
		{
			get {
				return this.userCount;
			}
			set {
				if (this.userCount!=value) {
					this.userCount = value;
					this.numberOfIterationsDone = 0;
					this.Changed_numberOfIterationsDecreased_ObservationCount_Ratings_UserThresholdCount_Init_AffinityNoiseVa38_isInitialised = false;
					this.Changed_numberOfIterationsDecreased_ObservationCount_UserThresholdCount_UseSharedUserThresholds_Init33_isInitialised = false;
					this.Changed_numberOfIterationsDecreased_ObservationCount_UserThresholdCount_Init_AffinityNoiseVariance_I35_isInitialised = false;
					this.Changed_numberOfIterationsDecreased_ObservationCount_Init_AffinityNoiseVariance_ItemBiasFeatureWeigh31_isInitialised = false;
					this.Changed_numberOfIterationsDecreased_ObservationCount_TraitCount_Init_AffinityNoiseVariance_ItemBiasF30_isInitialised = false;
					this.Changed_ItemFeatureCount_numberOfIterationsDecreased_TraitCount_Init_AffinityNoiseVariance_ItemBiasF47_isInitialised = false;
					this.Changed_numberOfIterationsDecreased_TraitCount_UserFeatureCount_Init_AffinityNoiseVariance_ItemBiasF39_isInitialised = false;
					this.Changed_ItemCount_NonZeroItemFeatureCounts_numberOfIterationsDecreased_Init_AffinityNoiseVariance_It52_isInitialised = false;
					this.Changed_ItemBiasFeatureWeightPriorVariance_ItemCount_ItemFeatureCount_NonZeroItemFeatureCounts_NonZe55_isInitialised = false;
					this.Changed_ItemBiasInitializer_ItemCount_numberOfIterationsDecreased_Init_AffinityNoiseVariance_ItemBia19_isInitialised = false;
					this.Changed_ItemCount_numberOfIterationsDecreased_Init_AffinityNoiseVariance_ItemBiasFeatureWeightPriorV8_isInitialised = false;
					this.Changed_ItemCount_NonZeroItemFeatureCounts_numberOfIterationsDecreased_TraitCount_Init_AffinityNoise50_isInitialised = false;
					this.Changed_ItemCount_ItemTraitsInitializer_numberOfIterationsDecreased_TraitCount_Init_AffinityNoiseVar14_isInitialised = false;
					this.Changed_ItemCount_numberOfIterationsDecreased_TraitCount_Init_AffinityNoiseVariance_ItemBiasFeatureW6_isInitialised = false;
					this.Changed_UserCount_isDone = false;
					this.Changed_UserBiasInitializer_UserCount_isDone = false;
					this.Changed_NonZeroUserFeatureCounts_UserCount_isDone = false;
					this.Changed_NonZeroUserFeatureCounts_numberOfIterationsDecreased_UserCount_Init_AffinityNoiseVariance_It44_isDone = false;
					this.Changed_NonZeroUserFeatureCounts_NonZeroUserFeatureIndices_numberOfIterationsDecreased_UserBiasFeatu45_isDone = false;
					this.Changed_numberOfIterationsDecreased_UserBiasInitializer_UserCount_Init_AffinityNoiseVariance_ItemBia17_isDone = false;
					this.Changed_UserBiasMessage_UserCount_isDone = false;
					this.Changed_UserCount_UserThresholdCount_isDone = false;
					this.Changed_UserCount_UserThresholdCount_UserThresholdsInitializer_isDone = false;
					this.Changed_MiddleUserThresholdIndex_UserCount_UserThresholdCount_UserThresholdPriorMean_UserThresholdPr58_isDone = false;
					this.Changed_numberOfIterationsDecreased_UserCount_UserThresholdCount_UserThresholdsInitializer_Init_Affi23_isDone = false;
					this.Changed_UserCount_UserThresholdCount_UserThresholdsMessage_isDone = false;
					this.Changed_numberOfIterationsDecreased_UserCount_UserThresholdCount_Init_AffinityNoiseVariance_ItemBias20_isDone = false;
					this.Changed_numberOfIterationsDecreased_UserCount_UserThresholdCount_UseSharedUserThresholds_Init_Affini21_isDone = false;
					this.Changed_numberOfIterationsDecreased_UserCount_Init_AffinityNoiseVariance_ItemBiasFeatureWeightPriorV7_isDone = false;
					this.Changed_TraitCount_UserCount_isDone = false;
					this.Changed_TraitCount_UserCount_UserTraitsInitializer_isDone = false;
					this.Changed_NonZeroUserFeatureCounts_TraitCount_UserCount_isDone = false;
					this.Changed_NonZeroUserFeatureCounts_numberOfIterationsDecreased_TraitCount_UserCount_Init_AffinityNoise42_isDone = false;
					this.Changed_numberOfIterationsDecreased_TraitCount_UserCount_UserTraitsInitializer_Init_AffinityNoiseVar27_isDone = false;
					this.Changed_TraitCount_UserCount_UserTraitsMessage_isDone = false;
					this.Changed_numberOfIterationsDecreased_TraitCount_UserCount_Init_AffinityNoiseVariance_ItemBiasFeatureW3_isDone = false;
					this.Changed_AffinityNoiseVariance_ItemBiasFeatureWeightPriorVariance_ItemBiasInitializer_ItemBiasMessage59_isDone = false;
					this.Changed_AffinityNoiseVariance_ItemBiasFeatureWeightPriorVariance_ItemBiasInitializer_ItemBiasMessage60_isDone = false;
				}
			}
		}

		/// <summary>The externally-specified value of 'UserFeatureCount'</summary>
		public int UserFeatureCount
		{
			get {
				return this.userFeatureCount;
			}
			set {
				if (this.userFeatureCount!=value) {
					this.userFeatureCount = value;
					this.numberOfIterationsDone = 0;
					this.Changed_numberOfIterationsDecreased_ObservationCount_Ratings_UserThresholdCount_Init_AffinityNoiseVa38_isInitialised = false;
					this.Changed_numberOfIterationsDecreased_ObservationCount_UserThresholdCount_UseSharedUserThresholds_Init33_isInitialised = false;
					this.Changed_numberOfIterationsDecreased_ObservationCount_UserThresholdCount_Init_AffinityNoiseVariance_I35_isInitialised = false;
					this.Changed_numberOfIterationsDecreased_ObservationCount_Init_AffinityNoiseVariance_ItemBiasFeatureWeigh31_isInitialised = false;
					this.Changed_numberOfIterationsDecreased_ObservationCount_TraitCount_Init_AffinityNoiseVariance_ItemBiasF30_isInitialised = false;
					this.Changed_UserFeatureCount_isDone = false;
					this.Changed_UserBiasFeatureWeightPriorVariance_UserFeatureCount_isDone = false;
					this.Changed_ItemFeatureCount_numberOfIterationsDecreased_TraitCount_Init_AffinityNoiseVariance_ItemBiasF47_isInitialised = false;
					this.Changed_TraitCount_UserFeatureCount_isDone = false;
					this.Changed_TraitCount_UserFeatureCount_UserTraitFeatureWeightPriorVariance_isDone = false;
					this.Changed_numberOfIterationsDecreased_TraitCount_UserFeatureCount_Init_AffinityNoiseVariance_ItemBiasF39_isDone = false;
					this.Changed_ItemCount_NonZeroItemFeatureCounts_numberOfIterationsDecreased_Init_AffinityNoiseVariance_It52_isInitialised = false;
					this.Changed_ItemBiasFeatureWeightPriorVariance_ItemCount_ItemFeatureCount_NonZeroItemFeatureCounts_NonZe55_isInitialised = false;
					this.Changed_ItemBiasInitializer_ItemCount_numberOfIterationsDecreased_Init_AffinityNoiseVariance_ItemBia19_isInitialised = false;
					this.Changed_ItemCount_numberOfIterationsDecreased_Init_AffinityNoiseVariance_ItemBiasFeatureWeightPriorV8_isInitialised = false;
					this.Changed_ItemCount_NonZeroItemFeatureCounts_numberOfIterationsDecreased_TraitCount_Init_AffinityNoise50_isInitialised = false;
					this.Changed_ItemCount_ItemTraitsInitializer_numberOfIterationsDecreased_TraitCount_Init_AffinityNoiseVar14_isInitialised = false;
					this.Changed_ItemCount_numberOfIterationsDecreased_TraitCount_Init_AffinityNoiseVariance_ItemBiasFeatureW6_isInitialised = false;
					this.Changed_NonZeroUserFeatureCounts_numberOfIterationsDecreased_UserCount_Init_AffinityNoiseVariance_It44_isInitialised = false;
					this.Changed_NonZeroUserFeatureCounts_NonZeroUserFeatureIndices_numberOfIterationsDecreased_UserBiasFeatu45_isDone = false;
					this.Changed_numberOfIterationsDecreased_UserBiasInitializer_UserCount_Init_AffinityNoiseVariance_ItemBia17_isInitialised = false;
					this.Changed_numberOfIterationsDecreased_UserCount_UserThresholdCount_UserThresholdsInitializer_Init_Affi23_isInitialised = false;
					this.Changed_numberOfIterationsDecreased_UserCount_UserThresholdCount_Init_AffinityNoiseVariance_ItemBias20_isInitialised = false;
					this.Changed_numberOfIterationsDecreased_UserCount_UserThresholdCount_UseSharedUserThresholds_Init_Affini21_isInitialised = false;
					this.Changed_numberOfIterationsDecreased_UserCount_Init_AffinityNoiseVariance_ItemBiasFeatureWeightPriorV7_isInitialised = false;
					this.Changed_NonZeroUserFeatureCounts_numberOfIterationsDecreased_TraitCount_UserCount_Init_AffinityNoise42_isInitialised = false;
					this.Changed_numberOfIterationsDecreased_TraitCount_UserCount_UserTraitsInitializer_Init_AffinityNoiseVar27_isInitialised = false;
					this.Changed_numberOfIterationsDecreased_TraitCount_UserCount_Init_AffinityNoiseVariance_ItemBiasFeatureW3_isInitialised = false;
					this.Changed_AffinityNoiseVariance_ItemBiasFeatureWeightPriorVariance_ItemBiasInitializer_ItemBiasMessage59_isDone = false;
					this.Changed_AffinityNoiseVariance_ItemBiasFeatureWeightPriorVariance_ItemBiasInitializer_ItemBiasMessage60_isDone = false;
				}
			}
		}

		/// <summary>The externally-specified value of 'UserIds'</summary>
		public IReadOnlyList<int> UserIds
		{
			get {
				return this.userIds;
			}
			set {
				if ((value!=null)&&(value.Count!=this.observationCount)) {
					throw new ArgumentException(((("Provided array of length "+value.Count)+" when length ")+this.observationCount)+" was expected for variable \'UserIds\'");
				}
				this.userIds = value;
				this.numberOfIterationsDone = 0;
				this.Changed_numberOfIterationsDecreased_ObservationCount_Ratings_UserThresholdCount_Init_AffinityNoiseVa38_isInitialised = false;
				this.Changed_numberOfIterationsDecreased_ObservationCount_UserThresholdCount_UseSharedUserThresholds_Init33_isInitialised = false;
				this.Changed_numberOfIterationsDecreased_ObservationCount_UserThresholdCount_Init_AffinityNoiseVariance_I35_isInitialised = false;
				this.Changed_numberOfIterationsDecreased_ObservationCount_Init_AffinityNoiseVariance_ItemBiasFeatureWeigh31_isInitialised = false;
				this.Changed_numberOfIterationsDecreased_ObservationCount_TraitCount_Init_AffinityNoiseVariance_ItemBiasF30_isInitialised = false;
				this.Changed_ItemFeatureCount_numberOfIterationsDecreased_TraitCount_Init_AffinityNoiseVariance_ItemBiasF47_isInitialised = false;
				this.Changed_numberOfIterationsDecreased_TraitCount_UserFeatureCount_Init_AffinityNoiseVariance_ItemBiasF39_isInitialised = false;
				this.Changed_ItemCount_NonZeroItemFeatureCounts_numberOfIterationsDecreased_Init_AffinityNoiseVariance_It52_isInitialised = false;
				this.Changed_ItemBiasFeatureWeightPriorVariance_ItemCount_ItemFeatureCount_NonZeroItemFeatureCounts_NonZe55_isInitialised = false;
				this.Changed_ItemBiasInitializer_ItemCount_numberOfIterationsDecreased_Init_AffinityNoiseVariance_ItemBia19_isInitialised = false;
				this.Changed_ItemCount_numberOfIterationsDecreased_Init_AffinityNoiseVariance_ItemBiasFeatureWeightPriorV8_isInitialised = false;
				this.Changed_ItemCount_NonZeroItemFeatureCounts_numberOfIterationsDecreased_TraitCount_Init_AffinityNoise50_isInitialised = false;
				this.Changed_ItemCount_ItemTraitsInitializer_numberOfIterationsDecreased_TraitCount_Init_AffinityNoiseVar14_isInitialised = false;
				this.Changed_ItemCount_numberOfIterationsDecreased_TraitCount_Init_AffinityNoiseVariance_ItemBiasFeatureW6_isInitialised = false;
				this.Changed_NonZeroUserFeatureCounts_numberOfIterationsDecreased_UserCount_Init_AffinityNoiseVariance_It44_isInitialised = false;
				this.Changed_NonZeroUserFeatureCounts_NonZeroUserFeatureIndices_numberOfIterationsDecreased_UserBiasFeatu45_isInitialised = false;
				this.Changed_numberOfIterationsDecreased_UserBiasInitializer_UserCount_Init_AffinityNoiseVariance_ItemBia17_isInitialised = false;
				this.Changed_numberOfIterationsDecreased_UserCount_UserThresholdCount_UserThresholdsInitializer_Init_Affi23_isInitialised = false;
				this.Changed_numberOfIterationsDecreased_UserCount_UserThresholdCount_Init_AffinityNoiseVariance_ItemBias20_isInitialised = false;
				this.Changed_numberOfIterationsDecreased_UserCount_UserThresholdCount_UseSharedUserThresholds_Init_Affini21_isInitialised = false;
				this.Changed_numberOfIterationsDecreased_UserCount_Init_AffinityNoiseVariance_ItemBiasFeatureWeightPriorV7_isInitialised = false;
				this.Changed_NonZeroUserFeatureCounts_numberOfIterationsDecreased_TraitCount_UserCount_Init_AffinityNoise42_isInitialised = false;
				this.Changed_numberOfIterationsDecreased_TraitCount_UserCount_UserTraitsInitializer_Init_AffinityNoiseVar27_isInitialised = false;
				this.Changed_numberOfIterationsDecreased_TraitCount_UserCount_Init_AffinityNoiseVariance_ItemBiasFeatureW3_isInitialised = false;
				this.Changed_AffinityNoiseVariance_ItemBiasFeatureWeightPriorVariance_ItemBiasInitializer_ItemBiasMessage59_isDone = false;
				this.Changed_AffinityNoiseVariance_ItemBiasFeatureWeightPriorVariance_ItemBiasInitializer_ItemBiasMessage60_isDone = false;
			}
		}

		/// <summary>The externally-specified value of 'UserThresholdCount'</summary>
		public int UserThresholdCount
		{
			get {
				return this.userThresholdCount;
			}
			set {
				if (this.userThresholdCount!=value) {
					this.userThresholdCount = value;
					this.numberOfIterationsDone = 0;
					this.Changed_MiddleUserThresholdIndex_UserThresholdCount_isDone = false;
					this.Changed_MiddleUserThresholdIndex_UserThresholdCount_UserThresholdPriorVariance_isDone = false;
					this.Changed_UserThresholdCount_UseSharedUserThresholds_isDone = false;
					this.Changed_ObservationCount_UserThresholdCount_UseSharedUserThresholds_isDone = false;
					this.Changed_ObservationCount_UserThresholdCount_isDone = false;
					this.Changed_numberOfIterationsDecreased_ObservationCount_Ratings_UserThresholdCount_Init_AffinityNoiseVa38_isDone = false;
					this.Changed_numberOfIterationsDecreased_ObservationCount_UserThresholdCount_UseSharedUserThresholds_Init33_isDone = false;
					this.Changed_numberOfIterationsDecreased_ObservationCount_UserThresholdCount_Init_AffinityNoiseVariance_I35_isDone = false;
					this.Changed_numberOfIterationsDecreased_ObservationCount_Init_AffinityNoiseVariance_ItemBiasFeatureWeigh31_isInitialised = false;
					this.Changed_numberOfIterationsDecreased_ObservationCount_TraitCount_Init_AffinityNoiseVariance_ItemBiasF30_isInitialised = false;
					this.Changed_ItemFeatureCount_numberOfIterationsDecreased_TraitCount_Init_AffinityNoiseVariance_ItemBiasF47_isInitialised = false;
					this.Changed_numberOfIterationsDecreased_TraitCount_UserFeatureCount_Init_AffinityNoiseVariance_ItemBiasF39_isInitialised = false;
					this.Changed_ItemCount_NonZeroItemFeatureCounts_numberOfIterationsDecreased_Init_AffinityNoiseVariance_It52_isInitialised = false;
					this.Changed_ItemBiasFeatureWeightPriorVariance_ItemCount_ItemFeatureCount_NonZeroItemFeatureCounts_NonZe55_isInitialised = false;
					this.Changed_ItemBiasInitializer_ItemCount_numberOfIterationsDecreased_Init_AffinityNoiseVariance_ItemBia19_isInitialised = false;
					this.Changed_ItemCount_numberOfIterationsDecreased_Init_AffinityNoiseVariance_ItemBiasFeatureWeightPriorV8_isInitialised = false;
					this.Changed_ItemCount_NonZeroItemFeatureCounts_numberOfIterationsDecreased_TraitCount_Init_AffinityNoise50_isInitialised = false;
					this.Changed_ItemCount_ItemTraitsInitializer_numberOfIterationsDecreased_TraitCount_Init_AffinityNoiseVar14_isInitialised = false;
					this.Changed_ItemCount_numberOfIterationsDecreased_TraitCount_Init_AffinityNoiseVariance_ItemBiasFeatureW6_isInitialised = false;
					this.Changed_NonZeroUserFeatureCounts_numberOfIterationsDecreased_UserCount_Init_AffinityNoiseVariance_It44_isInitialised = false;
					this.Changed_NonZeroUserFeatureCounts_NonZeroUserFeatureIndices_numberOfIterationsDecreased_UserBiasFeatu45_isInitialised = false;
					this.Changed_numberOfIterationsDecreased_UserBiasInitializer_UserCount_Init_AffinityNoiseVariance_ItemBia17_isInitialised = false;
					this.Changed_UserCount_UserThresholdCount_isDone = false;
					this.Changed_UserCount_UserThresholdCount_UserThresholdsInitializer_isDone = false;
					this.Changed_MiddleUserThresholdIndex_UserCount_UserThresholdCount_UserThresholdPriorMean_UserThresholdPr58_isDone = false;
					this.Changed_numberOfIterationsDecreased_UserCount_UserThresholdCount_UserThresholdsInitializer_Init_Affi23_isDone = false;
					this.Changed_UserCount_UserThresholdCount_UserThresholdsMessage_isDone = false;
					this.Changed_numberOfIterationsDecreased_UserCount_UserThresholdCount_Init_AffinityNoiseVariance_ItemBias20_isDone = false;
					this.Changed_numberOfIterationsDecreased_UserCount_UserThresholdCount_UseSharedUserThresholds_Init_Affini21_isDone = false;
					this.Changed_numberOfIterationsDecreased_UserCount_Init_AffinityNoiseVariance_ItemBiasFeatureWeightPriorV7_isInitialised = false;
					this.Changed_NonZeroUserFeatureCounts_numberOfIterationsDecreased_TraitCount_UserCount_Init_AffinityNoise42_isInitialised = false;
					this.Changed_numberOfIterationsDecreased_TraitCount_UserCount_UserTraitsInitializer_Init_AffinityNoiseVar27_isInitialised = false;
					this.Changed_numberOfIterationsDecreased_TraitCount_UserCount_Init_AffinityNoiseVariance_ItemBiasFeatureW3_isInitialised = false;
					this.Changed_AffinityNoiseVariance_ItemBiasFeatureWeightPriorVariance_ItemBiasInitializer_ItemBiasMessage59_isDone = false;
					this.Changed_AffinityNoiseVariance_ItemBiasFeatureWeightPriorVariance_ItemBiasInitializer_ItemBiasMessage60_isDone = false;
				}
			}
		}

		/// <summary>The externally-specified value of 'UserThresholdNoiseVariance'</summary>
		public double UserThresholdNoiseVariance
		{
			get {
				return this.userThresholdNoiseVariance;
			}
			set {
				if (this.userThresholdNoiseVariance!=value) {
					this.userThresholdNoiseVariance = value;
					this.numberOfIterationsDone = 0;
					this.Changed_numberOfIterationsDecreased_ObservationCount_Ratings_UserThresholdCount_Init_AffinityNoiseVa38_isInitialised = false;
					this.Changed_numberOfIterationsDecreased_ObservationCount_UserThresholdCount_UseSharedUserThresholds_Init33_isInitialised = false;
					this.Changed_numberOfIterationsDecreased_ObservationCount_UserThresholdCount_Init_AffinityNoiseVariance_I35_isInitialised = false;
					this.Changed_numberOfIterationsDecreased_ObservationCount_Init_AffinityNoiseVariance_ItemBiasFeatureWeigh31_isInitialised = false;
					this.Changed_numberOfIterationsDecreased_ObservationCount_TraitCount_Init_AffinityNoiseVariance_ItemBiasF30_isInitialised = false;
					this.Changed_ItemFeatureCount_numberOfIterationsDecreased_TraitCount_Init_AffinityNoiseVariance_ItemBiasF47_isInitialised = false;
					this.Changed_numberOfIterationsDecreased_TraitCount_UserFeatureCount_Init_AffinityNoiseVariance_ItemBiasF39_isInitialised = false;
					this.Changed_ItemCount_NonZeroItemFeatureCounts_numberOfIterationsDecreased_Init_AffinityNoiseVariance_It52_isInitialised = false;
					this.Changed_ItemBiasFeatureWeightPriorVariance_ItemCount_ItemFeatureCount_NonZeroItemFeatureCounts_NonZe55_isInitialised = false;
					this.Changed_ItemBiasInitializer_ItemCount_numberOfIterationsDecreased_Init_AffinityNoiseVariance_ItemBia19_isInitialised = false;
					this.Changed_ItemCount_numberOfIterationsDecreased_Init_AffinityNoiseVariance_ItemBiasFeatureWeightPriorV8_isInitialised = false;
					this.Changed_ItemCount_NonZeroItemFeatureCounts_numberOfIterationsDecreased_TraitCount_Init_AffinityNoise50_isInitialised = false;
					this.Changed_ItemCount_ItemTraitsInitializer_numberOfIterationsDecreased_TraitCount_Init_AffinityNoiseVar14_isInitialised = false;
					this.Changed_ItemCount_numberOfIterationsDecreased_TraitCount_Init_AffinityNoiseVariance_ItemBiasFeatureW6_isInitialised = false;
					this.Changed_NonZeroUserFeatureCounts_numberOfIterationsDecreased_UserCount_Init_AffinityNoiseVariance_It44_isInitialised = false;
					this.Changed_NonZeroUserFeatureCounts_NonZeroUserFeatureIndices_numberOfIterationsDecreased_UserBiasFeatu45_isInitialised = false;
					this.Changed_numberOfIterationsDecreased_UserBiasInitializer_UserCount_Init_AffinityNoiseVariance_ItemBia17_isInitialised = false;
					this.Changed_numberOfIterationsDecreased_UserCount_UserThresholdCount_UserThresholdsInitializer_Init_Affi23_isInitialised = false;
					this.Changed_numberOfIterationsDecreased_UserCount_UserThresholdCount_Init_AffinityNoiseVariance_ItemBias20_isInitialised = false;
					this.Changed_numberOfIterationsDecreased_UserCount_UserThresholdCount_UseSharedUserThresholds_Init_Affini21_isInitialised = false;
					this.Changed_numberOfIterationsDecreased_UserCount_Init_AffinityNoiseVariance_ItemBiasFeatureWeightPriorV7_isInitialised = false;
					this.Changed_NonZeroUserFeatureCounts_numberOfIterationsDecreased_TraitCount_UserCount_Init_AffinityNoise42_isInitialised = false;
					this.Changed_numberOfIterationsDecreased_TraitCount_UserCount_UserTraitsInitializer_Init_AffinityNoiseVar27_isInitialised = false;
					this.Changed_numberOfIterationsDecreased_TraitCount_UserCount_Init_AffinityNoiseVariance_ItemBiasFeatureW3_isInitialised = false;
					this.Changed_AffinityNoiseVariance_ItemBiasFeatureWeightPriorVariance_ItemBiasInitializer_ItemBiasMessage59_isDone = false;
					this.Changed_AffinityNoiseVariance_ItemBiasFeatureWeightPriorVariance_ItemBiasInitializer_ItemBiasMessage60_isDone = false;
				}
			}
		}

		/// <summary>The externally-specified value of 'UserThresholdPriorMean'</summary>
		public double[] UserThresholdPriorMean
		{
			get {
				return this.userThresholdPriorMean;
			}
			set {
				if ((value!=null)&&(value.Length!=this.userThresholdCount)) {
					throw new ArgumentException(((("Provided array of length "+value.Length)+" when length ")+this.userThresholdCount)+" was expected for variable \'UserThresholdPriorMean\'");
				}
				this.userThresholdPriorMean = value;
				this.numberOfIterationsDone = 0;
				this.Changed_numberOfIterationsDecreased_ObservationCount_Ratings_UserThresholdCount_Init_AffinityNoiseVa38_isInitialised = false;
				this.Changed_numberOfIterationsDecreased_ObservationCount_UserThresholdCount_UseSharedUserThresholds_Init33_isInitialised = false;
				this.Changed_numberOfIterationsDecreased_ObservationCount_UserThresholdCount_Init_AffinityNoiseVariance_I35_isInitialised = false;
				this.Changed_numberOfIterationsDecreased_ObservationCount_Init_AffinityNoiseVariance_ItemBiasFeatureWeigh31_isInitialised = false;
				this.Changed_numberOfIterationsDecreased_ObservationCount_TraitCount_Init_AffinityNoiseVariance_ItemBiasF30_isInitialised = false;
				this.Changed_ItemFeatureCount_numberOfIterationsDecreased_TraitCount_Init_AffinityNoiseVariance_ItemBiasF47_isInitialised = false;
				this.Changed_numberOfIterationsDecreased_TraitCount_UserFeatureCount_Init_AffinityNoiseVariance_ItemBiasF39_isInitialised = false;
				this.Changed_ItemCount_NonZeroItemFeatureCounts_numberOfIterationsDecreased_Init_AffinityNoiseVariance_It52_isInitialised = false;
				this.Changed_ItemBiasFeatureWeightPriorVariance_ItemCount_ItemFeatureCount_NonZeroItemFeatureCounts_NonZe55_isInitialised = false;
				this.Changed_ItemBiasInitializer_ItemCount_numberOfIterationsDecreased_Init_AffinityNoiseVariance_ItemBia19_isInitialised = false;
				this.Changed_ItemCount_numberOfIterationsDecreased_Init_AffinityNoiseVariance_ItemBiasFeatureWeightPriorV8_isInitialised = false;
				this.Changed_ItemCount_NonZeroItemFeatureCounts_numberOfIterationsDecreased_TraitCount_Init_AffinityNoise50_isInitialised = false;
				this.Changed_ItemCount_ItemTraitsInitializer_numberOfIterationsDecreased_TraitCount_Init_AffinityNoiseVar14_isInitialised = false;
				this.Changed_ItemCount_numberOfIterationsDecreased_TraitCount_Init_AffinityNoiseVariance_ItemBiasFeatureW6_isInitialised = false;
				this.Changed_NonZeroUserFeatureCounts_numberOfIterationsDecreased_UserCount_Init_AffinityNoiseVariance_It44_isInitialised = false;
				this.Changed_NonZeroUserFeatureCounts_NonZeroUserFeatureIndices_numberOfIterationsDecreased_UserBiasFeatu45_isInitialised = false;
				this.Changed_numberOfIterationsDecreased_UserBiasInitializer_UserCount_Init_AffinityNoiseVariance_ItemBia17_isInitialised = false;
				this.Changed_MiddleUserThresholdIndex_UserCount_UserThresholdCount_UserThresholdPriorMean_UserThresholdPr58_isDone = false;
				this.Changed_numberOfIterationsDecreased_UserCount_UserThresholdCount_UserThresholdsInitializer_Init_Affi23_isInitialised = false;
				this.Changed_numberOfIterationsDecreased_UserCount_UserThresholdCount_Init_AffinityNoiseVariance_ItemBias20_isInitialised = false;
				this.Changed_numberOfIterationsDecreased_UserCount_UserThresholdCount_UseSharedUserThresholds_Init_Affini21_isInitialised = false;
				this.Changed_numberOfIterationsDecreased_UserCount_Init_AffinityNoiseVariance_ItemBiasFeatureWeightPriorV7_isInitialised = false;
				this.Changed_NonZeroUserFeatureCounts_numberOfIterationsDecreased_TraitCount_UserCount_Init_AffinityNoise42_isInitialised = false;
				this.Changed_numberOfIterationsDecreased_TraitCount_UserCount_UserTraitsInitializer_Init_AffinityNoiseVar27_isInitialised = false;
				this.Changed_numberOfIterationsDecreased_TraitCount_UserCount_Init_AffinityNoiseVariance_ItemBiasFeatureW3_isInitialised = false;
				this.Changed_AffinityNoiseVariance_ItemBiasFeatureWeightPriorVariance_ItemBiasInitializer_ItemBiasMessage59_isDone = false;
				this.Changed_AffinityNoiseVariance_ItemBiasFeatureWeightPriorVariance_ItemBiasInitializer_ItemBiasMessage60_isDone = false;
			}
		}

		/// <summary>The externally-specified value of 'UserThresholdPriorVariance'</summary>
		public double UserThresholdPriorVariance
		{
			get {
				return this.userThresholdPriorVariance;
			}
			set {
				if (this.userThresholdPriorVariance!=value) {
					this.userThresholdPriorVariance = value;
					this.numberOfIterationsDone = 0;
					this.Changed_MiddleUserThresholdIndex_UserThresholdCount_UserThresholdPriorVariance_isDone = false;
					this.Changed_numberOfIterationsDecreased_ObservationCount_Ratings_UserThresholdCount_Init_AffinityNoiseVa38_isInitialised = false;
					this.Changed_numberOfIterationsDecreased_ObservationCount_UserThresholdCount_UseSharedUserThresholds_Init33_isInitialised = false;
					this.Changed_numberOfIterationsDecreased_ObservationCount_UserThresholdCount_Init_AffinityNoiseVariance_I35_isInitialised = false;
					this.Changed_numberOfIterationsDecreased_ObservationCount_Init_AffinityNoiseVariance_ItemBiasFeatureWeigh31_isInitialised = false;
					this.Changed_numberOfIterationsDecreased_ObservationCount_TraitCount_Init_AffinityNoiseVariance_ItemBiasF30_isInitialised = false;
					this.Changed_ItemFeatureCount_numberOfIterationsDecreased_TraitCount_Init_AffinityNoiseVariance_ItemBiasF47_isInitialised = false;
					this.Changed_numberOfIterationsDecreased_TraitCount_UserFeatureCount_Init_AffinityNoiseVariance_ItemBiasF39_isInitialised = false;
					this.Changed_ItemCount_NonZeroItemFeatureCounts_numberOfIterationsDecreased_Init_AffinityNoiseVariance_It52_isInitialised = false;
					this.Changed_ItemBiasFeatureWeightPriorVariance_ItemCount_ItemFeatureCount_NonZeroItemFeatureCounts_NonZe55_isInitialised = false;
					this.Changed_ItemBiasInitializer_ItemCount_numberOfIterationsDecreased_Init_AffinityNoiseVariance_ItemBia19_isInitialised = false;
					this.Changed_ItemCount_numberOfIterationsDecreased_Init_AffinityNoiseVariance_ItemBiasFeatureWeightPriorV8_isInitialised = false;
					this.Changed_ItemCount_NonZeroItemFeatureCounts_numberOfIterationsDecreased_TraitCount_Init_AffinityNoise50_isInitialised = false;
					this.Changed_ItemCount_ItemTraitsInitializer_numberOfIterationsDecreased_TraitCount_Init_AffinityNoiseVar14_isInitialised = false;
					this.Changed_ItemCount_numberOfIterationsDecreased_TraitCount_Init_AffinityNoiseVariance_ItemBiasFeatureW6_isInitialised = false;
					this.Changed_NonZeroUserFeatureCounts_numberOfIterationsDecreased_UserCount_Init_AffinityNoiseVariance_It44_isInitialised = false;
					this.Changed_NonZeroUserFeatureCounts_NonZeroUserFeatureIndices_numberOfIterationsDecreased_UserBiasFeatu45_isInitialised = false;
					this.Changed_numberOfIterationsDecreased_UserBiasInitializer_UserCount_Init_AffinityNoiseVariance_ItemBia17_isInitialised = false;
					this.Changed_MiddleUserThresholdIndex_UserCount_UserThresholdCount_UserThresholdPriorMean_UserThresholdPr58_isDone = false;
					this.Changed_numberOfIterationsDecreased_UserCount_UserThresholdCount_UserThresholdsInitializer_Init_Affi23_isInitialised = false;
					this.Changed_numberOfIterationsDecreased_UserCount_UserThresholdCount_Init_AffinityNoiseVariance_ItemBias20_isInitialised = false;
					this.Changed_numberOfIterationsDecreased_UserCount_UserThresholdCount_UseSharedUserThresholds_Init_Affini21_isInitialised = false;
					this.Changed_numberOfIterationsDecreased_UserCount_Init_AffinityNoiseVariance_ItemBiasFeatureWeightPriorV7_isInitialised = false;
					this.Changed_NonZeroUserFeatureCounts_numberOfIterationsDecreased_TraitCount_UserCount_Init_AffinityNoise42_isInitialised = false;
					this.Changed_numberOfIterationsDecreased_TraitCount_UserCount_UserTraitsInitializer_Init_AffinityNoiseVar27_isInitialised = false;
					this.Changed_numberOfIterationsDecreased_TraitCount_UserCount_Init_AffinityNoiseVariance_ItemBiasFeatureW3_isInitialised = false;
					this.Changed_AffinityNoiseVariance_ItemBiasFeatureWeightPriorVariance_ItemBiasInitializer_ItemBiasMessage59_isDone = false;
					this.Changed_AffinityNoiseVariance_ItemBiasFeatureWeightPriorVariance_ItemBiasInitializer_ItemBiasMessage60_isDone = false;
				}
			}
		}

		/// <summary>The externally-specified value of 'UserThresholdsInitializer'</summary>
		public DistributionRefArray<DistributionStructArray<Gaussian,double>,double[]> UserThresholdsInitializer
		{
			get {
				return this.userThresholdsInitializer;
			}
			set {
				this.userThresholdsInitializer = value;
				this.numberOfIterationsDone = 0;
				this.Changed_numberOfIterationsDecreased_ObservationCount_Ratings_UserThresholdCount_Init_AffinityNoiseVa38_isInitialised = false;
				this.Changed_numberOfIterationsDecreased_ObservationCount_UserThresholdCount_UseSharedUserThresholds_Init33_isInitialised = false;
				this.Changed_numberOfIterationsDecreased_ObservationCount_UserThresholdCount_Init_AffinityNoiseVariance_I35_isInitialised = false;
				this.Changed_numberOfIterationsDecreased_ObservationCount_Init_AffinityNoiseVariance_ItemBiasFeatureWeigh31_isInitialised = false;
				this.Changed_numberOfIterationsDecreased_ObservationCount_TraitCount_Init_AffinityNoiseVariance_ItemBiasF30_isInitialised = false;
				this.Changed_ItemFeatureCount_numberOfIterationsDecreased_TraitCount_Init_AffinityNoiseVariance_ItemBiasF47_isInitialised = false;
				this.Changed_numberOfIterationsDecreased_TraitCount_UserFeatureCount_Init_AffinityNoiseVariance_ItemBiasF39_isInitialised = false;
				this.Changed_ItemCount_NonZeroItemFeatureCounts_numberOfIterationsDecreased_Init_AffinityNoiseVariance_It52_isInitialised = false;
				this.Changed_ItemBiasFeatureWeightPriorVariance_ItemCount_ItemFeatureCount_NonZeroItemFeatureCounts_NonZe55_isInitialised = false;
				this.Changed_ItemBiasInitializer_ItemCount_numberOfIterationsDecreased_Init_AffinityNoiseVariance_ItemBia19_isInitialised = false;
				this.Changed_ItemCount_numberOfIterationsDecreased_Init_AffinityNoiseVariance_ItemBiasFeatureWeightPriorV8_isInitialised = false;
				this.Changed_ItemCount_NonZeroItemFeatureCounts_numberOfIterationsDecreased_TraitCount_Init_AffinityNoise50_isInitialised = false;
				this.Changed_ItemCount_ItemTraitsInitializer_numberOfIterationsDecreased_TraitCount_Init_AffinityNoiseVar14_isInitialised = false;
				this.Changed_ItemCount_numberOfIterationsDecreased_TraitCount_Init_AffinityNoiseVariance_ItemBiasFeatureW6_isInitialised = false;
				this.Changed_NonZeroUserFeatureCounts_numberOfIterationsDecreased_UserCount_Init_AffinityNoiseVariance_It44_isInitialised = false;
				this.Changed_NonZeroUserFeatureCounts_NonZeroUserFeatureIndices_numberOfIterationsDecreased_UserBiasFeatu45_isInitialised = false;
				this.Changed_numberOfIterationsDecreased_UserBiasInitializer_UserCount_Init_AffinityNoiseVariance_ItemBia17_isInitialised = false;
				this.Changed_UserCount_UserThresholdCount_UserThresholdsInitializer_isDone = false;
				this.Changed_numberOfIterationsDecreased_UserCount_UserThresholdCount_UserThresholdsInitializer_Init_Affi23_isDone = false;
				this.Changed_numberOfIterationsDecreased_UserCount_UserThresholdCount_Init_AffinityNoiseVariance_ItemBias20_isInitialised = false;
				this.Changed_numberOfIterationsDecreased_UserCount_UserThresholdCount_UseSharedUserThresholds_Init_Affini21_isInitialised = false;
				this.Changed_numberOfIterationsDecreased_UserCount_Init_AffinityNoiseVariance_ItemBiasFeatureWeightPriorV7_isInitialised = false;
				this.Changed_NonZeroUserFeatureCounts_numberOfIterationsDecreased_TraitCount_UserCount_Init_AffinityNoise42_isInitialised = false;
				this.Changed_numberOfIterationsDecreased_TraitCount_UserCount_UserTraitsInitializer_Init_AffinityNoiseVar27_isInitialised = false;
				this.Changed_numberOfIterationsDecreased_TraitCount_UserCount_Init_AffinityNoiseVariance_ItemBiasFeatureW3_isInitialised = false;
				this.Changed_AffinityNoiseVariance_ItemBiasFeatureWeightPriorVariance_ItemBiasInitializer_ItemBiasMessage59_isDone = false;
				this.Changed_AffinityNoiseVariance_ItemBiasFeatureWeightPriorVariance_ItemBiasInitializer_ItemBiasMessage60_isDone = false;
			}
		}

		/// <summary>The externally-specified value of 'UserThresholdsMessage'</summary>
		public DistributionRefArray<DistributionStructArray<Gaussian,double>,double[]> UserThresholdsMessage
		{
			get {
				return this.userThresholdsMessage;
			}
			set {
				this.userThresholdsMessage = value;
				this.numberOfIterationsDone = 0;
				this.Changed_numberOfIterationsDecreased_ObservationCount_Ratings_UserThresholdCount_Init_AffinityNoiseVa38_isInitialised = false;
				this.Changed_numberOfIterationsDecreased_ObservationCount_UserThresholdCount_UseSharedUserThresholds_Init33_isInitialised = false;
				this.Changed_numberOfIterationsDecreased_ObservationCount_UserThresholdCount_Init_AffinityNoiseVariance_I35_isInitialised = false;
				this.Changed_numberOfIterationsDecreased_ObservationCount_Init_AffinityNoiseVariance_ItemBiasFeatureWeigh31_isInitialised = false;
				this.Changed_numberOfIterationsDecreased_ObservationCount_TraitCount_Init_AffinityNoiseVariance_ItemBiasF30_isInitialised = false;
				this.Changed_ItemFeatureCount_numberOfIterationsDecreased_TraitCount_Init_AffinityNoiseVariance_ItemBiasF47_isInitialised = false;
				this.Changed_numberOfIterationsDecreased_TraitCount_UserFeatureCount_Init_AffinityNoiseVariance_ItemBiasF39_isInitialised = false;
				this.Changed_ItemCount_NonZeroItemFeatureCounts_numberOfIterationsDecreased_Init_AffinityNoiseVariance_It52_isInitialised = false;
				this.Changed_ItemBiasFeatureWeightPriorVariance_ItemCount_ItemFeatureCount_NonZeroItemFeatureCounts_NonZe55_isInitialised = false;
				this.Changed_ItemBiasInitializer_ItemCount_numberOfIterationsDecreased_Init_AffinityNoiseVariance_ItemBia19_isInitialised = false;
				this.Changed_ItemCount_numberOfIterationsDecreased_Init_AffinityNoiseVariance_ItemBiasFeatureWeightPriorV8_isInitialised = false;
				this.Changed_ItemCount_NonZeroItemFeatureCounts_numberOfIterationsDecreased_TraitCount_Init_AffinityNoise50_isInitialised = false;
				this.Changed_ItemCount_ItemTraitsInitializer_numberOfIterationsDecreased_TraitCount_Init_AffinityNoiseVar14_isInitialised = false;
				this.Changed_ItemCount_numberOfIterationsDecreased_TraitCount_Init_AffinityNoiseVariance_ItemBiasFeatureW6_isInitialised = false;
				this.Changed_NonZeroUserFeatureCounts_numberOfIterationsDecreased_UserCount_Init_AffinityNoiseVariance_It44_isInitialised = false;
				this.Changed_NonZeroUserFeatureCounts_NonZeroUserFeatureIndices_numberOfIterationsDecreased_UserBiasFeatu45_isInitialised = false;
				this.Changed_numberOfIterationsDecreased_UserBiasInitializer_UserCount_Init_AffinityNoiseVariance_ItemBia17_isInitialised = false;
				this.Changed_numberOfIterationsDecreased_UserCount_UserThresholdCount_UserThresholdsInitializer_Init_Affi23_isInitialised = false;
				this.Changed_UserCount_UserThresholdCount_UserThresholdsMessage_isDone = false;
				this.Changed_numberOfIterationsDecreased_UserCount_UserThresholdCount_Init_AffinityNoiseVariance_ItemBias20_isInitialised = false;
				this.Changed_numberOfIterationsDecreased_UserCount_UserThresholdCount_UseSharedUserThresholds_Init_Affini21_isInitialised = false;
				this.Changed_numberOfIterationsDecreased_UserCount_Init_AffinityNoiseVariance_ItemBiasFeatureWeightPriorV7_isInitialised = false;
				this.Changed_NonZeroUserFeatureCounts_numberOfIterationsDecreased_TraitCount_UserCount_Init_AffinityNoise42_isInitialised = false;
				this.Changed_numberOfIterationsDecreased_TraitCount_UserCount_UserTraitsInitializer_Init_AffinityNoiseVar27_isInitialised = false;
				this.Changed_numberOfIterationsDecreased_TraitCount_UserCount_Init_AffinityNoiseVariance_ItemBiasFeatureW3_isInitialised = false;
				this.Changed_AffinityNoiseVariance_ItemBiasFeatureWeightPriorVariance_ItemBiasInitializer_ItemBiasMessage59_isDone = false;
				this.Changed_AffinityNoiseVariance_ItemBiasFeatureWeightPriorVariance_ItemBiasInitializer_ItemBiasMessage60_isDone = false;
			}
		}

		/// <summary>The externally-specified value of 'UserTraitFeatureWeightPriorVariance'</summary>
		public double UserTraitFeatureWeightPriorVariance
		{
			get {
				return this.userTraitFeatureWeightPriorVariance;
			}
			set {
				if (this.userTraitFeatureWeightPriorVariance!=value) {
					this.userTraitFeatureWeightPriorVariance = value;
					this.numberOfIterationsDone = 0;
					this.Changed_numberOfIterationsDecreased_ObservationCount_Ratings_UserThresholdCount_Init_AffinityNoiseVa38_isInitialised = false;
					this.Changed_numberOfIterationsDecreased_ObservationCount_UserThresholdCount_UseSharedUserThresholds_Init33_isInitialised = false;
					this.Changed_numberOfIterationsDecreased_ObservationCount_UserThresholdCount_Init_AffinityNoiseVariance_I35_isInitialised = false;
					this.Changed_numberOfIterationsDecreased_ObservationCount_Init_AffinityNoiseVariance_ItemBiasFeatureWeigh31_isInitialised = false;
					this.Changed_numberOfIterationsDecreased_ObservationCount_TraitCount_Init_AffinityNoiseVariance_ItemBiasF30_isInitialised = false;
					this.Changed_ItemFeatureCount_numberOfIterationsDecreased_TraitCount_Init_AffinityNoiseVariance_ItemBiasF47_isInitialised = false;
					this.Changed_TraitCount_UserFeatureCount_UserTraitFeatureWeightPriorVariance_isDone = false;
					this.Changed_numberOfIterationsDecreased_TraitCount_UserFeatureCount_Init_AffinityNoiseVariance_ItemBiasF39_isInitialised = false;
					this.Changed_ItemCount_NonZeroItemFeatureCounts_numberOfIterationsDecreased_Init_AffinityNoiseVariance_It52_isInitialised = false;
					this.Changed_ItemBiasFeatureWeightPriorVariance_ItemCount_ItemFeatureCount_NonZeroItemFeatureCounts_NonZe55_isInitialised = false;
					this.Changed_ItemBiasInitializer_ItemCount_numberOfIterationsDecreased_Init_AffinityNoiseVariance_ItemBia19_isInitialised = false;
					this.Changed_ItemCount_numberOfIterationsDecreased_Init_AffinityNoiseVariance_ItemBiasFeatureWeightPriorV8_isInitialised = false;
					this.Changed_ItemCount_NonZeroItemFeatureCounts_numberOfIterationsDecreased_TraitCount_Init_AffinityNoise50_isInitialised = false;
					this.Changed_ItemCount_ItemTraitsInitializer_numberOfIterationsDecreased_TraitCount_Init_AffinityNoiseVar14_isInitialised = false;
					this.Changed_ItemCount_numberOfIterationsDecreased_TraitCount_Init_AffinityNoiseVariance_ItemBiasFeatureW6_isInitialised = false;
					this.Changed_NonZeroUserFeatureCounts_numberOfIterationsDecreased_UserCount_Init_AffinityNoiseVariance_It44_isInitialised = false;
					this.Changed_NonZeroUserFeatureCounts_NonZeroUserFeatureIndices_numberOfIterationsDecreased_UserBiasFeatu45_isInitialised = false;
					this.Changed_numberOfIterationsDecreased_UserBiasInitializer_UserCount_Init_AffinityNoiseVariance_ItemBia17_isInitialised = false;
					this.Changed_numberOfIterationsDecreased_UserCount_UserThresholdCount_UserThresholdsInitializer_Init_Affi23_isInitialised = false;
					this.Changed_numberOfIterationsDecreased_UserCount_UserThresholdCount_Init_AffinityNoiseVariance_ItemBias20_isInitialised = false;
					this.Changed_numberOfIterationsDecreased_UserCount_UserThresholdCount_UseSharedUserThresholds_Init_Affini21_isInitialised = false;
					this.Changed_numberOfIterationsDecreased_UserCount_Init_AffinityNoiseVariance_ItemBiasFeatureWeightPriorV7_isInitialised = false;
					this.Changed_NonZeroUserFeatureCounts_numberOfIterationsDecreased_TraitCount_UserCount_Init_AffinityNoise42_isInitialised = false;
					this.Changed_numberOfIterationsDecreased_TraitCount_UserCount_UserTraitsInitializer_Init_AffinityNoiseVar27_isInitialised = false;
					this.Changed_numberOfIterationsDecreased_TraitCount_UserCount_Init_AffinityNoiseVariance_ItemBiasFeatureW3_isInitialised = false;
					this.Changed_AffinityNoiseVariance_ItemBiasFeatureWeightPriorVariance_ItemBiasInitializer_ItemBiasMessage59_isDone = false;
					this.Changed_AffinityNoiseVariance_ItemBiasFeatureWeightPriorVariance_ItemBiasInitializer_ItemBiasMessage60_isDone = false;
				}
			}
		}

		/// <summary>The externally-specified value of 'UserTraitsInitializer'</summary>
		public DistributionRefArray<DistributionStructArray<Gaussian,double>,double[]> UserTraitsInitializer
		{
			get {
				return this.userTraitsInitializer;
			}
			set {
				this.userTraitsInitializer = value;
				this.numberOfIterationsDone = 0;
				this.Changed_numberOfIterationsDecreased_ObservationCount_Ratings_UserThresholdCount_Init_AffinityNoiseVa38_isInitialised = false;
				this.Changed_numberOfIterationsDecreased_ObservationCount_UserThresholdCount_UseSharedUserThresholds_Init33_isInitialised = false;
				this.Changed_numberOfIterationsDecreased_ObservationCount_UserThresholdCount_Init_AffinityNoiseVariance_I35_isInitialised = false;
				this.Changed_numberOfIterationsDecreased_ObservationCount_Init_AffinityNoiseVariance_ItemBiasFeatureWeigh31_isInitialised = false;
				this.Changed_numberOfIterationsDecreased_ObservationCount_TraitCount_Init_AffinityNoiseVariance_ItemBiasF30_isInitialised = false;
				this.Changed_ItemFeatureCount_numberOfIterationsDecreased_TraitCount_Init_AffinityNoiseVariance_ItemBiasF47_isInitialised = false;
				this.Changed_numberOfIterationsDecreased_TraitCount_UserFeatureCount_Init_AffinityNoiseVariance_ItemBiasF39_isInitialised = false;
				this.Changed_ItemCount_NonZeroItemFeatureCounts_numberOfIterationsDecreased_Init_AffinityNoiseVariance_It52_isInitialised = false;
				this.Changed_ItemBiasFeatureWeightPriorVariance_ItemCount_ItemFeatureCount_NonZeroItemFeatureCounts_NonZe55_isInitialised = false;
				this.Changed_ItemBiasInitializer_ItemCount_numberOfIterationsDecreased_Init_AffinityNoiseVariance_ItemBia19_isInitialised = false;
				this.Changed_ItemCount_numberOfIterationsDecreased_Init_AffinityNoiseVariance_ItemBiasFeatureWeightPriorV8_isInitialised = false;
				this.Changed_ItemCount_NonZeroItemFeatureCounts_numberOfIterationsDecreased_TraitCount_Init_AffinityNoise50_isInitialised = false;
				this.Changed_ItemCount_ItemTraitsInitializer_numberOfIterationsDecreased_TraitCount_Init_AffinityNoiseVar14_isInitialised = false;
				this.Changed_ItemCount_numberOfIterationsDecreased_TraitCount_Init_AffinityNoiseVariance_ItemBiasFeatureW6_isInitialised = false;
				this.Changed_NonZeroUserFeatureCounts_numberOfIterationsDecreased_UserCount_Init_AffinityNoiseVariance_It44_isInitialised = false;
				this.Changed_NonZeroUserFeatureCounts_NonZeroUserFeatureIndices_numberOfIterationsDecreased_UserBiasFeatu45_isInitialised = false;
				this.Changed_numberOfIterationsDecreased_UserBiasInitializer_UserCount_Init_AffinityNoiseVariance_ItemBia17_isInitialised = false;
				this.Changed_numberOfIterationsDecreased_UserCount_UserThresholdCount_UserThresholdsInitializer_Init_Affi23_isInitialised = false;
				this.Changed_numberOfIterationsDecreased_UserCount_UserThresholdCount_Init_AffinityNoiseVariance_ItemBias20_isInitialised = false;
				this.Changed_numberOfIterationsDecreased_UserCount_UserThresholdCount_UseSharedUserThresholds_Init_Affini21_isInitialised = false;
				this.Changed_numberOfIterationsDecreased_UserCount_Init_AffinityNoiseVariance_ItemBiasFeatureWeightPriorV7_isInitialised = false;
				this.Changed_TraitCount_UserCount_UserTraitsInitializer_isDone = false;
				this.Changed_NonZeroUserFeatureCounts_numberOfIterationsDecreased_TraitCount_UserCount_Init_AffinityNoise42_isInitialised = false;
				this.Changed_numberOfIterationsDecreased_TraitCount_UserCount_UserTraitsInitializer_Init_AffinityNoiseVar27_isDone = false;
				this.Changed_numberOfIterationsDecreased_TraitCount_UserCount_Init_AffinityNoiseVariance_ItemBiasFeatureW3_isInitialised = false;
				this.Changed_AffinityNoiseVariance_ItemBiasFeatureWeightPriorVariance_ItemBiasInitializer_ItemBiasMessage59_isDone = false;
				this.Changed_AffinityNoiseVariance_ItemBiasFeatureWeightPriorVariance_ItemBiasInitializer_ItemBiasMessage60_isDone = false;
			}
		}

		/// <summary>The externally-specified value of 'UserTraitsMessage'</summary>
		public DistributionRefArray<DistributionStructArray<Gaussian,double>,double[]> UserTraitsMessage
		{
			get {
				return this.userTraitsMessage;
			}
			set {
				this.userTraitsMessage = value;
				this.numberOfIterationsDone = 0;
				this.Changed_numberOfIterationsDecreased_ObservationCount_Ratings_UserThresholdCount_Init_AffinityNoiseVa38_isInitialised = false;
				this.Changed_numberOfIterationsDecreased_ObservationCount_UserThresholdCount_UseSharedUserThresholds_Init33_isInitialised = false;
				this.Changed_numberOfIterationsDecreased_ObservationCount_UserThresholdCount_Init_AffinityNoiseVariance_I35_isInitialised = false;
				this.Changed_numberOfIterationsDecreased_ObservationCount_Init_AffinityNoiseVariance_ItemBiasFeatureWeigh31_isInitialised = false;
				this.Changed_numberOfIterationsDecreased_ObservationCount_TraitCount_Init_AffinityNoiseVariance_ItemBiasF30_isInitialised = false;
				this.Changed_ItemFeatureCount_numberOfIterationsDecreased_TraitCount_Init_AffinityNoiseVariance_ItemBiasF47_isInitialised = false;
				this.Changed_numberOfIterationsDecreased_TraitCount_UserFeatureCount_Init_AffinityNoiseVariance_ItemBiasF39_isInitialised = false;
				this.Changed_ItemCount_NonZeroItemFeatureCounts_numberOfIterationsDecreased_Init_AffinityNoiseVariance_It52_isInitialised = false;
				this.Changed_ItemBiasFeatureWeightPriorVariance_ItemCount_ItemFeatureCount_NonZeroItemFeatureCounts_NonZe55_isInitialised = false;
				this.Changed_ItemBiasInitializer_ItemCount_numberOfIterationsDecreased_Init_AffinityNoiseVariance_ItemBia19_isInitialised = false;
				this.Changed_ItemCount_numberOfIterationsDecreased_Init_AffinityNoiseVariance_ItemBiasFeatureWeightPriorV8_isInitialised = false;
				this.Changed_ItemCount_NonZeroItemFeatureCounts_numberOfIterationsDecreased_TraitCount_Init_AffinityNoise50_isInitialised = false;
				this.Changed_ItemCount_ItemTraitsInitializer_numberOfIterationsDecreased_TraitCount_Init_AffinityNoiseVar14_isInitialised = false;
				this.Changed_ItemCount_numberOfIterationsDecreased_TraitCount_Init_AffinityNoiseVariance_ItemBiasFeatureW6_isInitialised = false;
				this.Changed_NonZeroUserFeatureCounts_numberOfIterationsDecreased_UserCount_Init_AffinityNoiseVariance_It44_isInitialised = false;
				this.Changed_NonZeroUserFeatureCounts_NonZeroUserFeatureIndices_numberOfIterationsDecreased_UserBiasFeatu45_isInitialised = false;
				this.Changed_numberOfIterationsDecreased_UserBiasInitializer_UserCount_Init_AffinityNoiseVariance_ItemBia17_isInitialised = false;
				this.Changed_numberOfIterationsDecreased_UserCount_UserThresholdCount_UserThresholdsInitializer_Init_Affi23_isInitialised = false;
				this.Changed_numberOfIterationsDecreased_UserCount_UserThresholdCount_Init_AffinityNoiseVariance_ItemBias20_isInitialised = false;
				this.Changed_numberOfIterationsDecreased_UserCount_UserThresholdCount_UseSharedUserThresholds_Init_Affini21_isInitialised = false;
				this.Changed_numberOfIterationsDecreased_UserCount_Init_AffinityNoiseVariance_ItemBiasFeatureWeightPriorV7_isInitialised = false;
				this.Changed_NonZeroUserFeatureCounts_numberOfIterationsDecreased_TraitCount_UserCount_Init_AffinityNoise42_isInitialised = false;
				this.Changed_numberOfIterationsDecreased_TraitCount_UserCount_UserTraitsInitializer_Init_AffinityNoiseVar27_isInitialised = false;
				this.Changed_TraitCount_UserCount_UserTraitsMessage_isDone = false;
				this.Changed_numberOfIterationsDecreased_TraitCount_UserCount_Init_AffinityNoiseVariance_ItemBiasFeatureW3_isInitialised = false;
				this.Changed_AffinityNoiseVariance_ItemBiasFeatureWeightPriorVariance_ItemBiasInitializer_ItemBiasMessage59_isDone = false;
				this.Changed_AffinityNoiseVariance_ItemBiasFeatureWeightPriorVariance_ItemBiasInitializer_ItemBiasMessage60_isDone = false;
			}
		}

		/// <summary>The externally-specified value of 'UserTraitVariance'</summary>
		public double UserTraitVariance
		{
			get {
				return this.userTraitVariance;
			}
			set {
				if (this.userTraitVariance!=value) {
					this.userTraitVariance = value;
					this.numberOfIterationsDone = 0;
					this.Changed_numberOfIterationsDecreased_ObservationCount_Ratings_UserThresholdCount_Init_AffinityNoiseVa38_isInitialised = false;
					this.Changed_numberOfIterationsDecreased_ObservationCount_UserThresholdCount_UseSharedUserThresholds_Init33_isInitialised = false;
					this.Changed_numberOfIterationsDecreased_ObservationCount_UserThresholdCount_Init_AffinityNoiseVariance_I35_isInitialised = false;
					this.Changed_numberOfIterationsDecreased_ObservationCount_Init_AffinityNoiseVariance_ItemBiasFeatureWeigh31_isInitialised = false;
					this.Changed_numberOfIterationsDecreased_ObservationCount_TraitCount_Init_AffinityNoiseVariance_ItemBiasF30_isInitialised = false;
					this.Changed_ItemFeatureCount_numberOfIterationsDecreased_TraitCount_Init_AffinityNoiseVariance_ItemBiasF47_isInitialised = false;
					this.Changed_numberOfIterationsDecreased_TraitCount_UserFeatureCount_Init_AffinityNoiseVariance_ItemBiasF39_isInitialised = false;
					this.Changed_ItemCount_NonZeroItemFeatureCounts_numberOfIterationsDecreased_Init_AffinityNoiseVariance_It52_isInitialised = false;
					this.Changed_ItemBiasFeatureWeightPriorVariance_ItemCount_ItemFeatureCount_NonZeroItemFeatureCounts_NonZe55_isInitialised = false;
					this.Changed_ItemBiasInitializer_ItemCount_numberOfIterationsDecreased_Init_AffinityNoiseVariance_ItemBia19_isInitialised = false;
					this.Changed_ItemCount_numberOfIterationsDecreased_Init_AffinityNoiseVariance_ItemBiasFeatureWeightPriorV8_isInitialised = false;
					this.Changed_ItemCount_NonZeroItemFeatureCounts_numberOfIterationsDecreased_TraitCount_Init_AffinityNoise50_isInitialised = false;
					this.Changed_ItemCount_ItemTraitsInitializer_numberOfIterationsDecreased_TraitCount_Init_AffinityNoiseVar14_isInitialised = false;
					this.Changed_ItemCount_numberOfIterationsDecreased_TraitCount_Init_AffinityNoiseVariance_ItemBiasFeatureW6_isInitialised = false;
					this.Changed_NonZeroUserFeatureCounts_numberOfIterationsDecreased_UserCount_Init_AffinityNoiseVariance_It44_isInitialised = false;
					this.Changed_NonZeroUserFeatureCounts_NonZeroUserFeatureIndices_numberOfIterationsDecreased_UserBiasFeatu45_isInitialised = false;
					this.Changed_numberOfIterationsDecreased_UserBiasInitializer_UserCount_Init_AffinityNoiseVariance_ItemBia17_isInitialised = false;
					this.Changed_numberOfIterationsDecreased_UserCount_UserThresholdCount_UserThresholdsInitializer_Init_Affi23_isInitialised = false;
					this.Changed_numberOfIterationsDecreased_UserCount_UserThresholdCount_Init_AffinityNoiseVariance_ItemBias20_isInitialised = false;
					this.Changed_numberOfIterationsDecreased_UserCount_UserThresholdCount_UseSharedUserThresholds_Init_Affini21_isInitialised = false;
					this.Changed_numberOfIterationsDecreased_UserCount_Init_AffinityNoiseVariance_ItemBiasFeatureWeightPriorV7_isInitialised = false;
					this.Changed_NonZeroUserFeatureCounts_numberOfIterationsDecreased_TraitCount_UserCount_Init_AffinityNoise42_isInitialised = false;
					this.Changed_numberOfIterationsDecreased_TraitCount_UserCount_UserTraitsInitializer_Init_AffinityNoiseVar27_isInitialised = false;
					this.Changed_numberOfIterationsDecreased_TraitCount_UserCount_Init_AffinityNoiseVariance_ItemBiasFeatureW3_isInitialised = false;
					this.Changed_AffinityNoiseVariance_ItemBiasFeatureWeightPriorVariance_ItemBiasInitializer_ItemBiasMessage59_isDone = false;
					this.Changed_AffinityNoiseVariance_ItemBiasFeatureWeightPriorVariance_ItemBiasInitializer_ItemBiasMessage60_isDone = false;
				}
			}
		}

		/// <summary>The externally-specified value of 'UseSharedUserThresholds'</summary>
		public bool UseSharedUserThresholds
		{
			get {
				return this.useSharedUserThresholds;
			}
			set {
				if (this.useSharedUserThresholds!=value) {
					this.useSharedUserThresholds = value;
					this.numberOfIterationsDone = 0;
					this.Changed_UseSharedUserThresholds_isDone = false;
					this.Changed_ObservationCount_UseSharedUserThresholds_isDone = false;
					this.Changed_UserThresholdCount_UseSharedUserThresholds_isDone = false;
					this.Changed_ObservationCount_UserThresholdCount_UseSharedUserThresholds_isDone = false;
					this.Changed_numberOfIterationsDecreased_ObservationCount_Ratings_UserThresholdCount_Init_AffinityNoiseVa38_isInitialised = false;
					this.Changed_numberOfIterationsDecreased_ObservationCount_UserThresholdCount_UseSharedUserThresholds_Init33_isDone = false;
					this.Changed_numberOfIterationsDecreased_ObservationCount_UserThresholdCount_Init_AffinityNoiseVariance_I35_isInitialised = false;
					this.Changed_numberOfIterationsDecreased_ObservationCount_Init_AffinityNoiseVariance_ItemBiasFeatureWeigh31_isInitialised = false;
					this.Changed_numberOfIterationsDecreased_ObservationCount_TraitCount_Init_AffinityNoiseVariance_ItemBiasF30_isInitialised = false;
					this.Changed_ItemFeatureCount_numberOfIterationsDecreased_TraitCount_Init_AffinityNoiseVariance_ItemBiasF47_isInitialised = false;
					this.Changed_numberOfIterationsDecreased_TraitCount_UserFeatureCount_Init_AffinityNoiseVariance_ItemBiasF39_isInitialised = false;
					this.Changed_ItemCount_NonZeroItemFeatureCounts_numberOfIterationsDecreased_Init_AffinityNoiseVariance_It52_isInitialised = false;
					this.Changed_ItemBiasFeatureWeightPriorVariance_ItemCount_ItemFeatureCount_NonZeroItemFeatureCounts_NonZe55_isInitialised = false;
					this.Changed_ItemBiasInitializer_ItemCount_numberOfIterationsDecreased_Init_AffinityNoiseVariance_ItemBia19_isInitialised = false;
					this.Changed_ItemCount_numberOfIterationsDecreased_Init_AffinityNoiseVariance_ItemBiasFeatureWeightPriorV8_isInitialised = false;
					this.Changed_ItemCount_NonZeroItemFeatureCounts_numberOfIterationsDecreased_TraitCount_Init_AffinityNoise50_isInitialised = false;
					this.Changed_ItemCount_ItemTraitsInitializer_numberOfIterationsDecreased_TraitCount_Init_AffinityNoiseVar14_isInitialised = false;
					this.Changed_ItemCount_numberOfIterationsDecreased_TraitCount_Init_AffinityNoiseVariance_ItemBiasFeatureW6_isInitialised = false;
					this.Changed_NonZeroUserFeatureCounts_numberOfIterationsDecreased_UserCount_Init_AffinityNoiseVariance_It44_isInitialised = false;
					this.Changed_NonZeroUserFeatureCounts_NonZeroUserFeatureIndices_numberOfIterationsDecreased_UserBiasFeatu45_isInitialised = false;
					this.Changed_numberOfIterationsDecreased_UserBiasInitializer_UserCount_Init_AffinityNoiseVariance_ItemBia17_isInitialised = false;
					this.Changed_numberOfIterationsDecreased_UserCount_UserThresholdCount_UserThresholdsInitializer_Init_Affi23_isInitialised = false;
					this.Changed_numberOfIterationsDecreased_UserCount_UserThresholdCount_Init_AffinityNoiseVariance_ItemBias20_isInitialised = false;
					this.Changed_numberOfIterationsDecreased_UserCount_UserThresholdCount_UseSharedUserThresholds_Init_Affini21_isDone = false;
					this.Changed_numberOfIterationsDecreased_UserCount_Init_AffinityNoiseVariance_ItemBiasFeatureWeightPriorV7_isInitialised = false;
					this.Changed_NonZeroUserFeatureCounts_numberOfIterationsDecreased_TraitCount_UserCount_Init_AffinityNoise42_isInitialised = false;
					this.Changed_numberOfIterationsDecreased_TraitCount_UserCount_UserTraitsInitializer_Init_AffinityNoiseVar27_isInitialised = false;
					this.Changed_numberOfIterationsDecreased_TraitCount_UserCount_Init_AffinityNoiseVariance_ItemBiasFeatureW3_isInitialised = false;
					this.Changed_AffinityNoiseVariance_ItemBiasFeatureWeightPriorVariance_ItemBiasInitializer_ItemBiasMessage59_isDone = false;
					this.Changed_AffinityNoiseVariance_ItemBiasFeatureWeightPriorVariance_ItemBiasInitializer_ItemBiasMessage60_isDone = false;
				}
			}
		}

		#endregion

		#region Methods
		/// <summary>Computations that depend on the observed value of AffinityNoiseVariance and ItemBiasFeatureWeightPriorVariance and ItemBiasInitializer and ItemBiasMessage and ItemBiasVariance and ItemCount and ItemFeatureCount and ItemIds and ItemTraitFeatureWeightPriorVariance and ItemTraitsInitializer and ItemTraitsMessage and ItemTraitVariance and MiddleUserThresholdIndex and NonZeroItemFeatureCounts and NonZeroItemFeatureIndices and NonZeroItemFeatureValues and NonZeroUserFeatureCounts and NonZeroUserFeatureIndices and NonZeroUserFeatureValues and numberOfIterationsDecreased and ObservationCount and Ratings and TraitCount and UserBiasFeatureWeightPriorVariance and UserBiasInitializer and UserBiasMessage and UserBiasVariance and UserCount and UserFeatureCount and UserIds and UserThresholdCount and UserThresholdNoiseVariance and UserThresholdPriorMean and UserThresholdPriorVariance and UserThresholdsInitializer and UserThresholdsMessage and UserTraitFeatureWeightPriorVariance and UserTraitsInitializer and UserTraitsMessage and UserTraitVariance and UseSharedUserThresholds</summary>
		private void Changed_AffinityNoiseVariance_ItemBiasFeatureWeightPriorVariance_ItemBiasInitializer_ItemBiasMessage59()
		{
			if (this.Changed_AffinityNoiseVariance_ItemBiasFeatureWeightPriorVariance_ItemBiasInitializer_ItemBiasMessage59_isDone) {
				return ;
			}
			for(int item = 0; item<this.itemCount; item++) {
				for(int trait = 0; trait<this.traitCount; trait++) {
					this.ItemTraits_uses_F[item][trait][0] = ReplicateOp_NoDivide.UsesAverageConditional<Gaussian>(this.ItemTraits_uses_B[item][trait], this.ItemTraits_use_F[item][trait], 0, this.ItemTraits_uses_F[item][trait][0]);
					this.ItemTraits_depth0_F[item][trait] = ArrayHelper.SetTo<Gaussian>(this.ItemTraits_depth0_F[item][trait], this.ItemTraits_uses_F[item][trait][0]);
				}
			}
			this.ItemTraits_depth0_uses_F[1] = ReplicateOp_NoDivide.UsesAverageConditional<DistributionRefArray<DistributionStructArray<Gaussian,double>,double[]>>(this.ItemTraits_depth0_uses_B, this.ItemTraits_depth0_F, 1, this.ItemTraits_depth0_uses_F[1]);
			this.ItemTraits_depth0_uses_F_1__marginal = GetItemsOp<double[]>.Marginal<DistributionRefArray<DistributionStructArray<Gaussian,double>,double[]>,DistributionStructArray<Gaussian,double>>(this.ItemTraits_depth0_uses_F[1], this.ItemTraits_depth0_uses_B[1], this.ItemTraits_depth0_uses_F_1__marginal);
			this.UserBias_uses_F[1] = ReplicateOp_NoDivide.UsesAverageConditional<DistributionStructArray<Gaussian,double>>(this.UserBias_uses_B, this.UserBias_use_F, 1, this.UserBias_uses_F[1]);
			this.UserBias_uses_F_1__marginal = GetItemsOp<double>.Marginal<DistributionStructArray<Gaussian,double>,Gaussian>(this.UserBias_uses_F[1], this.UserBias_uses_B[1], this.UserBias_uses_F_1__marginal);
			this.ItemBias_uses_F[1] = ReplicateOp_NoDivide.UsesAverageConditional<DistributionStructArray<Gaussian,double>>(this.ItemBias_uses_B, this.ItemBias_use_F, 1, this.ItemBias_uses_F[1]);
			this.ItemBias_uses_F_1__marginal = GetItemsOp<double>.Marginal<DistributionStructArray<Gaussian,double>,Gaussian>(this.ItemBias_uses_F[1], this.ItemBias_uses_B[1], this.ItemBias_uses_F_1__marginal);
			this.UserThresholds_depth0_B = ReplicateOp_NoDivide.DefAverageConditional<DistributionRefArray<DistributionStructArray<Gaussian,double>,double[]>>(this.UserThresholds_depth0_uses_B, this.UserThresholds_depth0_B);
			for(int user = 0; user<this.userCount; user++) {
				for(int userThreshold = 0; userThreshold<this.userThresholdCount; userThreshold++) {
					this.UserThresholds_uses_B[user][userThreshold][0] = ArrayHelper.SetTo<Gaussian>(this.UserThresholds_uses_B[user][userThreshold][0], this.UserThresholds_depth0_B[user][userThreshold]);
					this.UserThresholds_uses_F[user][userThreshold][1] = ReplicateOp_NoDivide.UsesAverageConditional<Gaussian>(this.UserThresholds_uses_B[user][userThreshold], this.UserThresholds_use_F[user][userThreshold], 1, this.UserThresholds_uses_F[user][userThreshold][1]);
				}
			}
			for(int userThreshold = 0; userThreshold<this.userThresholdCount; userThreshold++) {
				if (this.useSharedUserThresholds) {
					this.UserThresholds_rep_F_marginal[userThreshold] = ReplicateOp_Divide.Marginal<Gaussian>(this.UserThresholds_rep_B_toDef[userThreshold], this.UserThresholds_uses_F[0][userThreshold][1], this.UserThresholds_rep_F_marginal[userThreshold]);
				}
			}
			for(int user = 0; user<this.userCount; user++) {
				for(int userThreshold = 0; userThreshold<this.userThresholdCount; userThreshold++) {
					this.UserThresholds_uses_F[user][userThreshold][0] = ReplicateOp_NoDivide.UsesAverageConditional<Gaussian>(this.UserThresholds_uses_B[user][userThreshold], this.UserThresholds_use_F[user][userThreshold], 0, this.UserThresholds_uses_F[user][userThreshold][0]);
					this.UserThresholds_depth0_F[user][userThreshold] = ArrayHelper.SetTo<Gaussian>(this.UserThresholds_depth0_F[user][userThreshold], this.UserThresholds_uses_F[user][userThreshold][0]);
				}
			}
			this.UserThresholds_depth0_uses_F[1] = ReplicateOp_NoDivide.UsesAverageConditional<DistributionRefArray<DistributionStructArray<Gaussian,double>,double[]>>(this.UserThresholds_depth0_uses_B, this.UserThresholds_depth0_F, 1, this.UserThresholds_depth0_uses_F[1]);
			if (!this.useSharedUserThresholds) {
				if (!this.useSharedUserThresholds) {
					this.UserThresholds_depth0_uses_F_1__marginal = GetItemsOp<double[]>.Marginal<DistributionRefArray<DistributionStructArray<Gaussian,double>,double[]>,DistributionStructArray<Gaussian,double>>(this.UserThresholds_depth0_uses_F[1], this.UserThresholds_depth0_uses_B[1], this.UserThresholds_depth0_uses_F_1__marginal);
				}
			}
			this.UserTraits_uses_F[1] = ReplicateOp_NoDivide.UsesAverageConditional<DistributionRefArray<DistributionStructArray<Gaussian,double>,double[]>>(this.UserTraits_uses_B, this.UserTraits_use_F, 1, this.UserTraits_uses_F[1]);
			this.UserTraits_uses_F_1__marginal = GetItemsOp<double[]>.Marginal<DistributionRefArray<DistributionStructArray<Gaussian,double>,double[]>,DistributionStructArray<Gaussian,double>>(this.UserTraits_uses_F[1], this.UserTraits_uses_B[1], this.UserTraits_uses_F_1__marginal);
			for(int observation = 0; observation<this.observationCount; observation++) {
				this.ItemTraits_itemItemIds_observation__F[observation] = GetItemsOp<double[]>.ItemsAverageConditional<DistributionRefArray<DistributionStructArray<Gaussian,double>,double[]>,DistributionStructArray<Gaussian,double>>(this.itemTrait_B[observation], this.ItemTraits_depth0_uses_F[1], this.ItemTraits_depth0_uses_F_1__marginal, this.itemIds, observation, this.ItemTraits_itemItemIds_observation__F[observation]);
				this.UserBias_itemUserIds_observation__F[observation] = GetItemsOp<double>.ItemsAverageConditional<DistributionStructArray<Gaussian,double>,Gaussian>(this.userBiasObs_B[observation], this.UserBias_uses_F[1], this.UserBias_uses_F_1__marginal, this.userIds, observation, this.UserBias_itemUserIds_observation__F[observation]);
				this.vdouble109_F[observation] = GaussianProductOp_SHG09.ProductAverageConditional(this.UserBias_itemUserIds_observation__F[observation], 1.0, this.userBiasObs_B[observation]);
				this.ItemBias_itemItemIds_observation__F[observation] = GetItemsOp<double>.ItemsAverageConditional<DistributionStructArray<Gaussian,double>,Gaussian>(this.itemBiasObs_B[observation], this.ItemBias_uses_F[1], this.ItemBias_uses_F_1__marginal, this.itemIds, observation, this.ItemBias_itemItemIds_observation__F[observation]);
				this.vdouble111_F[observation] = GaussianProductOp_SHG09.ProductAverageConditional(this.ItemBias_itemItemIds_observation__F[observation], 1.0, this.itemBiasObs_B[observation]);
				this.vdouble112_F[observation] = DoublePlusOp.SumAverageConditional(this.vdouble109_F[observation], this.vdouble111_F[observation]);
				for(int userThreshold = 0; userThreshold<this.userThresholdCount; userThreshold++) {
					if (this.useSharedUserThresholds) {
						this.UserThresholds_rep_F[userThreshold][observation] = ReplicateOp_Divide.UsesAverageConditional<Gaussian>(this.UserThresholdsObs_B[observation][userThreshold], this.UserThresholds_rep_F_marginal[userThreshold], observation, this.UserThresholds_rep_F[userThreshold][observation]);
						this.UserThresholdsObs_F[observation][userThreshold] = ArrayHelper.SetTo<Gaussian>(this.UserThresholdsObs_F[observation][userThreshold], this.UserThresholds_rep_F[userThreshold][observation]);
					}
				}
				if (!this.useSharedUserThresholds) {
					if (!this.useSharedUserThresholds) {
						this.UserThresholds_itemUserIds_observation__F[observation] = GetItemsOp<double[]>.ItemsAverageConditional<DistributionRefArray<DistributionStructArray<Gaussian,double>,double[]>,DistributionStructArray<Gaussian,double>>(this.UserThresholdsObs_B[observation], this.UserThresholds_depth0_uses_F[1], this.UserThresholds_depth0_uses_F_1__marginal, this.userIds, observation, this.UserThresholds_itemUserIds_observation__F[observation]);
					}
				}
				for(int userThreshold = 0; userThreshold<this.userThresholdCount; userThreshold++) {
					if (!this.useSharedUserThresholds) {
						this.UserThresholdsObs_F[observation][userThreshold] = ArrayHelper.SetTo<Gaussian>(this.UserThresholdsObs_F[observation][userThreshold], this.UserThresholds_itemUserIds_observation__F[observation][userThreshold]);
					}
					this.vdouble__61_F[observation][userThreshold] = GaussianProductOp_SHG09.ProductAverageConditional(this.UserThresholdsObs_F[observation][userThreshold], 1.0, this.UserThresholdsObs_B[observation][userThreshold]);
					this.NoisyUserThresholds_F[observation][userThreshold] = GaussianFromMeanAndVarianceOp.SampleAverageConditional(this.vdouble__61_F[observation][userThreshold], this.userThresholdNoiseVariance);
				}
				this.UserTraits_itemUserIds_observation__F[observation] = GetItemsOp<double[]>.ItemsAverageConditional<DistributionRefArray<DistributionStructArray<Gaussian,double>,double[]>,DistributionStructArray<Gaussian,double>>(this.userTrait_B[observation], this.UserTraits_uses_F[1], this.UserTraits_uses_F_1__marginal, this.userIds, observation, this.UserTraits_itemUserIds_observation__F[observation]);
				for(int trait = 0; trait<this.traitCount; trait++) {
					this.vdouble__51_F[observation][trait] = GaussianProductOp_SHG09.ProductAverageConditional(this.UserTraits_itemUserIds_observation__F[observation][trait], this.ItemTraits_itemItemIds_observation__F[observation][trait], this.userTrait_B[observation][trait], this.itemTrait_B[observation][trait]);
				}
				this.vdouble113_F[observation] = FastSumOp.SumAverageConditional(this.vdouble__51_F[observation]);
				this.vdouble114_F[observation] = DoublePlusOp.SumAverageConditional(this.vdouble112_F[observation], this.vdouble113_F[observation]);
				this.vdouble115_F[observation] = GaussianFromMeanAndVarianceOp.SampleAverageConditional(this.vdouble114_F[observation], this.affinityNoiseVariance);
				this.true_logZ[observation] = IsBetweenGaussianOp.LogZ(Bernoulli.PointMass(true), this.vdouble115_F[observation], this.NoisyUserThresholds_F[observation][this.CurrentRating[observation]], this.NoisyUserThresholds_F[observation][this.NextRating[observation]]);
				this.vdouble115_use_B[observation] = IsBetweenGaussianOp.XAverageConditional(Bernoulli.PointMass(true), this.vdouble115_F[observation], this.NoisyUserThresholds_F[observation][this.CurrentRating[observation]], this.NoisyUserThresholds_F[observation][this.NextRating[observation]], this.true_logZ[observation]);
				this.vdouble114_B[observation] = GaussianFromMeanAndVarianceOp.MeanAverageConditional(this.vdouble115_use_B[observation], this.affinityNoiseVariance);
				this.vdouble113_B[observation] = DoublePlusOp.BAverageConditional(this.vdouble114_B[observation], this.vdouble112_F[observation]);
				this.vdouble__51_B[observation] = FastSumOp.ArrayAverageConditional<DistributionStructArray<Gaussian,double>>(this.vdouble113_B[observation], this.vdouble113_F[observation], this.vdouble__51_F[observation], this.vdouble__51_B[observation]);
				for(int trait = 0; trait<this.traitCount; trait++) {
					this.userTrait_B_new[observation][trait] = GaussianProductOp_SHG09.AAverageConditional(this.vdouble__51_B[observation][trait], this.ItemTraits_itemItemIds_observation__F[observation][trait], this.itemTrait_B[observation][trait]);
				}
				this.ItemTraits_depth0_uses_F_1__marginal = GetItemsOp<double[]>.MarginalIncrement<DistributionRefArray<DistributionStructArray<Gaussian,double>,double[]>,DistributionStructArray<Gaussian,double>>(this.ItemTraits_depth0_uses_F_1__marginal, this.ItemTraits_itemItemIds_observation__F[observation], this.itemTrait_B[observation], this.itemIds, observation);
				for(int trait = 0; trait<this.traitCount; trait++) {
					this.itemTrait_B[observation][trait] = GaussianProductOp_SHG09.BAverageConditional(this.vdouble__51_B[observation][trait], this.UserTraits_itemUserIds_observation__F[observation][trait], this.userTrait_B[observation][trait]);
				}
				this.UserTraits_uses_F_1__marginal = GetItemsOp<double[]>.MarginalIncrement<DistributionRefArray<DistributionStructArray<Gaussian,double>,double[]>,DistributionStructArray<Gaussian,double>>(this.UserTraits_uses_F_1__marginal, this.UserTraits_itemUserIds_observation__F[observation], this.userTrait_B[observation], this.userIds, observation);
				for(int trait = 0; trait<this.traitCount; trait++) {
					this.userTrait_B[observation][trait] = ArrayHelper.SetTo<Gaussian>(this.userTrait_B[observation][trait], this.userTrait_B_new[observation][trait]);
				}
				this.UserBias_uses_F_1__marginal = GetItemsOp<double>.MarginalIncrement<DistributionStructArray<Gaussian,double>,Gaussian>(this.UserBias_uses_F_1__marginal, this.UserBias_itemUserIds_observation__F[observation], this.userBiasObs_B[observation], this.userIds, observation);
				this.vdouble112_B[observation] = DoublePlusOp.AAverageConditional(this.vdouble114_B[observation], this.vdouble113_F[observation]);
				this.vdouble109_B[observation] = DoublePlusOp.AAverageConditional(this.vdouble112_B[observation], this.vdouble111_F[observation]);
				this.userBiasObs_B[observation] = GaussianProductOp_SHG09.AAverageConditional(this.vdouble109_B[observation], 1.0);
				this.ItemBias_uses_F_1__marginal = GetItemsOp<double>.MarginalIncrement<DistributionStructArray<Gaussian,double>,Gaussian>(this.ItemBias_uses_F_1__marginal, this.ItemBias_itemItemIds_observation__F[observation], this.itemBiasObs_B[observation], this.itemIds, observation);
				this.vdouble111_B[observation] = DoublePlusOp.BAverageConditional(this.vdouble112_B[observation], this.vdouble109_F[observation]);
				this.itemBiasObs_B[observation] = GaussianProductOp_SHG09.AAverageConditional(this.vdouble111_B[observation], 1.0);
				for(int userThreshold = 0; userThreshold<this.userThresholdCount; userThreshold++) {
					if (this.useSharedUserThresholds) {
						this.UserThresholds_rep_F_marginal[userThreshold] = ReplicateOp_Divide.MarginalIncrement<Gaussian>(this.UserThresholds_rep_F_marginal[userThreshold], this.UserThresholds_rep_F[userThreshold][observation], this.UserThresholdsObs_B[observation][userThreshold]);
					}
				}
				if (!this.useSharedUserThresholds) {
					this.UserThresholds_depth0_uses_F_1__marginal = GetItemsOp<double[]>.MarginalIncrement<DistributionRefArray<DistributionStructArray<Gaussian,double>,double[]>,DistributionStructArray<Gaussian,double>>(this.UserThresholds_depth0_uses_F_1__marginal, this.UserThresholds_itemUserIds_observation__F[observation], this.UserThresholdsObs_B[observation], this.userIds, observation);
				}
				this.NoisyUserThresholds_use_B[observation][this.CurrentRating[observation]] = IsBetweenGaussianOp.LowerBoundAverageConditional(Bernoulli.PointMass(true), this.vdouble115_F[observation], this.NoisyUserThresholds_F[observation][this.CurrentRating[observation]], this.NoisyUserThresholds_F[observation][this.NextRating[observation]], this.true_logZ[observation]);
				this.NoisyUserThresholds_use_B[observation][this.NextRating[observation]] = IsBetweenGaussianOp.UpperBoundAverageConditional(Bernoulli.PointMass(true), this.vdouble115_F[observation], this.NoisyUserThresholds_F[observation][this.CurrentRating[observation]], this.NoisyUserThresholds_F[observation][this.NextRating[observation]], this.true_logZ[observation]);
				// FactorManager.Any(NoisyUserThresholds_use_B[observation][NextRating[observation]], NoisyUserThresholds_use_B[observation][CurrentRating[observation]]) is now updated in all contexts
				for(int userThreshold = 0; userThreshold<this.userThresholdCount; userThreshold++) {
					this.vdouble__61_B[observation][userThreshold] = GaussianFromMeanAndVarianceOp.MeanAverageConditional(this.NoisyUserThresholds_use_B[observation][userThreshold], this.userThresholdNoiseVariance);
					this.UserThresholdsObs_B[observation][userThreshold] = GaussianProductOp_SHG09.AAverageConditional(this.vdouble__61_B[observation][userThreshold], 1.0);
				}
			}
			this.UserTraits_uses_B[1] = GetItemsOp<double[]>.ArrayAverageConditional<DistributionStructArray<Gaussian,double>,DistributionRefArray<DistributionStructArray<Gaussian,double>,double[]>>(this.userTrait_B, this.userIds, this.UserTraits_uses_B[1]);
			this.UserTraits_use_B = ReplicateOp_NoDivide.DefAverageConditional<DistributionRefArray<DistributionStructArray<Gaussian,double>,double[]>>(this.UserTraits_uses_B, this.UserTraits_use_B);
			for(int user = 0; user<this.userCount; user++) {
				for(int trait = 0; trait<this.traitCount; trait++) {
					this.userTraitMean_B[user][trait] = GaussianFromMeanAndVarianceOp.MeanAverageConditional(this.UserTraits_use_B[user][trait], this.userTraitVariance);
				}
			}
			for(int trait = 0; trait<this.traitCount; trait++) {
				this.UserTraitFeatureWeights_use_F_trait__marginal[trait] = JaggedSubarrayOp<double>.Marginal<DistributionStructArray<Gaussian,double>,Gaussian>(this.UserTraitFeatureWeights_F[trait], this.UserTraitFeatureWeights_NonZeroUserFeatureIndices_B[trait], this.nonZeroUserFeatureIndices, this.UserTraitFeatureWeights_use_F_trait__marginal[trait]);
			}
			for(int user = 0; user<this.userCount; user++) {
				for(int trait = 0; trait<this.traitCount; trait++) {
					this.UserTraitFeatureWeights_NonZeroUserFeatureIndices_F[trait][user] = JaggedSubarrayOp<double>.ItemsAverageConditional<DistributionStructArray<Gaussian,double>,Gaussian,DistributionStructArray<Gaussian,double>>(this.nonZeroUserTraitFeatureWeights_B[user][trait], this.UserTraitFeatureWeights_F[trait], this.UserTraitFeatureWeights_use_F_trait__marginal[trait], this.nonZeroUserFeatureIndices, user, this.UserTraitFeatureWeights_NonZeroUserFeatureIndices_F[trait][user]);
					for(int nonZeroUserFeature = 0; nonZeroUserFeature<this.nonZeroUserFeatureCounts[user]; nonZeroUserFeature++) {
						this.nonZeroUserTraitFeatureWeightProducts_F[user][trait][nonZeroUserFeature] = GaussianProductOpBase.ProductAverageConditional(this.UserTraitFeatureWeights_NonZeroUserFeatureIndices_F[trait][user][nonZeroUserFeature], this.nonZeroUserFeatureValues[user][nonZeroUserFeature]);
					}
					this.userTraitMean_F[user][trait] = FastSumOp.SumAverageConditional(this.nonZeroUserTraitFeatureWeightProducts_F[user][trait]);
					this.nonZeroUserTraitFeatureWeightProducts_B[user][trait] = FastSumOp.ArrayAverageConditional<DistributionStructArray<Gaussian,double>>(this.userTraitMean_B[user][trait], this.userTraitMean_F[user][trait], this.nonZeroUserTraitFeatureWeightProducts_F[user][trait], this.nonZeroUserTraitFeatureWeightProducts_B[user][trait]);
					for(int nonZeroUserFeature = 0; nonZeroUserFeature<this.nonZeroUserFeatureCounts[user]; nonZeroUserFeature++) {
						this.nonZeroUserTraitFeatureWeights_B[user][trait][nonZeroUserFeature] = GaussianProductOpBase.AAverageConditional(this.nonZeroUserTraitFeatureWeightProducts_B[user][trait][nonZeroUserFeature], this.nonZeroUserFeatureValues[user][nonZeroUserFeature]);
					}
					this.UserTraitFeatureWeights_use_F_trait__marginal[trait] = JaggedSubarrayOp<double>.MarginalIncrement<DistributionStructArray<Gaussian,double>,Gaussian>(this.UserTraitFeatureWeights_use_F_trait__marginal[trait], this.UserTraitFeatureWeights_NonZeroUserFeatureIndices_F[trait][user], this.nonZeroUserTraitFeatureWeights_B[user][trait], this.nonZeroUserFeatureIndices, user);
				}
			}
			this.UserBias_uses_B[1] = GetItemsOp<double>.ArrayAverageConditional<Gaussian,DistributionStructArray<Gaussian,double>>(this.userBiasObs_B, this.userIds, this.UserBias_uses_B[1]);
			this.UserBias_use_B = ReplicateOp_NoDivide.DefAverageConditional<DistributionStructArray<Gaussian,double>>(this.UserBias_uses_B, this.UserBias_use_B);
			for(int user = 0; user<this.userCount; user++) {
				this.userBiasMean_B[user] = GaussianFromMeanAndVarianceOp.MeanAverageConditional(this.UserBias_use_B[user], this.userBiasVariance);
				this.UserBiasFeatureWeights_NonZeroUserFeatureIndices_F[user] = JaggedSubarrayWithMarginalOp<double>.ItemsAverageConditional<DistributionStructArray<Gaussian,double>,Gaussian,DistributionStructArray<Gaussian,double>>(this.nonZeroUserBiasFeatureWeights_B[user], this.UserBiasFeatureWeights_F, this.UserBiasFeatureWeights_marginal_F, this.nonZeroUserFeatureIndices, user, this.UserBiasFeatureWeights_NonZeroUserFeatureIndices_F[user]);
				for(int nonZeroUserFeature = 0; nonZeroUserFeature<this.nonZeroUserFeatureCounts[user]; nonZeroUserFeature++) {
					this.nonZeroUserBiasFeatureWeightProducts_F[user][nonZeroUserFeature] = GaussianProductOpBase.ProductAverageConditional(this.UserBiasFeatureWeights_NonZeroUserFeatureIndices_F[user][nonZeroUserFeature], this.nonZeroUserFeatureValues[user][nonZeroUserFeature]);
				}
				this.userBiasMean_F[user] = FastSumOp.SumAverageConditional(this.nonZeroUserBiasFeatureWeightProducts_F[user]);
				this.nonZeroUserBiasFeatureWeightProducts_B[user] = FastSumOp.ArrayAverageConditional<DistributionStructArray<Gaussian,double>>(this.userBiasMean_B[user], this.userBiasMean_F[user], this.nonZeroUserBiasFeatureWeightProducts_F[user], this.nonZeroUserBiasFeatureWeightProducts_B[user]);
				for(int nonZeroUserFeature = 0; nonZeroUserFeature<this.nonZeroUserFeatureCounts[user]; nonZeroUserFeature++) {
					this.nonZeroUserBiasFeatureWeights_B[user][nonZeroUserFeature] = GaussianProductOpBase.AAverageConditional(this.nonZeroUserBiasFeatureWeightProducts_B[user][nonZeroUserFeature], this.nonZeroUserFeatureValues[user][nonZeroUserFeature]);
				}
				this.UserBiasFeatureWeights_marginal_F = JaggedSubarrayWithMarginalOp<double>.MarginalIncrementItems<DistributionStructArray<Gaussian,double>,Gaussian,DistributionStructArray<Gaussian,double>>(this.nonZeroUserBiasFeatureWeights_B[user], this.UserBiasFeatureWeights_NonZeroUserFeatureIndices_F[user], this.nonZeroUserFeatureIndices, user, this.UserBiasFeatureWeights_marginal_F);
			}
			for(int trait = 0; trait<this.traitCount; trait++) {
				this.ItemTraitFeatureWeights_use_F_trait__marginal[trait] = JaggedSubarrayOp<double>.Marginal<DistributionStructArray<Gaussian,double>,Gaussian>(this.ItemTraitFeatureWeights_F[trait], this.ItemTraitFeatureWeights_NonZeroItemFeatureIndices_B[trait], this.nonZeroItemFeatureIndices, this.ItemTraitFeatureWeights_use_F_trait__marginal[trait]);
			}
			this.ItemTraits_depth0_uses_B[1] = GetItemsOp<double[]>.ArrayAverageConditional<DistributionStructArray<Gaussian,double>,DistributionRefArray<DistributionStructArray<Gaussian,double>,double[]>>(this.itemTrait_B, this.itemIds, this.ItemTraits_depth0_uses_B[1]);
			this.ItemTraits_depth0_B = ReplicateOp_NoDivide.DefAverageConditional<DistributionRefArray<DistributionStructArray<Gaussian,double>,double[]>>(this.ItemTraits_depth0_uses_B, this.ItemTraits_depth0_B);
			for(int item = 0; item<this.itemCount; item++) {
				for(int trait = 0; trait<this.traitCount; trait++) {
					this.ItemTraits_uses_B[item][trait][0] = ArrayHelper.SetTo<Gaussian>(this.ItemTraits_uses_B[item][trait][0], this.ItemTraits_depth0_B[item][trait]);
					this.ItemTraits_use_B[item][trait] = ReplicateOp_NoDivide.DefAverageConditional<Gaussian>(this.ItemTraits_uses_B[item][trait], this.ItemTraits_use_B[item][trait]);
					this.itemTraitMean_B[item][trait] = GaussianFromMeanAndVarianceOp.MeanAverageConditional(this.ItemTraits_use_B[item][trait], this.itemTraitVariance);
					this.ItemTraitFeatureWeights_NonZeroItemFeatureIndices_F[trait][item] = JaggedSubarrayOp<double>.ItemsAverageConditional<DistributionStructArray<Gaussian,double>,Gaussian,DistributionStructArray<Gaussian,double>>(this.nonZeroItemTraitFeatureWeights_B[item][trait], this.ItemTraitFeatureWeights_F[trait], this.ItemTraitFeatureWeights_use_F_trait__marginal[trait], this.nonZeroItemFeatureIndices, item, this.ItemTraitFeatureWeights_NonZeroItemFeatureIndices_F[trait][item]);
					for(int nonZeroItemFeature = 0; nonZeroItemFeature<this.nonZeroItemFeatureCounts[item]; nonZeroItemFeature++) {
						this.vdouble____11_F[item][trait][nonZeroItemFeature] = GaussianProductOpBase.ProductAverageConditional(this.ItemTraitFeatureWeights_NonZeroItemFeatureIndices_F[trait][item][nonZeroItemFeature], this.nonZeroItemFeatureValues[item][nonZeroItemFeature]);
					}
					this.itemTraitMean_F[item][trait] = FastSumOp.SumAverageConditional(this.vdouble____11_F[item][trait]);
					this.vdouble____11_B[item][trait] = FastSumOp.ArrayAverageConditional<DistributionStructArray<Gaussian,double>>(this.itemTraitMean_B[item][trait], this.itemTraitMean_F[item][trait], this.vdouble____11_F[item][trait], this.vdouble____11_B[item][trait]);
					for(int nonZeroItemFeature = 0; nonZeroItemFeature<this.nonZeroItemFeatureCounts[item]; nonZeroItemFeature++) {
						this.nonZeroItemTraitFeatureWeights_B[item][trait][nonZeroItemFeature] = GaussianProductOpBase.AAverageConditional(this.vdouble____11_B[item][trait][nonZeroItemFeature], this.nonZeroItemFeatureValues[item][nonZeroItemFeature]);
					}
					this.ItemTraitFeatureWeights_use_F_trait__marginal[trait] = JaggedSubarrayOp<double>.MarginalIncrement<DistributionStructArray<Gaussian,double>,Gaussian>(this.ItemTraitFeatureWeights_use_F_trait__marginal[trait], this.ItemTraitFeatureWeights_NonZeroItemFeatureIndices_F[trait][item], this.nonZeroItemTraitFeatureWeights_B[item][trait], this.nonZeroItemFeatureIndices, item);
				}
			}
			this.ItemBias_uses_B[1] = GetItemsOp<double>.ArrayAverageConditional<Gaussian,DistributionStructArray<Gaussian,double>>(this.itemBiasObs_B, this.itemIds, this.ItemBias_uses_B[1]);
			this.ItemBias_use_B = ReplicateOp_NoDivide.DefAverageConditional<DistributionStructArray<Gaussian,double>>(this.ItemBias_uses_B, this.ItemBias_use_B);
			for(int item = 0; item<this.itemCount; item++) {
				this.itemBiasMean_B[item] = GaussianFromMeanAndVarianceOp.MeanAverageConditional(this.ItemBias_use_B[item], this.itemBiasVariance);
				this.ItemBiasFeatureWeights_NonZeroItemFeatureIndices_F[item] = JaggedSubarrayWithMarginalOp<double>.ItemsAverageConditional<DistributionStructArray<Gaussian,double>,Gaussian,DistributionStructArray<Gaussian,double>>(this.nonZeroItemBiasFeatureWeights_B[item], this.ItemBiasFeatureWeights_F, this.ItemBiasFeatureWeights_marginal_F, this.nonZeroItemFeatureIndices, item, this.ItemBiasFeatureWeights_NonZeroItemFeatureIndices_F[item]);
				for(int nonZeroItemFeature = 0; nonZeroItemFeature<this.nonZeroItemFeatureCounts[item]; nonZeroItemFeature++) {
					this.vdouble__44_F[item][nonZeroItemFeature] = GaussianProductOpBase.ProductAverageConditional(this.ItemBiasFeatureWeights_NonZeroItemFeatureIndices_F[item][nonZeroItemFeature], this.nonZeroItemFeatureValues[item][nonZeroItemFeature]);
				}
				this.itemBiasMean_F[item] = FastSumOp.SumAverageConditional(this.vdouble__44_F[item]);
				this.vdouble__44_B[item] = FastSumOp.ArrayAverageConditional<DistributionStructArray<Gaussian,double>>(this.itemBiasMean_B[item], this.itemBiasMean_F[item], this.vdouble__44_F[item], this.vdouble__44_B[item]);
				for(int nonZeroItemFeature = 0; nonZeroItemFeature<this.nonZeroItemFeatureCounts[item]; nonZeroItemFeature++) {
					this.nonZeroItemBiasFeatureWeights_B[item][nonZeroItemFeature] = GaussianProductOpBase.AAverageConditional(this.vdouble__44_B[item][nonZeroItemFeature], this.nonZeroItemFeatureValues[item][nonZeroItemFeature]);
				}
				this.ItemBiasFeatureWeights_marginal_F = JaggedSubarrayWithMarginalOp<double>.MarginalIncrementItems<DistributionStructArray<Gaussian,double>,Gaussian,DistributionStructArray<Gaussian,double>>(this.nonZeroItemBiasFeatureWeights_B[item], this.ItemBiasFeatureWeights_NonZeroItemFeatureIndices_F[item], this.nonZeroItemFeatureIndices, item, this.ItemBiasFeatureWeights_marginal_F);
			}
			for(int user = 0; user<this.userCount; user++) {
				for(int trait = 0; trait<this.traitCount; trait++) {
					this.UserTraitFeatureWeights_NonZeroUserFeatureIndices_B[trait][user] = ArrayHelper.SetTo<DistributionStructArray<Gaussian,double>>(this.UserTraitFeatureWeights_NonZeroUserFeatureIndices_B[trait][user], this.nonZeroUserTraitFeatureWeights_B[user][trait]);
				}
			}
			for(int item = 0; item<this.itemCount; item++) {
				for(int trait = 0; trait<this.traitCount; trait++) {
					this.ItemTraits_F[item][trait] = GaussianFromMeanAndVarianceOp.SampleAverageConditional(this.itemTraitMean_F[item][trait], this.itemTraitVariance);
					this.ItemTraits_use_F[item][trait] = ArrayHelper.SetTo<Gaussian>(this.ItemTraits_use_F[item][trait], this.ItemTraits_F[item][trait]);
					this.ItemTraitFeatureWeights_NonZeroItemFeatureIndices_B[trait][item] = ArrayHelper.SetTo<DistributionStructArray<Gaussian,double>>(this.ItemTraitFeatureWeights_NonZeroItemFeatureIndices_B[trait][item], this.nonZeroItemTraitFeatureWeights_B[item][trait]);
				}
			}
			for(int user = 0; user<this.userCount; user++) {
				this.UserBias_F[user] = GaussianFromMeanAndVarianceOp.SampleAverageConditional(this.userBiasMean_F[user], this.userBiasVariance);
				this.UserBias_use_F[user] = ArrayHelper.SetTo<Gaussian>(this.UserBias_use_F[user], this.UserBias_F[user]);
			}
			for(int item = 0; item<this.itemCount; item++) {
				this.ItemBias_F[item] = GaussianFromMeanAndVarianceOp.SampleAverageConditional(this.itemBiasMean_F[item], this.itemBiasVariance);
				this.ItemBias_use_F[item] = ArrayHelper.SetTo<Gaussian>(this.ItemBias_use_F[item], this.ItemBias_F[item]);
			}
			for(int observation = 0; observation<this.observationCount; observation++) {
				for(int userThreshold = 0; userThreshold<this.userThresholdCount; userThreshold++) {
					if (this.useSharedUserThresholds) {
						this.UserThresholds_rep_B[userThreshold][observation] = ArrayHelper.SetTo<Gaussian>(this.UserThresholds_rep_B[userThreshold][observation], this.UserThresholdsObs_B[observation][userThreshold]);
					}
				}
			}
			for(int userThreshold = 0; userThreshold<this.userThresholdCount; userThreshold++) {
				if (this.useSharedUserThresholds) {
					this.UserThresholds_rep_B_toDef[userThreshold] = ReplicateOp_Divide.ToDef<Gaussian>(this.UserThresholds_rep_B[userThreshold], this.UserThresholds_rep_B_toDef[userThreshold]);
					this.UserThresholds_uses_B[0][userThreshold][1] = ArrayHelper.SetTo<Gaussian>(this.UserThresholds_uses_B[0][userThreshold][1], this.UserThresholds_rep_B_toDef[userThreshold]);
				}
			}
			if (!this.useSharedUserThresholds) {
				if (!this.useSharedUserThresholds) {
					this.UserThresholds_depth0_uses_B[1] = GetItemsOp<double[]>.ArrayAverageConditional<DistributionStructArray<Gaussian,double>,DistributionRefArray<DistributionStructArray<Gaussian,double>,double[]>>(this.UserThresholdsObs_B, this.userIds, this.UserThresholds_depth0_uses_B[1]);
				}
			}
			for(int user = 0; user<this.userCount; user++) {
				for(int trait = 0; trait<this.traitCount; trait++) {
					this.UserTraits_F[user][trait] = GaussianFromMeanAndVarianceOp.SampleAverageConditional(this.userTraitMean_F[user][trait], this.userTraitVariance);
					this.UserTraits_use_F[user][trait] = ArrayHelper.SetTo<Gaussian>(this.UserTraits_use_F[user][trait], this.UserTraits_F[user][trait]);
				}
				for(int userThreshold = 0; userThreshold<this.userThresholdCount; userThreshold++) {
					this.UserThresholds_use_F[user][userThreshold] = ArrayHelper.SetTo<Gaussian>(this.UserThresholds_use_F[user][userThreshold], this.UserThresholds_F_reduced[userThreshold]);
				}
			}
			this.Changed_AffinityNoiseVariance_ItemBiasFeatureWeightPriorVariance_ItemBiasInitializer_ItemBiasMessage59_isDone = true;
		}

		/// <summary>Computations that depend on the observed value of AffinityNoiseVariance and ItemBiasFeatureWeightPriorVariance and ItemBiasInitializer and ItemBiasMessage and ItemBiasVariance and ItemCount and ItemFeatureCount and ItemIds and ItemTraitFeatureWeightPriorVariance and ItemTraitsInitializer and ItemTraitsMessage and ItemTraitVariance and MiddleUserThresholdIndex and NonZeroItemFeatureCounts and NonZeroItemFeatureIndices and NonZeroItemFeatureValues and NonZeroUserFeatureCounts and NonZeroUserFeatureIndices and NonZeroUserFeatureValues and numberOfIterations and ObservationCount and Ratings and TraitCount and UserBiasFeatureWeightPriorVariance and UserBiasInitializer and UserBiasMessage and UserBiasVariance and UserCount and UserFeatureCount and UserIds and UserThresholdCount and UserThresholdNoiseVariance and UserThresholdPriorMean and UserThresholdPriorVariance and UserThresholdsInitializer and UserThresholdsMessage and UserTraitFeatureWeightPriorVariance and UserTraitsInitializer and UserTraitsMessage and UserTraitVariance and UseSharedUserThresholds</summary>
		/// <param name="numberOfIterations">The number of times to iterate each loop</param>
		private void Changed_AffinityNoiseVariance_ItemBiasFeatureWeightPriorVariance_ItemBiasInitializer_ItemBiasMessage60(int numberOfIterations)
		{
			if (this.Changed_AffinityNoiseVariance_ItemBiasFeatureWeightPriorVariance_ItemBiasInitializer_ItemBiasMessage60_isDone) {
				return ;
			}
			for(int iteration = this.numberOfIterationsDone; iteration<numberOfIterations; iteration++) {
				for(int item = this.itemCount-1; item>=0; item--) {
					for(int trait = 0; trait<this.traitCount; trait++) {
						this.ItemTraits_uses_F[item][trait][0] = ReplicateOp_NoDivide.UsesAverageConditional<Gaussian>(this.ItemTraits_uses_B[item][trait], this.ItemTraits_use_F[item][trait], 0, this.ItemTraits_uses_F[item][trait][0]);
						this.ItemTraits_depth0_F[item][trait] = ArrayHelper.SetTo<Gaussian>(this.ItemTraits_depth0_F[item][trait], this.ItemTraits_uses_F[item][trait][0]);
					}
				}
				this.ItemTraits_depth0_uses_F[1] = ReplicateOp_NoDivide.UsesAverageConditional<DistributionRefArray<DistributionStructArray<Gaussian,double>,double[]>>(this.ItemTraits_depth0_uses_B, this.ItemTraits_depth0_F, 1, this.ItemTraits_depth0_uses_F[1]);
				this.ItemTraits_depth0_uses_F_1__marginal = GetItemsOp<double[]>.Marginal<DistributionRefArray<DistributionStructArray<Gaussian,double>,double[]>,DistributionStructArray<Gaussian,double>>(this.ItemTraits_depth0_uses_F[1], this.ItemTraits_depth0_uses_B[1], this.ItemTraits_depth0_uses_F_1__marginal);
				this.UserBias_uses_F[1] = ReplicateOp_NoDivide.UsesAverageConditional<DistributionStructArray<Gaussian,double>>(this.UserBias_uses_B, this.UserBias_use_F, 1, this.UserBias_uses_F[1]);
				this.UserBias_uses_F_1__marginal = GetItemsOp<double>.Marginal<DistributionStructArray<Gaussian,double>,Gaussian>(this.UserBias_uses_F[1], this.UserBias_uses_B[1], this.UserBias_uses_F_1__marginal);
				this.ItemBias_uses_F[1] = ReplicateOp_NoDivide.UsesAverageConditional<DistributionStructArray<Gaussian,double>>(this.ItemBias_uses_B, this.ItemBias_use_F, 1, this.ItemBias_uses_F[1]);
				this.ItemBias_uses_F_1__marginal = GetItemsOp<double>.Marginal<DistributionStructArray<Gaussian,double>,Gaussian>(this.ItemBias_uses_F[1], this.ItemBias_uses_B[1], this.ItemBias_uses_F_1__marginal);
				this.UserThresholds_depth0_B = ReplicateOp_NoDivide.DefAverageConditional<DistributionRefArray<DistributionStructArray<Gaussian,double>,double[]>>(this.UserThresholds_depth0_uses_B, this.UserThresholds_depth0_B);
				for(int user = this.userCount-1; user>=0; user--) {
					for(int userThreshold = 0; userThreshold<this.userThresholdCount; userThreshold++) {
						this.UserThresholds_uses_B[user][userThreshold][0] = ArrayHelper.SetTo<Gaussian>(this.UserThresholds_uses_B[user][userThreshold][0], this.UserThresholds_depth0_B[user][userThreshold]);
						this.UserThresholds_uses_F[user][userThreshold][1] = ReplicateOp_NoDivide.UsesAverageConditional<Gaussian>(this.UserThresholds_uses_B[user][userThreshold], this.UserThresholds_use_F[user][userThreshold], 1, this.UserThresholds_uses_F[user][userThreshold][1]);
					}
				}
				for(int userThreshold = 0; userThreshold<this.userThresholdCount; userThreshold++) {
					if (this.useSharedUserThresholds) {
						this.UserThresholds_rep_F_marginal[userThreshold] = ReplicateOp_Divide.Marginal<Gaussian>(this.UserThresholds_rep_B_toDef[userThreshold], this.UserThresholds_uses_F[0][userThreshold][1], this.UserThresholds_rep_F_marginal[userThreshold]);
					}
				}
				for(int user = this.userCount-1; user>=0; user--) {
					for(int userThreshold = 0; userThreshold<this.userThresholdCount; userThreshold++) {
						this.UserThresholds_uses_F[user][userThreshold][0] = ReplicateOp_NoDivide.UsesAverageConditional<Gaussian>(this.UserThresholds_uses_B[user][userThreshold], this.UserThresholds_use_F[user][userThreshold], 0, this.UserThresholds_uses_F[user][userThreshold][0]);
						this.UserThresholds_depth0_F[user][userThreshold] = ArrayHelper.SetTo<Gaussian>(this.UserThresholds_depth0_F[user][userThreshold], this.UserThresholds_uses_F[user][userThreshold][0]);
					}
				}
				this.UserThresholds_depth0_uses_F[1] = ReplicateOp_NoDivide.UsesAverageConditional<DistributionRefArray<DistributionStructArray<Gaussian,double>,double[]>>(this.UserThresholds_depth0_uses_B, this.UserThresholds_depth0_F, 1, this.UserThresholds_depth0_uses_F[1]);
				if (!this.useSharedUserThresholds) {
					if (!this.useSharedUserThresholds) {
						this.UserThresholds_depth0_uses_F_1__marginal = GetItemsOp<double[]>.Marginal<DistributionRefArray<DistributionStructArray<Gaussian,double>,double[]>,DistributionStructArray<Gaussian,double>>(this.UserThresholds_depth0_uses_F[1], this.UserThresholds_depth0_uses_B[1], this.UserThresholds_depth0_uses_F_1__marginal);
					}
				}
				this.UserTraits_uses_F[1] = ReplicateOp_NoDivide.UsesAverageConditional<DistributionRefArray<DistributionStructArray<Gaussian,double>,double[]>>(this.UserTraits_uses_B, this.UserTraits_use_F, 1, this.UserTraits_uses_F[1]);
				this.UserTraits_uses_F_1__marginal = GetItemsOp<double[]>.Marginal<DistributionRefArray<DistributionStructArray<Gaussian,double>,double[]>,DistributionStructArray<Gaussian,double>>(this.UserTraits_uses_F[1], this.UserTraits_uses_B[1], this.UserTraits_uses_F_1__marginal);
				for(int observation = 0; observation<this.observationCount; observation++) {
					this.ItemTraits_itemItemIds_observation__F[observation] = GetItemsOp<double[]>.ItemsAverageConditional<DistributionRefArray<DistributionStructArray<Gaussian,double>,double[]>,DistributionStructArray<Gaussian,double>>(this.itemTrait_B[observation], this.ItemTraits_depth0_uses_F[1], this.ItemTraits_depth0_uses_F_1__marginal, this.itemIds, observation, this.ItemTraits_itemItemIds_observation__F[observation]);
					this.UserBias_itemUserIds_observation__F[observation] = GetItemsOp<double>.ItemsAverageConditional<DistributionStructArray<Gaussian,double>,Gaussian>(this.userBiasObs_B[observation], this.UserBias_uses_F[1], this.UserBias_uses_F_1__marginal, this.userIds, observation, this.UserBias_itemUserIds_observation__F[observation]);
					this.vdouble109_F[observation] = GaussianProductOp_SHG09.ProductAverageConditional(this.UserBias_itemUserIds_observation__F[observation], 1.0, this.userBiasObs_B[observation]);
					this.ItemBias_itemItemIds_observation__F[observation] = GetItemsOp<double>.ItemsAverageConditional<DistributionStructArray<Gaussian,double>,Gaussian>(this.itemBiasObs_B[observation], this.ItemBias_uses_F[1], this.ItemBias_uses_F_1__marginal, this.itemIds, observation, this.ItemBias_itemItemIds_observation__F[observation]);
					this.vdouble111_F[observation] = GaussianProductOp_SHG09.ProductAverageConditional(this.ItemBias_itemItemIds_observation__F[observation], 1.0, this.itemBiasObs_B[observation]);
					this.vdouble112_F[observation] = DoublePlusOp.SumAverageConditional(this.vdouble109_F[observation], this.vdouble111_F[observation]);
					for(int userThreshold = 0; userThreshold<this.userThresholdCount; userThreshold++) {
						if (this.useSharedUserThresholds) {
							this.UserThresholds_rep_F[userThreshold][observation] = ReplicateOp_Divide.UsesAverageConditional<Gaussian>(this.UserThresholdsObs_B[observation][userThreshold], this.UserThresholds_rep_F_marginal[userThreshold], observation, this.UserThresholds_rep_F[userThreshold][observation]);
							this.UserThresholdsObs_F[observation][userThreshold] = ArrayHelper.SetTo<Gaussian>(this.UserThresholdsObs_F[observation][userThreshold], this.UserThresholds_rep_F[userThreshold][observation]);
						}
					}
					if (!this.useSharedUserThresholds) {
						if (!this.useSharedUserThresholds) {
							this.UserThresholds_itemUserIds_observation__F[observation] = GetItemsOp<double[]>.ItemsAverageConditional<DistributionRefArray<DistributionStructArray<Gaussian,double>,double[]>,DistributionStructArray<Gaussian,double>>(this.UserThresholdsObs_B[observation], this.UserThresholds_depth0_uses_F[1], this.UserThresholds_depth0_uses_F_1__marginal, this.userIds, observation, this.UserThresholds_itemUserIds_observation__F[observation]);
						}
					}
					for(int userThreshold = 0; userThreshold<this.userThresholdCount; userThreshold++) {
						if (!this.useSharedUserThresholds) {
							this.UserThresholdsObs_F[observation][userThreshold] = ArrayHelper.SetTo<Gaussian>(this.UserThresholdsObs_F[observation][userThreshold], this.UserThresholds_itemUserIds_observation__F[observation][userThreshold]);
						}
						this.vdouble__61_F[observation][userThreshold] = GaussianProductOp_SHG09.ProductAverageConditional(this.UserThresholdsObs_F[observation][userThreshold], 1.0, this.UserThresholdsObs_B[observation][userThreshold]);
						this.NoisyUserThresholds_F[observation][userThreshold] = GaussianFromMeanAndVarianceOp.SampleAverageConditional(this.vdouble__61_F[observation][userThreshold], this.userThresholdNoiseVariance);
					}
					this.UserTraits_itemUserIds_observation__F[observation] = GetItemsOp<double[]>.ItemsAverageConditional<DistributionRefArray<DistributionStructArray<Gaussian,double>,double[]>,DistributionStructArray<Gaussian,double>>(this.userTrait_B[observation], this.UserTraits_uses_F[1], this.UserTraits_uses_F_1__marginal, this.userIds, observation, this.UserTraits_itemUserIds_observation__F[observation]);
					for(int trait = 0; trait<this.traitCount; trait++) {
						this.vdouble__51_F[observation][trait] = GaussianProductOp_SHG09.ProductAverageConditional(this.UserTraits_itemUserIds_observation__F[observation][trait], this.ItemTraits_itemItemIds_observation__F[observation][trait], this.userTrait_B[observation][trait], this.itemTrait_B[observation][trait]);
					}
					this.vdouble113_F[observation] = FastSumOp.SumAverageConditional(this.vdouble__51_F[observation]);
					this.vdouble114_F[observation] = DoublePlusOp.SumAverageConditional(this.vdouble112_F[observation], this.vdouble113_F[observation]);
					this.vdouble115_F[observation] = GaussianFromMeanAndVarianceOp.SampleAverageConditional(this.vdouble114_F[observation], this.affinityNoiseVariance);
					this.true_logZ[observation] = IsBetweenGaussianOp.LogZ(Bernoulli.PointMass(true), this.vdouble115_F[observation], this.NoisyUserThresholds_F[observation][this.CurrentRating[observation]], this.NoisyUserThresholds_F[observation][this.NextRating[observation]]);
					this.vdouble115_use_B[observation] = IsBetweenGaussianOp.XAverageConditional(Bernoulli.PointMass(true), this.vdouble115_F[observation], this.NoisyUserThresholds_F[observation][this.CurrentRating[observation]], this.NoisyUserThresholds_F[observation][this.NextRating[observation]], this.true_logZ[observation]);
					this.vdouble114_B[observation] = GaussianFromMeanAndVarianceOp.MeanAverageConditional(this.vdouble115_use_B[observation], this.affinityNoiseVariance);
					this.vdouble113_B[observation] = DoublePlusOp.BAverageConditional(this.vdouble114_B[observation], this.vdouble112_F[observation]);
					this.vdouble__51_B[observation] = FastSumOp.ArrayAverageConditional<DistributionStructArray<Gaussian,double>>(this.vdouble113_B[observation], this.vdouble113_F[observation], this.vdouble__51_F[observation], this.vdouble__51_B[observation]);
					for(int trait = 0; trait<this.traitCount; trait++) {
						this.userTrait_B_new[observation][trait] = GaussianProductOp_SHG09.AAverageConditional(this.vdouble__51_B[observation][trait], this.ItemTraits_itemItemIds_observation__F[observation][trait], this.itemTrait_B[observation][trait]);
						this.userTrait_B[observation][trait] = ArrayHelper.SetTo<Gaussian>(this.userTrait_B[observation][trait], this.userTrait_B_new[observation][trait]);
						this.itemTrait_B[observation][trait] = GaussianProductOp_SHG09.BAverageConditional(this.vdouble__51_B[observation][trait], this.UserTraits_itemUserIds_observation__F[observation][trait], this.userTrait_B[observation][trait]);
					}
					this.ItemTraits_depth0_uses_F_1__marginal = GetItemsOp<double[]>.MarginalIncrement<DistributionRefArray<DistributionStructArray<Gaussian,double>,double[]>,DistributionStructArray<Gaussian,double>>(this.ItemTraits_depth0_uses_F_1__marginal, this.ItemTraits_itemItemIds_observation__F[observation], this.itemTrait_B[observation], this.itemIds, observation);
					this.vdouble112_B[observation] = DoublePlusOp.AAverageConditional(this.vdouble114_B[observation], this.vdouble113_F[observation]);
					this.vdouble109_B[observation] = DoublePlusOp.AAverageConditional(this.vdouble112_B[observation], this.vdouble111_F[observation]);
					this.userBiasObs_B[observation] = GaussianProductOp_SHG09.AAverageConditional(this.vdouble109_B[observation], 1.0);
					this.UserBias_uses_F_1__marginal = GetItemsOp<double>.MarginalIncrement<DistributionStructArray<Gaussian,double>,Gaussian>(this.UserBias_uses_F_1__marginal, this.UserBias_itemUserIds_observation__F[observation], this.userBiasObs_B[observation], this.userIds, observation);
					this.vdouble111_B[observation] = DoublePlusOp.BAverageConditional(this.vdouble112_B[observation], this.vdouble109_F[observation]);
					this.itemBiasObs_B[observation] = GaussianProductOp_SHG09.AAverageConditional(this.vdouble111_B[observation], 1.0);
					this.ItemBias_uses_F_1__marginal = GetItemsOp<double>.MarginalIncrement<DistributionStructArray<Gaussian,double>,Gaussian>(this.ItemBias_uses_F_1__marginal, this.ItemBias_itemItemIds_observation__F[observation], this.itemBiasObs_B[observation], this.itemIds, observation);
					this.NoisyUserThresholds_use_B[observation][this.CurrentRating[observation]] = IsBetweenGaussianOp.LowerBoundAverageConditional(Bernoulli.PointMass(true), this.vdouble115_F[observation], this.NoisyUserThresholds_F[observation][this.CurrentRating[observation]], this.NoisyUserThresholds_F[observation][this.NextRating[observation]], this.true_logZ[observation]);
					this.NoisyUserThresholds_use_B[observation][this.NextRating[observation]] = IsBetweenGaussianOp.UpperBoundAverageConditional(Bernoulli.PointMass(true), this.vdouble115_F[observation], this.NoisyUserThresholds_F[observation][this.CurrentRating[observation]], this.NoisyUserThresholds_F[observation][this.NextRating[observation]], this.true_logZ[observation]);
					// FactorManager.Any(NoisyUserThresholds_use_B[observation][NextRating[observation]], NoisyUserThresholds_use_B[observation][CurrentRating[observation]]) is now updated in all contexts
					for(int userThreshold = 0; userThreshold<this.userThresholdCount; userThreshold++) {
						this.vdouble__61_B[observation][userThreshold] = GaussianFromMeanAndVarianceOp.MeanAverageConditional(this.NoisyUserThresholds_use_B[observation][userThreshold], this.userThresholdNoiseVariance);
						this.UserThresholdsObs_B[observation][userThreshold] = GaussianProductOp_SHG09.AAverageConditional(this.vdouble__61_B[observation][userThreshold], 1.0);
						if (this.useSharedUserThresholds) {
							this.UserThresholds_rep_F_marginal[userThreshold] = ReplicateOp_Divide.MarginalIncrement<Gaussian>(this.UserThresholds_rep_F_marginal[userThreshold], this.UserThresholds_rep_F[userThreshold][observation], this.UserThresholdsObs_B[observation][userThreshold]);
						}
					}
					if (!this.useSharedUserThresholds) {
						this.UserThresholds_depth0_uses_F_1__marginal = GetItemsOp<double[]>.MarginalIncrement<DistributionRefArray<DistributionStructArray<Gaussian,double>,double[]>,DistributionStructArray<Gaussian,double>>(this.UserThresholds_depth0_uses_F_1__marginal, this.UserThresholds_itemUserIds_observation__F[observation], this.UserThresholdsObs_B[observation], this.userIds, observation);
					}
					this.UserTraits_uses_F_1__marginal = GetItemsOp<double[]>.MarginalIncrement<DistributionRefArray<DistributionStructArray<Gaussian,double>,double[]>,DistributionStructArray<Gaussian,double>>(this.UserTraits_uses_F_1__marginal, this.UserTraits_itemUserIds_observation__F[observation], this.userTrait_B[observation], this.userIds, observation);
				}
				this.UserTraits_uses_B[1] = GetItemsOp<double[]>.ArrayAverageConditional<DistributionStructArray<Gaussian,double>,DistributionRefArray<DistributionStructArray<Gaussian,double>,double[]>>(this.userTrait_B, this.userIds, this.UserTraits_uses_B[1]);
				this.UserTraits_use_B = ReplicateOp_NoDivide.DefAverageConditional<DistributionRefArray<DistributionStructArray<Gaussian,double>,double[]>>(this.UserTraits_uses_B, this.UserTraits_use_B);
				for(int trait = 0; trait<this.traitCount; trait++) {
					this.UserTraitFeatureWeights_use_F_trait__marginal[trait] = JaggedSubarrayOp<double>.Marginal<DistributionStructArray<Gaussian,double>,Gaussian>(this.UserTraitFeatureWeights_F[trait], this.UserTraitFeatureWeights_NonZeroUserFeatureIndices_B[trait], this.nonZeroUserFeatureIndices, this.UserTraitFeatureWeights_use_F_trait__marginal[trait]);
				}
				for(int user = 0; user<this.userCount; user++) {
					for(int trait = 0; trait<this.traitCount; trait++) {
						this.userTraitMean_B[user][trait] = GaussianFromMeanAndVarianceOp.MeanAverageConditional(this.UserTraits_use_B[user][trait], this.userTraitVariance);
						this.UserTraitFeatureWeights_NonZeroUserFeatureIndices_F[trait][user] = JaggedSubarrayOp<double>.ItemsAverageConditional<DistributionStructArray<Gaussian,double>,Gaussian,DistributionStructArray<Gaussian,double>>(this.nonZeroUserTraitFeatureWeights_B[user][trait], this.UserTraitFeatureWeights_F[trait], this.UserTraitFeatureWeights_use_F_trait__marginal[trait], this.nonZeroUserFeatureIndices, user, this.UserTraitFeatureWeights_NonZeroUserFeatureIndices_F[trait][user]);
						for(int nonZeroUserFeature = 0; nonZeroUserFeature<this.nonZeroUserFeatureCounts[user]; nonZeroUserFeature++) {
							this.nonZeroUserTraitFeatureWeightProducts_F[user][trait][nonZeroUserFeature] = GaussianProductOpBase.ProductAverageConditional(this.UserTraitFeatureWeights_NonZeroUserFeatureIndices_F[trait][user][nonZeroUserFeature], this.nonZeroUserFeatureValues[user][nonZeroUserFeature]);
						}
						this.userTraitMean_F[user][trait] = FastSumOp.SumAverageConditional(this.nonZeroUserTraitFeatureWeightProducts_F[user][trait]);
						this.nonZeroUserTraitFeatureWeightProducts_B[user][trait] = FastSumOp.ArrayAverageConditional<DistributionStructArray<Gaussian,double>>(this.userTraitMean_B[user][trait], this.userTraitMean_F[user][trait], this.nonZeroUserTraitFeatureWeightProducts_F[user][trait], this.nonZeroUserTraitFeatureWeightProducts_B[user][trait]);
						for(int nonZeroUserFeature = 0; nonZeroUserFeature<this.nonZeroUserFeatureCounts[user]; nonZeroUserFeature++) {
							this.nonZeroUserTraitFeatureWeights_B[user][trait][nonZeroUserFeature] = GaussianProductOpBase.AAverageConditional(this.nonZeroUserTraitFeatureWeightProducts_B[user][trait][nonZeroUserFeature], this.nonZeroUserFeatureValues[user][nonZeroUserFeature]);
						}
						this.UserTraitFeatureWeights_use_F_trait__marginal[trait] = JaggedSubarrayOp<double>.MarginalIncrement<DistributionStructArray<Gaussian,double>,Gaussian>(this.UserTraitFeatureWeights_use_F_trait__marginal[trait], this.UserTraitFeatureWeights_NonZeroUserFeatureIndices_F[trait][user], this.nonZeroUserTraitFeatureWeights_B[user][trait], this.nonZeroUserFeatureIndices, user);
						this.UserTraitFeatureWeights_NonZeroUserFeatureIndices_B[trait][user] = ArrayHelper.SetTo<DistributionStructArray<Gaussian,double>>(this.UserTraitFeatureWeights_NonZeroUserFeatureIndices_B[trait][user], this.nonZeroUserTraitFeatureWeights_B[user][trait]);
						this.UserTraits_F[user][trait] = GaussianFromMeanAndVarianceOp.SampleAverageConditional(this.userTraitMean_F[user][trait], this.userTraitVariance);
					}
				}
				this.UserBias_uses_B[1] = GetItemsOp<double>.ArrayAverageConditional<Gaussian,DistributionStructArray<Gaussian,double>>(this.userBiasObs_B, this.userIds, this.UserBias_uses_B[1]);
				this.UserBias_use_B = ReplicateOp_NoDivide.DefAverageConditional<DistributionStructArray<Gaussian,double>>(this.UserBias_uses_B, this.UserBias_use_B);
				for(int user = 0; user<this.userCount; user++) {
					this.userBiasMean_B[user] = GaussianFromMeanAndVarianceOp.MeanAverageConditional(this.UserBias_use_B[user], this.userBiasVariance);
					this.UserBiasFeatureWeights_NonZeroUserFeatureIndices_F[user] = JaggedSubarrayWithMarginalOp<double>.ItemsAverageConditional<DistributionStructArray<Gaussian,double>,Gaussian,DistributionStructArray<Gaussian,double>>(this.nonZeroUserBiasFeatureWeights_B[user], this.UserBiasFeatureWeights_F, this.UserBiasFeatureWeights_marginal_F, this.nonZeroUserFeatureIndices, user, this.UserBiasFeatureWeights_NonZeroUserFeatureIndices_F[user]);
					for(int nonZeroUserFeature = 0; nonZeroUserFeature<this.nonZeroUserFeatureCounts[user]; nonZeroUserFeature++) {
						this.nonZeroUserBiasFeatureWeightProducts_F[user][nonZeroUserFeature] = GaussianProductOpBase.ProductAverageConditional(this.UserBiasFeatureWeights_NonZeroUserFeatureIndices_F[user][nonZeroUserFeature], this.nonZeroUserFeatureValues[user][nonZeroUserFeature]);
					}
					this.userBiasMean_F[user] = FastSumOp.SumAverageConditional(this.nonZeroUserBiasFeatureWeightProducts_F[user]);
					this.nonZeroUserBiasFeatureWeightProducts_B[user] = FastSumOp.ArrayAverageConditional<DistributionStructArray<Gaussian,double>>(this.userBiasMean_B[user], this.userBiasMean_F[user], this.nonZeroUserBiasFeatureWeightProducts_F[user], this.nonZeroUserBiasFeatureWeightProducts_B[user]);
					for(int nonZeroUserFeature = 0; nonZeroUserFeature<this.nonZeroUserFeatureCounts[user]; nonZeroUserFeature++) {
						this.nonZeroUserBiasFeatureWeights_B[user][nonZeroUserFeature] = GaussianProductOpBase.AAverageConditional(this.nonZeroUserBiasFeatureWeightProducts_B[user][nonZeroUserFeature], this.nonZeroUserFeatureValues[user][nonZeroUserFeature]);
					}
					this.UserBiasFeatureWeights_marginal_F = JaggedSubarrayWithMarginalOp<double>.MarginalIncrementItems<DistributionStructArray<Gaussian,double>,Gaussian,DistributionStructArray<Gaussian,double>>(this.nonZeroUserBiasFeatureWeights_B[user], this.UserBiasFeatureWeights_NonZeroUserFeatureIndices_F[user], this.nonZeroUserFeatureIndices, user, this.UserBiasFeatureWeights_marginal_F);
					this.UserBias_F[user] = GaussianFromMeanAndVarianceOp.SampleAverageConditional(this.userBiasMean_F[user], this.userBiasVariance);
				}
				for(int trait = 0; trait<this.traitCount; trait++) {
					this.ItemTraitFeatureWeights_use_F_trait__marginal[trait] = JaggedSubarrayOp<double>.Marginal<DistributionStructArray<Gaussian,double>,Gaussian>(this.ItemTraitFeatureWeights_F[trait], this.ItemTraitFeatureWeights_NonZeroItemFeatureIndices_B[trait], this.nonZeroItemFeatureIndices, this.ItemTraitFeatureWeights_use_F_trait__marginal[trait]);
				}
				this.ItemTraits_depth0_uses_B[1] = GetItemsOp<double[]>.ArrayAverageConditional<DistributionStructArray<Gaussian,double>,DistributionRefArray<DistributionStructArray<Gaussian,double>,double[]>>(this.itemTrait_B, this.itemIds, this.ItemTraits_depth0_uses_B[1]);
				this.ItemTraits_depth0_B = ReplicateOp_NoDivide.DefAverageConditional<DistributionRefArray<DistributionStructArray<Gaussian,double>,double[]>>(this.ItemTraits_depth0_uses_B, this.ItemTraits_depth0_B);
				for(int item = 0; item<this.itemCount; item++) {
					for(int trait = 0; trait<this.traitCount; trait++) {
						this.ItemTraits_uses_B[item][trait][0] = ArrayHelper.SetTo<Gaussian>(this.ItemTraits_uses_B[item][trait][0], this.ItemTraits_depth0_B[item][trait]);
						this.ItemTraits_use_B[item][trait] = ReplicateOp_NoDivide.DefAverageConditional<Gaussian>(this.ItemTraits_uses_B[item][trait], this.ItemTraits_use_B[item][trait]);
						this.itemTraitMean_B[item][trait] = GaussianFromMeanAndVarianceOp.MeanAverageConditional(this.ItemTraits_use_B[item][trait], this.itemTraitVariance);
						this.ItemTraitFeatureWeights_NonZeroItemFeatureIndices_F[trait][item] = JaggedSubarrayOp<double>.ItemsAverageConditional<DistributionStructArray<Gaussian,double>,Gaussian,DistributionStructArray<Gaussian,double>>(this.nonZeroItemTraitFeatureWeights_B[item][trait], this.ItemTraitFeatureWeights_F[trait], this.ItemTraitFeatureWeights_use_F_trait__marginal[trait], this.nonZeroItemFeatureIndices, item, this.ItemTraitFeatureWeights_NonZeroItemFeatureIndices_F[trait][item]);
						for(int nonZeroItemFeature = 0; nonZeroItemFeature<this.nonZeroItemFeatureCounts[item]; nonZeroItemFeature++) {
							this.vdouble____11_F[item][trait][nonZeroItemFeature] = GaussianProductOpBase.ProductAverageConditional(this.ItemTraitFeatureWeights_NonZeroItemFeatureIndices_F[trait][item][nonZeroItemFeature], this.nonZeroItemFeatureValues[item][nonZeroItemFeature]);
						}
						this.itemTraitMean_F[item][trait] = FastSumOp.SumAverageConditional(this.vdouble____11_F[item][trait]);
						this.vdouble____11_B[item][trait] = FastSumOp.ArrayAverageConditional<DistributionStructArray<Gaussian,double>>(this.itemTraitMean_B[item][trait], this.itemTraitMean_F[item][trait], this.vdouble____11_F[item][trait], this.vdouble____11_B[item][trait]);
						for(int nonZeroItemFeature = 0; nonZeroItemFeature<this.nonZeroItemFeatureCounts[item]; nonZeroItemFeature++) {
							this.nonZeroItemTraitFeatureWeights_B[item][trait][nonZeroItemFeature] = GaussianProductOpBase.AAverageConditional(this.vdouble____11_B[item][trait][nonZeroItemFeature], this.nonZeroItemFeatureValues[item][nonZeroItemFeature]);
						}
						this.ItemTraitFeatureWeights_use_F_trait__marginal[trait] = JaggedSubarrayOp<double>.MarginalIncrement<DistributionStructArray<Gaussian,double>,Gaussian>(this.ItemTraitFeatureWeights_use_F_trait__marginal[trait], this.ItemTraitFeatureWeights_NonZeroItemFeatureIndices_F[trait][item], this.nonZeroItemTraitFeatureWeights_B[item][trait], this.nonZeroItemFeatureIndices, item);
						this.ItemTraits_F[item][trait] = GaussianFromMeanAndVarianceOp.SampleAverageConditional(this.itemTraitMean_F[item][trait], this.itemTraitVariance);
						this.ItemTraitFeatureWeights_NonZeroItemFeatureIndices_B[trait][item] = ArrayHelper.SetTo<DistributionStructArray<Gaussian,double>>(this.ItemTraitFeatureWeights_NonZeroItemFeatureIndices_B[trait][item], this.nonZeroItemTraitFeatureWeights_B[item][trait]);
					}
				}
				this.ItemBias_uses_B[1] = GetItemsOp<double>.ArrayAverageConditional<Gaussian,DistributionStructArray<Gaussian,double>>(this.itemBiasObs_B, this.itemIds, this.ItemBias_uses_B[1]);
				this.ItemBias_use_B = ReplicateOp_NoDivide.DefAverageConditional<DistributionStructArray<Gaussian,double>>(this.ItemBias_uses_B, this.ItemBias_use_B);
				for(int item = 0; item<this.itemCount; item++) {
					this.itemBiasMean_B[item] = GaussianFromMeanAndVarianceOp.MeanAverageConditional(this.ItemBias_use_B[item], this.itemBiasVariance);
					this.ItemBiasFeatureWeights_NonZeroItemFeatureIndices_F[item] = JaggedSubarrayWithMarginalOp<double>.ItemsAverageConditional<DistributionStructArray<Gaussian,double>,Gaussian,DistributionStructArray<Gaussian,double>>(this.nonZeroItemBiasFeatureWeights_B[item], this.ItemBiasFeatureWeights_F, this.ItemBiasFeatureWeights_marginal_F, this.nonZeroItemFeatureIndices, item, this.ItemBiasFeatureWeights_NonZeroItemFeatureIndices_F[item]);
					for(int nonZeroItemFeature = 0; nonZeroItemFeature<this.nonZeroItemFeatureCounts[item]; nonZeroItemFeature++) {
						this.vdouble__44_F[item][nonZeroItemFeature] = GaussianProductOpBase.ProductAverageConditional(this.ItemBiasFeatureWeights_NonZeroItemFeatureIndices_F[item][nonZeroItemFeature], this.nonZeroItemFeatureValues[item][nonZeroItemFeature]);
					}
					this.itemBiasMean_F[item] = FastSumOp.SumAverageConditional(this.vdouble__44_F[item]);
					this.vdouble__44_B[item] = FastSumOp.ArrayAverageConditional<DistributionStructArray<Gaussian,double>>(this.itemBiasMean_B[item], this.itemBiasMean_F[item], this.vdouble__44_F[item], this.vdouble__44_B[item]);
					for(int nonZeroItemFeature = 0; nonZeroItemFeature<this.nonZeroItemFeatureCounts[item]; nonZeroItemFeature++) {
						this.nonZeroItemBiasFeatureWeights_B[item][nonZeroItemFeature] = GaussianProductOpBase.AAverageConditional(this.vdouble__44_B[item][nonZeroItemFeature], this.nonZeroItemFeatureValues[item][nonZeroItemFeature]);
					}
					this.ItemBiasFeatureWeights_marginal_F = JaggedSubarrayWithMarginalOp<double>.MarginalIncrementItems<DistributionStructArray<Gaussian,double>,Gaussian,DistributionStructArray<Gaussian,double>>(this.nonZeroItemBiasFeatureWeights_B[item], this.ItemBiasFeatureWeights_NonZeroItemFeatureIndices_F[item], this.nonZeroItemFeatureIndices, item, this.ItemBiasFeatureWeights_marginal_F);
					this.ItemBias_F[item] = GaussianFromMeanAndVarianceOp.SampleAverageConditional(this.itemBiasMean_F[item], this.itemBiasVariance);
					for(int trait = 0; trait<this.traitCount; trait++) {
						this.ItemTraits_use_F[item][trait] = ArrayHelper.SetTo<Gaussian>(this.ItemTraits_use_F[item][trait], this.ItemTraits_F[item][trait]);
					}
				}
				for(int user = 0; user<this.userCount; user++) {
					this.UserBias_use_F[user] = ArrayHelper.SetTo<Gaussian>(this.UserBias_use_F[user], this.UserBias_F[user]);
				}
				for(int item = 0; item<this.itemCount; item++) {
					this.ItemBias_use_F[item] = ArrayHelper.SetTo<Gaussian>(this.ItemBias_use_F[item], this.ItemBias_F[item]);
				}
				for(int observation = 0; observation<this.observationCount; observation++) {
					for(int userThreshold = 0; userThreshold<this.userThresholdCount; userThreshold++) {
						if (this.useSharedUserThresholds) {
							this.UserThresholds_rep_B[userThreshold][observation] = ArrayHelper.SetTo<Gaussian>(this.UserThresholds_rep_B[userThreshold][observation], this.UserThresholdsObs_B[observation][userThreshold]);
						}
					}
				}
				for(int userThreshold = 0; userThreshold<this.userThresholdCount; userThreshold++) {
					if (this.useSharedUserThresholds) {
						this.UserThresholds_rep_B_toDef[userThreshold] = ReplicateOp_Divide.ToDef<Gaussian>(this.UserThresholds_rep_B[userThreshold], this.UserThresholds_rep_B_toDef[userThreshold]);
						this.UserThresholds_uses_B[0][userThreshold][1] = ArrayHelper.SetTo<Gaussian>(this.UserThresholds_uses_B[0][userThreshold][1], this.UserThresholds_rep_B_toDef[userThreshold]);
					}
				}
				if (!this.useSharedUserThresholds) {
					if (!this.useSharedUserThresholds) {
						this.UserThresholds_depth0_uses_B[1] = GetItemsOp<double[]>.ArrayAverageConditional<DistributionStructArray<Gaussian,double>,DistributionRefArray<DistributionStructArray<Gaussian,double>,double[]>>(this.UserThresholdsObs_B, this.userIds, this.UserThresholds_depth0_uses_B[1]);
					}
				}
				for(int user = 0; user<this.userCount; user++) {
					for(int trait = 0; trait<this.traitCount; trait++) {
						this.UserTraits_use_F[user][trait] = ArrayHelper.SetTo<Gaussian>(this.UserTraits_use_F[user][trait], this.UserTraits_F[user][trait]);
					}
				}
				this.OnProgressChanged(new ProgressChangedEventArgs(iteration));
			}
			for(int trait = 0; trait<this.traitCount; trait++) {
				this.UserTraitFeatureWeights_use_B[trait] = JaggedSubarrayOp<double>.ArrayAverageConditional<Gaussian,DistributionStructArray<Gaussian,double>>(this.UserTraitFeatureWeights_NonZeroUserFeatureIndices_B[trait], this.nonZeroUserFeatureIndices, this.UserTraitFeatureWeights_use_B[trait]);
				for(int userFeature = 0; userFeature<this.userFeatureCount; userFeature++) {
					this.UserTraitFeatureWeights_marginal_F[trait][userFeature] = VariableOp.MarginalAverageConditional<Gaussian>(this.UserTraitFeatureWeights_use_B[trait][userFeature], this.UserTraitFeatureWeights_F_reduced, this.UserTraitFeatureWeights_marginal_F[trait][userFeature]);
				}
			}
			for(int user = 0; user<this.userCount; user++) {
				for(int userThreshold = 0; userThreshold<this.userThresholdCount; userThreshold++) {
					this.UserThresholds_use_B[user][userThreshold] = ReplicateOp_NoDivide.DefAverageConditional<Gaussian>(this.UserThresholds_uses_B[user][userThreshold], this.UserThresholds_use_B[user][userThreshold]);
					this.UserThresholds_marginal_F[user][userThreshold] = VariableOp.MarginalAverageConditional<Gaussian>(this.UserThresholds_use_B[user][userThreshold], this.UserThresholds_F_reduced[userThreshold], this.UserThresholds_marginal_F[user][userThreshold]);
				}
				for(int trait = 0; trait<this.traitCount; trait++) {
					this.UserTraits_marginal_F[user][trait] = VariableOp.MarginalAverageConditional<Gaussian>(this.UserTraits_use_B[user][trait], this.UserTraits_F[user][trait], this.UserTraits_marginal_F[user][trait]);
				}
				this.UserBias_marginal_F[user] = VariableOp.MarginalAverageConditional<Gaussian>(this.UserBias_use_B[user], this.UserBias_F[user], this.UserBias_marginal_F[user]);
			}
			for(int trait = 0; trait<this.traitCount; trait++) {
				this.ItemTraitFeatureWeights_use_B[trait] = JaggedSubarrayOp<double>.ArrayAverageConditional<Gaussian,DistributionStructArray<Gaussian,double>>(this.ItemTraitFeatureWeights_NonZeroItemFeatureIndices_B[trait], this.nonZeroItemFeatureIndices, this.ItemTraitFeatureWeights_use_B[trait]);
				for(int itemFeature = 0; itemFeature<this.itemFeatureCount; itemFeature++) {
					this.ItemTraitFeatureWeights_marginal_F[trait][itemFeature] = VariableOp.MarginalAverageConditional<Gaussian>(this.ItemTraitFeatureWeights_use_B[trait][itemFeature], this.ItemTraitFeatureWeights_F_reduced, this.ItemTraitFeatureWeights_marginal_F[trait][itemFeature]);
				}
			}
			for(int item = 0; item<this.itemCount; item++) {
				for(int trait = 0; trait<this.traitCount; trait++) {
					this.ItemTraits_marginal_F[item][trait] = VariableOp.MarginalAverageConditional<Gaussian>(this.ItemTraits_use_B[item][trait], this.ItemTraits_F[item][trait], this.ItemTraits_marginal_F[item][trait]);
				}
				this.ItemBias_marginal_F[item] = VariableOp.MarginalAverageConditional<Gaussian>(this.ItemBias_use_B[item], this.ItemBias_F[item], this.ItemBias_marginal_F[item]);
			}
			this.Changed_AffinityNoiseVariance_ItemBiasFeatureWeightPriorVariance_ItemBiasInitializer_ItemBiasMessage60_isDone = true;
		}

		/// <summary>Computations that depend on the observed value of ItemBiasFeatureWeightPriorVariance and ItemCount and ItemFeatureCount and NonZeroItemFeatureCounts and NonZeroItemFeatureIndices and numberOfIterationsDecreased and must reset on changes to AffinityNoiseVariance and ItemBiasInitializer and ItemBiasMessage and ItemBiasVariance and ItemIds and ItemTraitFeatureWeightPriorVariance and ItemTraitsInitializer and ItemTraitsMessage and ItemTraitVariance and MiddleUserThresholdIndex and NonZeroItemFeatureValues and NonZeroUserFeatureCounts and NonZeroUserFeatureIndices and NonZeroUserFeatureValues and ObservationCount and Ratings and TraitCount and UserBiasFeatureWeightPriorVariance and UserBiasInitializer and UserBiasMessage and UserBiasVariance and UserCount and UserFeatureCount and UserIds and UserThresholdCount and UserThresholdNoiseVariance and UserThresholdPriorMean and UserThresholdPriorVariance and UserThresholdsInitializer and UserThresholdsMessage and UserTraitFeatureWeightPriorVariance and UserTraitsInitializer and UserTraitsMessage and UserTraitVariance and UseSharedUserThresholds</summary>
		/// <param name="initialise">If true, reset messages that initialise loops</param>
		private void Changed_ItemBiasFeatureWeightPriorVariance_ItemCount_ItemFeatureCount_NonZeroItemFeatureCounts_NonZe55(bool initialise)
		{
			if (this.Changed_ItemBiasFeatureWeightPriorVariance_ItemCount_ItemFeatureCount_NonZeroItemFeatureCounts_NonZe55_isDone&&((!initialise)||this.Changed_ItemBiasFeatureWeightPriorVariance_ItemCount_ItemFeatureCount_NonZeroItemFeatureCounts_NonZe55_isInitialised)) {
				return ;
			}
			this.ItemBiasFeatureWeights_marginal_F = JaggedSubarrayWithMarginalOp<double>.MarginalAverageConditional<DistributionStructArray<Gaussian,double>,Gaussian,DistributionStructArray<Gaussian,double>>(this.ItemBiasFeatureWeights_F, this.nonZeroItemBiasFeatureWeights_B, this.nonZeroItemFeatureIndices, this.ItemBiasFeatureWeights_marginal_F);
			this.Changed_ItemBiasFeatureWeightPriorVariance_ItemCount_ItemFeatureCount_NonZeroItemFeatureCounts_NonZe55_isDone = true;
			this.Changed_ItemBiasFeatureWeightPriorVariance_ItemCount_ItemFeatureCount_NonZeroItemFeatureCounts_NonZe55_isInitialised = true;
		}

		/// <summary>Computations that depend on the observed value of ItemBiasFeatureWeightPriorVariance and ItemFeatureCount</summary>
		private void Changed_ItemBiasFeatureWeightPriorVariance_ItemFeatureCount()
		{
			if (this.Changed_ItemBiasFeatureWeightPriorVariance_ItemFeatureCount_isDone) {
				return ;
			}
			if (this.itemFeatureCount>0) {
				this.ItemBiasFeatureWeights_F_reduced = GaussianFromMeanAndVarianceOp.SampleAverageConditional(0.0, this.itemBiasFeatureWeightPriorVariance);
			}
			for(int itemFeature = 0; itemFeature<this.itemFeatureCount; itemFeature++) {
				this.ItemBiasFeatureWeights_F[itemFeature] = this.ItemBiasFeatureWeights_F_reduced;
			}
			this.Changed_ItemBiasFeatureWeightPriorVariance_ItemFeatureCount_isDone = true;
		}

		/// <summary>Computations that depend on the observed value of ItemBiasInitializer and ItemCount</summary>
		private void Changed_ItemBiasInitializer_ItemCount()
		{
			if (this.Changed_ItemBiasInitializer_ItemCount_isDone) {
				return ;
			}
			for(int item = 0; item<this.itemCount; item++) {
				this.ItemBias_marginal_F[item] = ArrayHelper.MakeCopy<Gaussian>(this.itemBiasInitializer[item]);
			}
			this.Changed_ItemBiasInitializer_ItemCount_isDone = true;
		}

		/// <summary>Computations that depend on the observed value of ItemBiasInitializer and ItemCount and numberOfIterationsDecreased and must reset on changes to AffinityNoiseVariance and ItemBiasFeatureWeightPriorVariance and ItemBiasMessage and ItemBiasVariance and ItemFeatureCount and ItemIds and ItemTraitFeatureWeightPriorVariance and ItemTraitsInitializer and ItemTraitsMessage and ItemTraitVariance and MiddleUserThresholdIndex and NonZeroItemFeatureCounts and NonZeroItemFeatureIndices and NonZeroItemFeatureValues and NonZeroUserFeatureCounts and NonZeroUserFeatureIndices and NonZeroUserFeatureValues and ObservationCount and Ratings and TraitCount and UserBiasFeatureWeightPriorVariance and UserBiasInitializer and UserBiasMessage and UserBiasVariance and UserCount and UserFeatureCount and UserIds and UserThresholdCount and UserThresholdNoiseVariance and UserThresholdPriorMean and UserThresholdPriorVariance and UserThresholdsInitializer and UserThresholdsMessage and UserTraitFeatureWeightPriorVariance and UserTraitsInitializer and UserTraitsMessage and UserTraitVariance and UseSharedUserThresholds</summary>
		/// <param name="initialise">If true, reset messages that initialise loops</param>
		private void Changed_ItemBiasInitializer_ItemCount_numberOfIterationsDecreased_Init_AffinityNoiseVariance_ItemBia19(bool initialise)
		{
			if (this.Changed_ItemBiasInitializer_ItemCount_numberOfIterationsDecreased_Init_AffinityNoiseVariance_ItemBia19_isDone&&((!initialise)||this.Changed_ItemBiasInitializer_ItemCount_numberOfIterationsDecreased_Init_AffinityNoiseVariance_ItemBia19_isInitialised)) {
				return ;
			}
			for(int item = 0; item<this.itemCount; item++) {
				this.ItemBias_use_F[item] = ArrayHelper.MakeCopy<Gaussian>(this.itemBiasInitializer[item]);
			}
			this.Changed_ItemBiasInitializer_ItemCount_numberOfIterationsDecreased_Init_AffinityNoiseVariance_ItemBia19_isDone = true;
			this.Changed_ItemBiasInitializer_ItemCount_numberOfIterationsDecreased_Init_AffinityNoiseVariance_ItemBia19_isInitialised = true;
		}

		/// <summary>Computations that depend on the observed value of ItemBiasMessage and ItemCount</summary>
		private void Changed_ItemBiasMessage_ItemCount()
		{
			if (this.Changed_ItemBiasMessage_ItemCount_isDone) {
				return ;
			}
			this.ItemBias_uses_B[0] = ArrayHelper.SetTo<DistributionStructArray<Gaussian,double>>(this.ItemBias_uses_B[0], this.itemBiasMessage);
			this.Changed_ItemBiasMessage_ItemCount_isDone = true;
		}

		/// <summary>Computations that depend on the observed value of ItemCount</summary>
		private void Changed_ItemCount()
		{
			if (this.Changed_ItemCount_isDone) {
				return ;
			}
			this.ItemTraits_F = new DistributionRefArray<DistributionStructArray<Gaussian,double>,double[]>(this.itemCount);
			this.ItemBias_F = new DistributionStructArray<Gaussian,double>(this.itemCount);
			this.ItemTraits_uses_F = new Gaussian[this.itemCount][][];
			this.ItemTraits_uses_B = new Gaussian[this.itemCount][][];
			this.ItemTraits_use_F = new DistributionRefArray<DistributionStructArray<Gaussian,double>,double[]>(this.itemCount);
			this.ItemTraits_depth0_F = new DistributionRefArray<DistributionStructArray<Gaussian,double>,double[]>(this.itemCount);
			this.ItemTraits_depth0_uses_F[1] = new DistributionRefArray<DistributionStructArray<Gaussian,double>,double[]>(this.itemCount);
			this.ItemTraits_depth0_uses_B[0] = new DistributionRefArray<DistributionStructArray<Gaussian,double>,double[]>(this.itemCount);
			this.ItemTraits_depth0_uses_B[1] = new DistributionRefArray<DistributionStructArray<Gaussian,double>,double[]>(this.itemCount);
			this.ItemBias_uses_F[1] = new DistributionStructArray<Gaussian,double>(this.itemCount);
			this.ItemBias_uses_B[0] = new DistributionStructArray<Gaussian,double>(this.itemCount);
			for(int item = 0; item<this.itemCount; item++) {
				this.ItemBias_uses_B[0][item] = Gaussian.Uniform();
			}
			this.ItemBias_use_F = new DistributionStructArray<Gaussian,double>(this.itemCount);
			this.ItemBias_uses_B[1] = new DistributionStructArray<Gaussian,double>(this.itemCount);
			this.ItemTraits_depth0_B = new DistributionRefArray<DistributionStructArray<Gaussian,double>,double[]>(this.itemCount);
			this.ItemTraits_use_B = new DistributionRefArray<DistributionStructArray<Gaussian,double>,double[]>(this.itemCount);
			this.itemTraitMean_B = new DistributionStructArray<Gaussian,double>[this.itemCount];
			this.nonZeroItemTraitFeatureWeights_B = new DistributionRefArray<DistributionStructArray<Gaussian,double>,double[]>[this.itemCount];
			this.vdouble____11_F = new DistributionRefArray<DistributionStructArray<Gaussian,double>,double[]>[this.itemCount];
			this.itemTraitMean_F = new DistributionStructArray<Gaussian,double>[this.itemCount];
			this.vdouble____11_B = new DistributionRefArray<DistributionStructArray<Gaussian,double>,double[]>[this.itemCount];
			this.ItemBias_use_B = new DistributionStructArray<Gaussian,double>(this.itemCount);
			this.itemBiasMean_B = new Gaussian[this.itemCount];
			this.ItemBiasFeatureWeights_NonZeroItemFeatureIndices_F = new DistributionRefArray<DistributionStructArray<Gaussian,double>,double[]>(this.itemCount);
			this.nonZeroItemBiasFeatureWeights_B = new DistributionStructArray<Gaussian,double>[this.itemCount];
			this.vdouble__44_F = new DistributionStructArray<Gaussian,double>[this.itemCount];
			this.itemBiasMean_F = new Gaussian[this.itemCount];
			this.vdouble__44_B = new DistributionStructArray<Gaussian,double>[this.itemCount];
			this.ItemTraits_marginal_F = new DistributionRefArray<DistributionStructArray<Gaussian,double>,double[]>(this.itemCount);
			this.ItemBias_marginal_F = new DistributionStructArray<Gaussian,double>(this.itemCount);
			this.Changed_ItemCount_isDone = true;
		}

		/// <summary>Computations that depend on the observed value of ItemCount and ItemTraitsInitializer and numberOfIterationsDecreased and TraitCount and must reset on changes to AffinityNoiseVariance and ItemBiasFeatureWeightPriorVariance and ItemBiasInitializer and ItemBiasMessage and ItemBiasVariance and ItemFeatureCount and ItemIds and ItemTraitFeatureWeightPriorVariance and ItemTraitsMessage and ItemTraitVariance and MiddleUserThresholdIndex and NonZeroItemFeatureCounts and NonZeroItemFeatureIndices and NonZeroItemFeatureValues and NonZeroUserFeatureCounts and NonZeroUserFeatureIndices and NonZeroUserFeatureValues and ObservationCount and Ratings and UserBiasFeatureWeightPriorVariance and UserBiasInitializer and UserBiasMessage and UserBiasVariance and UserCount and UserFeatureCount and UserIds and UserThresholdCount and UserThresholdNoiseVariance and UserThresholdPriorMean and UserThresholdPriorVariance and UserThresholdsInitializer and UserThresholdsMessage and UserTraitFeatureWeightPriorVariance and UserTraitsInitializer and UserTraitsMessage and UserTraitVariance and UseSharedUserThresholds</summary>
		/// <param name="initialise">If true, reset messages that initialise loops</param>
		private void Changed_ItemCount_ItemTraitsInitializer_numberOfIterationsDecreased_TraitCount_Init_AffinityNoiseVar14(bool initialise)
		{
			if (this.Changed_ItemCount_ItemTraitsInitializer_numberOfIterationsDecreased_TraitCount_Init_AffinityNoiseVar14_isDone&&((!initialise)||this.Changed_ItemCount_ItemTraitsInitializer_numberOfIterationsDecreased_TraitCount_Init_AffinityNoiseVar14_isInitialised)) {
				return ;
			}
			for(int item = 0; item<this.itemCount; item++) {
				for(int trait = 0; trait<this.traitCount; trait++) {
					this.ItemTraits_use_F[item][trait] = ArrayHelper.MakeCopy<Gaussian>(this.itemTraitsInitializer[item][trait]);
				}
			}
			this.Changed_ItemCount_ItemTraitsInitializer_numberOfIterationsDecreased_TraitCount_Init_AffinityNoiseVar14_isDone = true;
			this.Changed_ItemCount_ItemTraitsInitializer_numberOfIterationsDecreased_TraitCount_Init_AffinityNoiseVar14_isInitialised = true;
		}

		/// <summary>Computations that depend on the observed value of ItemCount and ItemTraitsInitializer and TraitCount</summary>
		private void Changed_ItemCount_ItemTraitsInitializer_TraitCount()
		{
			if (this.Changed_ItemCount_ItemTraitsInitializer_TraitCount_isDone) {
				return ;
			}
			for(int item = 0; item<this.itemCount; item++) {
				for(int trait = 0; trait<this.traitCount; trait++) {
					this.ItemTraits_marginal_F[item][trait] = ArrayHelper.MakeCopy<Gaussian>(this.itemTraitsInitializer[item][trait]);
				}
			}
			this.Changed_ItemCount_ItemTraitsInitializer_TraitCount_isDone = true;
		}

		/// <summary>Computations that depend on the observed value of ItemCount and ItemTraitsMessage and TraitCount</summary>
		private void Changed_ItemCount_ItemTraitsMessage_TraitCount()
		{
			if (this.Changed_ItemCount_ItemTraitsMessage_TraitCount_isDone) {
				return ;
			}
			this.ItemTraits_depth0_uses_B[0] = ArrayHelper.SetTo<DistributionRefArray<DistributionStructArray<Gaussian,double>,double[]>>(this.ItemTraits_depth0_uses_B[0], this.itemTraitsMessage);
			this.Changed_ItemCount_ItemTraitsMessage_TraitCount_isDone = true;
		}

		/// <summary>Computations that depend on the observed value of ItemCount and NonZeroItemFeatureCounts</summary>
		private void Changed_ItemCount_NonZeroItemFeatureCounts()
		{
			if (this.Changed_ItemCount_NonZeroItemFeatureCounts_isDone) {
				return ;
			}
			for(int item = 0; item<this.itemCount; item++) {
				this.ItemBiasFeatureWeights_NonZeroItemFeatureIndices_F[item] = new DistributionStructArray<Gaussian,double>(this.nonZeroItemFeatureCounts[item]);
				this.nonZeroItemBiasFeatureWeights_B[item] = new DistributionStructArray<Gaussian,double>(this.nonZeroItemFeatureCounts[item]);
				this.vdouble__44_F[item] = new DistributionStructArray<Gaussian,double>(this.nonZeroItemFeatureCounts[item]);
				this.vdouble__44_B[item] = new DistributionStructArray<Gaussian,double>(this.nonZeroItemFeatureCounts[item]);
			}
			this.Changed_ItemCount_NonZeroItemFeatureCounts_isDone = true;
		}

		/// <summary>Computations that depend on the observed value of ItemCount and NonZeroItemFeatureCounts and numberOfIterationsDecreased and must reset on changes to AffinityNoiseVariance and ItemBiasFeatureWeightPriorVariance and ItemBiasInitializer and ItemBiasMessage and ItemBiasVariance and ItemFeatureCount and ItemIds and ItemTraitFeatureWeightPriorVariance and ItemTraitsInitializer and ItemTraitsMessage and ItemTraitVariance and MiddleUserThresholdIndex and NonZeroItemFeatureIndices and NonZeroItemFeatureValues and NonZeroUserFeatureCounts and NonZeroUserFeatureIndices and NonZeroUserFeatureValues and ObservationCount and Ratings and TraitCount and UserBiasFeatureWeightPriorVariance and UserBiasInitializer and UserBiasMessage and UserBiasVariance and UserCount and UserFeatureCount and UserIds and UserThresholdCount and UserThresholdNoiseVariance and UserThresholdPriorMean and UserThresholdPriorVariance and UserThresholdsInitializer and UserThresholdsMessage and UserTraitFeatureWeightPriorVariance and UserTraitsInitializer and UserTraitsMessage and UserTraitVariance and UseSharedUserThresholds</summary>
		/// <param name="initialise">If true, reset messages that initialise loops</param>
		private void Changed_ItemCount_NonZeroItemFeatureCounts_numberOfIterationsDecreased_Init_AffinityNoiseVariance_It52(bool initialise)
		{
			if (this.Changed_ItemCount_NonZeroItemFeatureCounts_numberOfIterationsDecreased_Init_AffinityNoiseVariance_It52_isDone&&((!initialise)||this.Changed_ItemCount_NonZeroItemFeatureCounts_numberOfIterationsDecreased_Init_AffinityNoiseVariance_It52_isInitialised)) {
				return ;
			}
			for(int item = 0; item<this.itemCount; item++) {
				for(int nonZeroItemFeature = 0; nonZeroItemFeature<this.nonZeroItemFeatureCounts[item]; nonZeroItemFeature++) {
					this.ItemBiasFeatureWeights_NonZeroItemFeatureIndices_F[item][nonZeroItemFeature] = Gaussian.Uniform();
					this.nonZeroItemBiasFeatureWeights_B[item][nonZeroItemFeature] = Gaussian.Uniform();
					this.vdouble__44_F[item][nonZeroItemFeature] = Gaussian.Uniform();
					this.vdouble__44_B[item][nonZeroItemFeature] = Gaussian.Uniform();
				}
			}
			this.Changed_ItemCount_NonZeroItemFeatureCounts_numberOfIterationsDecreased_Init_AffinityNoiseVariance_It52_isDone = true;
			this.Changed_ItemCount_NonZeroItemFeatureCounts_numberOfIterationsDecreased_Init_AffinityNoiseVariance_It52_isInitialised = true;
		}

		/// <summary>Computations that depend on the observed value of ItemCount and NonZeroItemFeatureCounts and numberOfIterationsDecreased and TraitCount and must reset on changes to AffinityNoiseVariance and ItemBiasFeatureWeightPriorVariance and ItemBiasInitializer and ItemBiasMessage and ItemBiasVariance and ItemFeatureCount and ItemIds and ItemTraitFeatureWeightPriorVariance and ItemTraitsInitializer and ItemTraitsMessage and ItemTraitVariance and MiddleUserThresholdIndex and NonZeroItemFeatureIndices and NonZeroItemFeatureValues and NonZeroUserFeatureCounts and NonZeroUserFeatureIndices and NonZeroUserFeatureValues and ObservationCount and Ratings and UserBiasFeatureWeightPriorVariance and UserBiasInitializer and UserBiasMessage and UserBiasVariance and UserCount and UserFeatureCount and UserIds and UserThresholdCount and UserThresholdNoiseVariance and UserThresholdPriorMean and UserThresholdPriorVariance and UserThresholdsInitializer and UserThresholdsMessage and UserTraitFeatureWeightPriorVariance and UserTraitsInitializer and UserTraitsMessage and UserTraitVariance and UseSharedUserThresholds</summary>
		/// <param name="initialise">If true, reset messages that initialise loops</param>
		private void Changed_ItemCount_NonZeroItemFeatureCounts_numberOfIterationsDecreased_TraitCount_Init_AffinityNoise50(bool initialise)
		{
			if (this.Changed_ItemCount_NonZeroItemFeatureCounts_numberOfIterationsDecreased_TraitCount_Init_AffinityNoise50_isDone&&((!initialise)||this.Changed_ItemCount_NonZeroItemFeatureCounts_numberOfIterationsDecreased_TraitCount_Init_AffinityNoise50_isInitialised)) {
				return ;
			}
			for(int item = 0; item<this.itemCount; item++) {
				for(int trait = 0; trait<this.traitCount; trait++) {
					for(int nonZeroItemFeature = 0; nonZeroItemFeature<this.nonZeroItemFeatureCounts[item]; nonZeroItemFeature++) {
						this.ItemTraitFeatureWeights_NonZeroItemFeatureIndices_B[trait][item][nonZeroItemFeature] = Gaussian.Uniform();
						this.ItemTraitFeatureWeights_NonZeroItemFeatureIndices_F[trait][item][nonZeroItemFeature] = Gaussian.Uniform();
						this.nonZeroItemTraitFeatureWeights_B[item][trait][nonZeroItemFeature] = Gaussian.Uniform();
						this.vdouble____11_F[item][trait][nonZeroItemFeature] = Gaussian.Uniform();
						this.vdouble____11_B[item][trait][nonZeroItemFeature] = Gaussian.Uniform();
					}
				}
			}
			this.Changed_ItemCount_NonZeroItemFeatureCounts_numberOfIterationsDecreased_TraitCount_Init_AffinityNoise50_isDone = true;
			this.Changed_ItemCount_NonZeroItemFeatureCounts_numberOfIterationsDecreased_TraitCount_Init_AffinityNoise50_isInitialised = true;
		}

		/// <summary>Computations that depend on the observed value of ItemCount and NonZeroItemFeatureCounts and TraitCount</summary>
		private void Changed_ItemCount_NonZeroItemFeatureCounts_TraitCount()
		{
			if (this.Changed_ItemCount_NonZeroItemFeatureCounts_TraitCount_isDone) {
				return ;
			}
			for(int item = 0; item<this.itemCount; item++) {
				for(int trait = 0; trait<this.traitCount; trait++) {
					this.ItemTraitFeatureWeights_NonZeroItemFeatureIndices_B[trait][item] = new DistributionStructArray<Gaussian,double>(this.nonZeroItemFeatureCounts[item]);
					this.ItemTraitFeatureWeights_NonZeroItemFeatureIndices_F[trait][item] = new DistributionStructArray<Gaussian,double>(this.nonZeroItemFeatureCounts[item]);
					this.nonZeroItemTraitFeatureWeights_B[item][trait] = new DistributionStructArray<Gaussian,double>(this.nonZeroItemFeatureCounts[item]);
					this.vdouble____11_F[item][trait] = new DistributionStructArray<Gaussian,double>(this.nonZeroItemFeatureCounts[item]);
					this.vdouble____11_B[item][trait] = new DistributionStructArray<Gaussian,double>(this.nonZeroItemFeatureCounts[item]);
				}
			}
			this.Changed_ItemCount_NonZeroItemFeatureCounts_TraitCount_isDone = true;
		}

		/// <summary>Computations that depend on the observed value of ItemCount and numberOfIterationsDecreased and must reset on changes to AffinityNoiseVariance and ItemBiasFeatureWeightPriorVariance and ItemBiasInitializer and ItemBiasMessage and ItemBiasVariance and ItemFeatureCount and ItemIds and ItemTraitFeatureWeightPriorVariance and ItemTraitsInitializer and ItemTraitsMessage and ItemTraitVariance and MiddleUserThresholdIndex and NonZeroItemFeatureCounts and NonZeroItemFeatureIndices and NonZeroItemFeatureValues and NonZeroUserFeatureCounts and NonZeroUserFeatureIndices and NonZeroUserFeatureValues and ObservationCount and Ratings and TraitCount and UserBiasFeatureWeightPriorVariance and UserBiasInitializer and UserBiasMessage and UserBiasVariance and UserCount and UserFeatureCount and UserIds and UserThresholdCount and UserThresholdNoiseVariance and UserThresholdPriorMean and UserThresholdPriorVariance and UserThresholdsInitializer and UserThresholdsMessage and UserTraitFeatureWeightPriorVariance and UserTraitsInitializer and UserTraitsMessage and UserTraitVariance and UseSharedUserThresholds</summary>
		/// <param name="initialise">If true, reset messages that initialise loops</param>
		private void Changed_ItemCount_numberOfIterationsDecreased_Init_AffinityNoiseVariance_ItemBiasFeatureWeightPriorV8(bool initialise)
		{
			if (this.Changed_ItemCount_numberOfIterationsDecreased_Init_AffinityNoiseVariance_ItemBiasFeatureWeightPriorV8_isDone&&((!initialise)||this.Changed_ItemCount_numberOfIterationsDecreased_Init_AffinityNoiseVariance_ItemBiasFeatureWeightPriorV8_isInitialised)) {
				return ;
			}
			for(int item = 0; item<this.itemCount; item++) {
				this.ItemBias_F[item] = Gaussian.Uniform();
				this.ItemBias_uses_F[1][item] = Gaussian.Uniform();
			}
			this.ItemBias_uses_F_1__marginal = GetItemsOp<double>.MarginalInit<DistributionStructArray<Gaussian,double>>(this.ItemBias_uses_F[1]);
			for(int item = 0; item<this.itemCount; item++) {
				this.ItemBias_uses_B[1][item] = Gaussian.Uniform();
				this.ItemBias_use_B[item] = Gaussian.Uniform();
				this.itemBiasMean_B[item] = Gaussian.Uniform();
				this.itemBiasMean_F[item] = Gaussian.Uniform();
			}
			this.Changed_ItemCount_numberOfIterationsDecreased_Init_AffinityNoiseVariance_ItemBiasFeatureWeightPriorV8_isDone = true;
			this.Changed_ItemCount_numberOfIterationsDecreased_Init_AffinityNoiseVariance_ItemBiasFeatureWeightPriorV8_isInitialised = true;
		}

		/// <summary>Computations that depend on the observed value of ItemCount and numberOfIterationsDecreased and TraitCount and must reset on changes to AffinityNoiseVariance and ItemBiasFeatureWeightPriorVariance and ItemBiasInitializer and ItemBiasMessage and ItemBiasVariance and ItemFeatureCount and ItemIds and ItemTraitFeatureWeightPriorVariance and ItemTraitsInitializer and ItemTraitsMessage and ItemTraitVariance and MiddleUserThresholdIndex and NonZeroItemFeatureCounts and NonZeroItemFeatureIndices and NonZeroItemFeatureValues and NonZeroUserFeatureCounts and NonZeroUserFeatureIndices and NonZeroUserFeatureValues and ObservationCount and Ratings and UserBiasFeatureWeightPriorVariance and UserBiasInitializer and UserBiasMessage and UserBiasVariance and UserCount and UserFeatureCount and UserIds and UserThresholdCount and UserThresholdNoiseVariance and UserThresholdPriorMean and UserThresholdPriorVariance and UserThresholdsInitializer and UserThresholdsMessage and UserTraitFeatureWeightPriorVariance and UserTraitsInitializer and UserTraitsMessage and UserTraitVariance and UseSharedUserThresholds</summary>
		/// <param name="initialise">If true, reset messages that initialise loops</param>
		private void Changed_ItemCount_numberOfIterationsDecreased_TraitCount_Init_AffinityNoiseVariance_ItemBiasFeatureW6(bool initialise)
		{
			if (this.Changed_ItemCount_numberOfIterationsDecreased_TraitCount_Init_AffinityNoiseVariance_ItemBiasFeatureW6_isDone&&((!initialise)||this.Changed_ItemCount_numberOfIterationsDecreased_TraitCount_Init_AffinityNoiseVariance_ItemBiasFeatureW6_isInitialised)) {
				return ;
			}
			for(int item = 0; item<this.itemCount; item++) {
				for(int trait = 0; trait<this.traitCount; trait++) {
					this.ItemTraits_F[item][trait] = Gaussian.Uniform();
					this.ItemTraits_uses_F[item][trait][0] = Gaussian.Uniform();
					this.ItemTraits_uses_B[item][trait][0] = Gaussian.Uniform();
					this.ItemTraits_depth0_F[item][trait] = Gaussian.Uniform();
					this.ItemTraits_depth0_uses_F[1][item][trait] = Gaussian.Uniform();
				}
			}
			this.ItemTraits_depth0_uses_F_1__marginal = GetItemsOp<double[]>.MarginalInit<DistributionRefArray<DistributionStructArray<Gaussian,double>,double[]>>(this.ItemTraits_depth0_uses_F[1]);
			for(int item = 0; item<this.itemCount; item++) {
				for(int trait = 0; trait<this.traitCount; trait++) {
					this.ItemTraits_depth0_uses_B[1][item][trait] = Gaussian.Uniform();
					this.ItemTraits_depth0_B[item][trait] = Gaussian.Uniform();
					this.ItemTraits_use_B[item][trait] = Gaussian.Uniform();
					this.itemTraitMean_B[item][trait] = Gaussian.Uniform();
					this.itemTraitMean_F[item][trait] = Gaussian.Uniform();
				}
			}
			this.Changed_ItemCount_numberOfIterationsDecreased_TraitCount_Init_AffinityNoiseVariance_ItemBiasFeatureW6_isDone = true;
			this.Changed_ItemCount_numberOfIterationsDecreased_TraitCount_Init_AffinityNoiseVariance_ItemBiasFeatureW6_isInitialised = true;
		}

		/// <summary>Computations that depend on the observed value of ItemCount and TraitCount</summary>
		private void Changed_ItemCount_TraitCount()
		{
			if (this.Changed_ItemCount_TraitCount_isDone) {
				return ;
			}
			for(int item = 0; item<this.itemCount; item++) {
				this.ItemTraits_F[item] = new DistributionStructArray<Gaussian,double>(this.traitCount);
				this.ItemTraits_uses_F[item] = new Gaussian[this.traitCount][];
				for(int trait = 0; trait<this.traitCount; trait++) {
					this.ItemTraits_uses_F[item][trait] = new Gaussian[2];
				}
				this.ItemTraits_uses_B[item] = new Gaussian[this.traitCount][];
				for(int trait = 0; trait<this.traitCount; trait++) {
					this.ItemTraits_uses_B[item][trait] = new Gaussian[2];
					this.ItemTraits_uses_B[item][trait][1] = Gaussian.Uniform();
				}
			}
			for(int trait = 0; trait<this.traitCount; trait++) {
				this.ItemTraits_index10_index10_0__index10__B[trait] = new Gaussian[this.traitCount];
				this.ItemTraits_trait_index10_0__0__B[trait] = new Gaussian[this.traitCount];
				for(int index10 = 0; index10<this.traitCount; index10++) {
					this.vbool3[trait][index10] = Factor.And(this.itemCount>trait, this.itemCount>index10);
					if (this.vbool3[trait][index10]) {
						if (trait==index10) {
							this.ItemTraits_index10_index10_0__index10__B[trait][index10] = Gaussian.Uniform();
							this.ItemTraits_index10_index10_0__index10__B[trait][index10] = ConstrainEqualOp<double>.AAverageConditional<Gaussian>(1.0, this.ItemTraits_index10_index10_0__index10__B[trait][index10]);
							this.ItemTraits_uses_B[index10][index10][1] = ArrayHelper.SetTo<Gaussian>(this.ItemTraits_uses_B[index10][index10][1], this.ItemTraits_index10_index10_0__index10__B[trait][index10]);
						}
						if (trait!=index10) {
							this.ItemTraits_trait_index10_0__0__B[trait][index10] = Gaussian.Uniform();
							this.ItemTraits_trait_index10_0__0__B[trait][index10] = ConstrainEqualOp<double>.AAverageConditional<Gaussian>(0.0, this.ItemTraits_trait_index10_0__0__B[trait][index10]);
							this.ItemTraits_uses_B[trait][index10][1] = ArrayHelper.SetTo<Gaussian>(this.ItemTraits_uses_B[trait][index10][1], this.ItemTraits_trait_index10_0__0__B[trait][index10]);
						}
					}
				}
			}
			for(int item = 0; item<this.itemCount; item++) {
				this.ItemTraits_use_F[item] = new DistributionStructArray<Gaussian,double>(this.traitCount);
				this.ItemTraits_depth0_F[item] = new DistributionStructArray<Gaussian,double>(this.traitCount);
				this.ItemTraits_depth0_uses_F[1][item] = new DistributionStructArray<Gaussian,double>(this.traitCount);
				this.ItemTraits_depth0_uses_B[0][item] = new DistributionStructArray<Gaussian,double>(this.traitCount);
				for(int trait = 0; trait<this.traitCount; trait++) {
					this.ItemTraits_depth0_uses_B[0][item][trait] = Gaussian.Uniform();
				}
				this.ItemTraits_depth0_uses_B[1][item] = new DistributionStructArray<Gaussian,double>(this.traitCount);
			}
			for(int trait = 0; trait<this.traitCount; trait++) {
				this.ItemTraitFeatureWeights_NonZeroItemFeatureIndices_B[trait] = new DistributionRefArray<DistributionStructArray<Gaussian,double>,double[]>(this.itemCount);
			}
			for(int item = 0; item<this.itemCount; item++) {
				this.ItemTraits_depth0_B[item] = new DistributionStructArray<Gaussian,double>(this.traitCount);
				this.ItemTraits_use_B[item] = new DistributionStructArray<Gaussian,double>(this.traitCount);
				this.itemTraitMean_B[item] = new DistributionStructArray<Gaussian,double>(this.traitCount);
			}
			for(int trait = 0; trait<this.traitCount; trait++) {
				this.ItemTraitFeatureWeights_NonZeroItemFeatureIndices_F[trait] = new DistributionRefArray<DistributionStructArray<Gaussian,double>,double[]>(this.itemCount);
			}
			for(int item = 0; item<this.itemCount; item++) {
				this.nonZeroItemTraitFeatureWeights_B[item] = new DistributionRefArray<DistributionStructArray<Gaussian,double>,double[]>(this.traitCount);
				this.vdouble____11_F[item] = new DistributionRefArray<DistributionStructArray<Gaussian,double>,double[]>(this.traitCount);
				this.itemTraitMean_F[item] = new DistributionStructArray<Gaussian,double>(this.traitCount);
				this.vdouble____11_B[item] = new DistributionRefArray<DistributionStructArray<Gaussian,double>,double[]>(this.traitCount);
				this.ItemTraits_marginal_F[item] = new DistributionStructArray<Gaussian,double>(this.traitCount);
			}
			this.Changed_ItemCount_TraitCount_isDone = true;
		}

		/// <summary>Computations that depend on the observed value of ItemFeatureCount</summary>
		private void Changed_ItemFeatureCount()
		{
			if (this.Changed_ItemFeatureCount_isDone) {
				return ;
			}
			this.ItemBiasFeatureWeights_marginal_F = new DistributionStructArray<Gaussian,double>(this.itemFeatureCount);
			for(int itemFeature = 0; itemFeature<this.itemFeatureCount; itemFeature++) {
				this.ItemBiasFeatureWeights_marginal_F[itemFeature] = Gaussian.Uniform();
			}
			this.ItemBiasFeatureWeights_F = new DistributionStructArray<Gaussian,double>(this.itemFeatureCount);
			this.ItemBiasFeatureWeights_F_reduced = default(Gaussian);
			if (this.itemFeatureCount>0) {
				this.ItemBiasFeatureWeights_F_reduced = Gaussian.Uniform();
			}
			for(int itemFeature = 0; itemFeature<this.itemFeatureCount; itemFeature++) {
				this.ItemBiasFeatureWeights_F[itemFeature] = this.ItemBiasFeatureWeights_F_reduced;
			}
			this.Changed_ItemFeatureCount_isDone = true;
		}

		/// <summary>Computations that depend on the observed value of ItemFeatureCount and ItemTraitFeatureWeightPriorVariance and TraitCount</summary>
		private void Changed_ItemFeatureCount_ItemTraitFeatureWeightPriorVariance_TraitCount()
		{
			if (this.Changed_ItemFeatureCount_ItemTraitFeatureWeightPriorVariance_TraitCount_isDone) {
				return ;
			}
			if (this.traitCount>0) {
				if (this.itemFeatureCount>0) {
					this.ItemTraitFeatureWeights_F_reduced = GaussianFromMeanAndVarianceOp.SampleAverageConditional(0.0, this.itemTraitFeatureWeightPriorVariance);
				}
			}
			for(int trait = 0; trait<this.traitCount; trait++) {
				for(int itemFeature = 0; itemFeature<this.itemFeatureCount; itemFeature++) {
					this.ItemTraitFeatureWeights_F[trait][itemFeature] = this.ItemTraitFeatureWeights_F_reduced;
				}
			}
			this.Changed_ItemFeatureCount_ItemTraitFeatureWeightPriorVariance_TraitCount_isDone = true;
		}

		/// <summary>Computations that depend on the observed value of ItemFeatureCount and numberOfIterationsDecreased and TraitCount and must reset on changes to AffinityNoiseVariance and ItemBiasFeatureWeightPriorVariance and ItemBiasInitializer and ItemBiasMessage and ItemBiasVariance and ItemCount and ItemIds and ItemTraitFeatureWeightPriorVariance and ItemTraitsInitializer and ItemTraitsMessage and ItemTraitVariance and MiddleUserThresholdIndex and NonZeroItemFeatureCounts and NonZeroItemFeatureIndices and NonZeroItemFeatureValues and NonZeroUserFeatureCounts and NonZeroUserFeatureIndices and NonZeroUserFeatureValues and ObservationCount and Ratings and UserBiasFeatureWeightPriorVariance and UserBiasInitializer and UserBiasMessage and UserBiasVariance and UserCount and UserFeatureCount and UserIds and UserThresholdCount and UserThresholdNoiseVariance and UserThresholdPriorMean and UserThresholdPriorVariance and UserThresholdsInitializer and UserThresholdsMessage and UserTraitFeatureWeightPriorVariance and UserTraitsInitializer and UserTraitsMessage and UserTraitVariance and UseSharedUserThresholds</summary>
		/// <param name="initialise">If true, reset messages that initialise loops</param>
		private void Changed_ItemFeatureCount_numberOfIterationsDecreased_TraitCount_Init_AffinityNoiseVariance_ItemBiasF47(bool initialise)
		{
			if (this.Changed_ItemFeatureCount_numberOfIterationsDecreased_TraitCount_Init_AffinityNoiseVariance_ItemBiasF47_isDone&&((!initialise)||this.Changed_ItemFeatureCount_numberOfIterationsDecreased_TraitCount_Init_AffinityNoiseVariance_ItemBiasF47_isInitialised)) {
				return ;
			}
			for(int trait = 0; trait<this.traitCount; trait++) {
				this.ItemTraitFeatureWeights_use_F_trait__marginal[trait] = JaggedSubarrayOp<double>.MarginalInit<DistributionStructArray<Gaussian,double>>(this.ItemTraitFeatureWeights_F[trait]);
			}
			this.Changed_ItemFeatureCount_numberOfIterationsDecreased_TraitCount_Init_AffinityNoiseVariance_ItemBiasF47_isDone = true;
			this.Changed_ItemFeatureCount_numberOfIterationsDecreased_TraitCount_Init_AffinityNoiseVariance_ItemBiasF47_isInitialised = true;
		}

		/// <summary>Computations that depend on the observed value of ItemFeatureCount and TraitCount</summary>
		private void Changed_ItemFeatureCount_TraitCount()
		{
			if (this.Changed_ItemFeatureCount_TraitCount_isDone) {
				return ;
			}
			this.ItemTraitFeatureWeights_F_reduced = default(Gaussian);
			if (this.traitCount>0) {
				if (this.itemFeatureCount>0) {
					this.ItemTraitFeatureWeights_F_reduced = Gaussian.Uniform();
				}
			}
			for(int trait = 0; trait<this.traitCount; trait++) {
				this.ItemTraitFeatureWeights_F[trait] = new DistributionStructArray<Gaussian,double>(this.itemFeatureCount);
				for(int itemFeature = 0; itemFeature<this.itemFeatureCount; itemFeature++) {
					this.ItemTraitFeatureWeights_F[trait][itemFeature] = this.ItemTraitFeatureWeights_F_reduced;
				}
				this.ItemTraitFeatureWeights_marginal_F[trait] = new DistributionStructArray<Gaussian,double>(this.itemFeatureCount);
				this.ItemTraitFeatureWeights_use_B[trait] = new DistributionStructArray<Gaussian,double>(this.itemFeatureCount);
				for(int itemFeature = 0; itemFeature<this.itemFeatureCount; itemFeature++) {
					this.ItemTraitFeatureWeights_use_B[trait][itemFeature] = Gaussian.Uniform();
					this.ItemTraitFeatureWeights_marginal_F[trait][itemFeature] = Gaussian.Uniform();
				}
			}
			this.Changed_ItemFeatureCount_TraitCount_isDone = true;
		}

		/// <summary>Computations that depend on the observed value of MiddleUserThresholdIndex and UserCount and UserThresholdCount and UserThresholdPriorMean and UserThresholdPriorVariance</summary>
		private void Changed_MiddleUserThresholdIndex_UserCount_UserThresholdCount_UserThresholdPriorMean_UserThresholdPr58()
		{
			if (this.Changed_MiddleUserThresholdIndex_UserCount_UserThresholdCount_UserThresholdPriorMean_UserThresholdPr58_isDone) {
				return ;
			}
			for(int userThreshold = 0; userThreshold<this.userThresholdCount; userThreshold++) {
				if (this.userCount>0) {
					this.UserThresholds_F_reduced[userThreshold] = GaussianFromMeanAndVarianceOp.SampleAverageConditional(this.userThresholdPriorMean[userThreshold], this.UserThresholdPriorVarianceForThreshold[userThreshold]);
				}
			}
			this.Changed_MiddleUserThresholdIndex_UserCount_UserThresholdCount_UserThresholdPriorMean_UserThresholdPr58_isDone = true;
		}

		/// <summary>Computations that depend on the observed value of MiddleUserThresholdIndex and UserThresholdCount</summary>
		private void Changed_MiddleUserThresholdIndex_UserThresholdCount()
		{
			if (this.Changed_MiddleUserThresholdIndex_UserThresholdCount_isDone) {
				return ;
			}
			this.UserThresholdPriorVarianceForThreshold = new double[this.userThresholdCount];
			for(int userThreshold = 0; userThreshold<this.userThresholdCount; userThreshold++) {
				if (userThreshold==this.middleUserThresholdIndex) {
					this.UserThresholdPriorVarianceForThreshold[userThreshold] = Clone.Copy<double>(0.0);
				}
			}
			this.Changed_MiddleUserThresholdIndex_UserThresholdCount_isDone = true;
		}

		/// <summary>Computations that depend on the observed value of MiddleUserThresholdIndex and UserThresholdCount and UserThresholdPriorVariance</summary>
		private void Changed_MiddleUserThresholdIndex_UserThresholdCount_UserThresholdPriorVariance()
		{
			if (this.Changed_MiddleUserThresholdIndex_UserThresholdCount_UserThresholdPriorVariance_isDone) {
				return ;
			}
			for(int userThreshold = 0; userThreshold<this.userThresholdCount; userThreshold++) {
				if (userThreshold!=this.middleUserThresholdIndex) {
					this.UserThresholdPriorVarianceForThreshold[userThreshold] = Clone.Copy<double>(this.userThresholdPriorVariance);
				}
			}
			this.Changed_MiddleUserThresholdIndex_UserThresholdCount_UserThresholdPriorVariance_isDone = true;
		}

		/// <summary>Computations that depend on the observed value of NonZeroUserFeatureCounts and NonZeroUserFeatureIndices and numberOfIterationsDecreased and UserBiasFeatureWeightPriorVariance and UserCount and UserFeatureCount and must reset on changes to AffinityNoiseVariance and ItemBiasFeatureWeightPriorVariance and ItemBiasInitializer and ItemBiasMessage and ItemBiasVariance and ItemCount and ItemFeatureCount and ItemIds and ItemTraitFeatureWeightPriorVariance and ItemTraitsInitializer and ItemTraitsMessage and ItemTraitVariance and MiddleUserThresholdIndex and NonZeroItemFeatureCounts and NonZeroItemFeatureIndices and NonZeroItemFeatureValues and NonZeroUserFeatureValues and ObservationCount and Ratings and TraitCount and UserBiasInitializer and UserBiasMessage and UserBiasVariance and UserIds and UserThresholdCount and UserThresholdNoiseVariance and UserThresholdPriorMean and UserThresholdPriorVariance and UserThresholdsInitializer and UserThresholdsMessage and UserTraitFeatureWeightPriorVariance and UserTraitsInitializer and UserTraitsMessage and UserTraitVariance and UseSharedUserThresholds</summary>
		/// <param name="initialise">If true, reset messages that initialise loops</param>
		private void Changed_NonZeroUserFeatureCounts_NonZeroUserFeatureIndices_numberOfIterationsDecreased_UserBiasFeatu45(bool initialise)
		{
			if (this.Changed_NonZeroUserFeatureCounts_NonZeroUserFeatureIndices_numberOfIterationsDecreased_UserBiasFeatu45_isDone&&((!initialise)||this.Changed_NonZeroUserFeatureCounts_NonZeroUserFeatureIndices_numberOfIterationsDecreased_UserBiasFeatu45_isInitialised)) {
				return ;
			}
			this.UserBiasFeatureWeights_marginal_F = JaggedSubarrayWithMarginalOp<double>.MarginalAverageConditional<DistributionStructArray<Gaussian,double>,Gaussian,DistributionStructArray<Gaussian,double>>(this.UserBiasFeatureWeights_F, this.nonZeroUserBiasFeatureWeights_B, this.nonZeroUserFeatureIndices, this.UserBiasFeatureWeights_marginal_F);
			this.Changed_NonZeroUserFeatureCounts_NonZeroUserFeatureIndices_numberOfIterationsDecreased_UserBiasFeatu45_isDone = true;
			this.Changed_NonZeroUserFeatureCounts_NonZeroUserFeatureIndices_numberOfIterationsDecreased_UserBiasFeatu45_isInitialised = true;
		}

		/// <summary>Computations that depend on the observed value of NonZeroUserFeatureCounts and numberOfIterationsDecreased and TraitCount and UserCount and must reset on changes to AffinityNoiseVariance and ItemBiasFeatureWeightPriorVariance and ItemBiasInitializer and ItemBiasMessage and ItemBiasVariance and ItemCount and ItemFeatureCount and ItemIds and ItemTraitFeatureWeightPriorVariance and ItemTraitsInitializer and ItemTraitsMessage and ItemTraitVariance and MiddleUserThresholdIndex and NonZeroItemFeatureCounts and NonZeroItemFeatureIndices and NonZeroItemFeatureValues and NonZeroUserFeatureIndices and NonZeroUserFeatureValues and ObservationCount and Ratings and UserBiasFeatureWeightPriorVariance and UserBiasInitializer and UserBiasMessage and UserBiasVariance and UserFeatureCount and UserIds and UserThresholdCount and UserThresholdNoiseVariance and UserThresholdPriorMean and UserThresholdPriorVariance and UserThresholdsInitializer and UserThresholdsMessage and UserTraitFeatureWeightPriorVariance and UserTraitsInitializer and UserTraitsMessage and UserTraitVariance and UseSharedUserThresholds</summary>
		/// <param name="initialise">If true, reset messages that initialise loops</param>
		private void Changed_NonZeroUserFeatureCounts_numberOfIterationsDecreased_TraitCount_UserCount_Init_AffinityNoise42(bool initialise)
		{
			if (this.Changed_NonZeroUserFeatureCounts_numberOfIterationsDecreased_TraitCount_UserCount_Init_AffinityNoise42_isDone&&((!initialise)||this.Changed_NonZeroUserFeatureCounts_numberOfIterationsDecreased_TraitCount_UserCount_Init_AffinityNoise42_isInitialised)) {
				return ;
			}
			for(int user = 0; user<this.userCount; user++) {
				for(int trait = 0; trait<this.traitCount; trait++) {
					for(int nonZeroUserFeature = 0; nonZeroUserFeature<this.nonZeroUserFeatureCounts[user]; nonZeroUserFeature++) {
						this.UserTraitFeatureWeights_NonZeroUserFeatureIndices_B[trait][user][nonZeroUserFeature] = Gaussian.Uniform();
						this.UserTraitFeatureWeights_NonZeroUserFeatureIndices_F[trait][user][nonZeroUserFeature] = Gaussian.Uniform();
						this.nonZeroUserTraitFeatureWeights_B[user][trait][nonZeroUserFeature] = Gaussian.Uniform();
						this.nonZeroUserTraitFeatureWeightProducts_F[user][trait][nonZeroUserFeature] = Gaussian.Uniform();
						this.nonZeroUserTraitFeatureWeightProducts_B[user][trait][nonZeroUserFeature] = Gaussian.Uniform();
					}
				}
			}
			this.Changed_NonZeroUserFeatureCounts_numberOfIterationsDecreased_TraitCount_UserCount_Init_AffinityNoise42_isDone = true;
			this.Changed_NonZeroUserFeatureCounts_numberOfIterationsDecreased_TraitCount_UserCount_Init_AffinityNoise42_isInitialised = true;
		}

		/// <summary>Computations that depend on the observed value of NonZeroUserFeatureCounts and numberOfIterationsDecreased and UserCount and must reset on changes to AffinityNoiseVariance and ItemBiasFeatureWeightPriorVariance and ItemBiasInitializer and ItemBiasMessage and ItemBiasVariance and ItemCount and ItemFeatureCount and ItemIds and ItemTraitFeatureWeightPriorVariance and ItemTraitsInitializer and ItemTraitsMessage and ItemTraitVariance and MiddleUserThresholdIndex and NonZeroItemFeatureCounts and NonZeroItemFeatureIndices and NonZeroItemFeatureValues and NonZeroUserFeatureIndices and NonZeroUserFeatureValues and ObservationCount and Ratings and TraitCount and UserBiasFeatureWeightPriorVariance and UserBiasInitializer and UserBiasMessage and UserBiasVariance and UserFeatureCount and UserIds and UserThresholdCount and UserThresholdNoiseVariance and UserThresholdPriorMean and UserThresholdPriorVariance and UserThresholdsInitializer and UserThresholdsMessage and UserTraitFeatureWeightPriorVariance and UserTraitsInitializer and UserTraitsMessage and UserTraitVariance and UseSharedUserThresholds</summary>
		/// <param name="initialise">If true, reset messages that initialise loops</param>
		private void Changed_NonZeroUserFeatureCounts_numberOfIterationsDecreased_UserCount_Init_AffinityNoiseVariance_It44(bool initialise)
		{
			if (this.Changed_NonZeroUserFeatureCounts_numberOfIterationsDecreased_UserCount_Init_AffinityNoiseVariance_It44_isDone&&((!initialise)||this.Changed_NonZeroUserFeatureCounts_numberOfIterationsDecreased_UserCount_Init_AffinityNoiseVariance_It44_isInitialised)) {
				return ;
			}
			for(int user = 0; user<this.userCount; user++) {
				for(int nonZeroUserFeature = 0; nonZeroUserFeature<this.nonZeroUserFeatureCounts[user]; nonZeroUserFeature++) {
					this.UserBiasFeatureWeights_NonZeroUserFeatureIndices_F[user][nonZeroUserFeature] = Gaussian.Uniform();
					this.nonZeroUserBiasFeatureWeights_B[user][nonZeroUserFeature] = Gaussian.Uniform();
					this.nonZeroUserBiasFeatureWeightProducts_F[user][nonZeroUserFeature] = Gaussian.Uniform();
					this.nonZeroUserBiasFeatureWeightProducts_B[user][nonZeroUserFeature] = Gaussian.Uniform();
				}
			}
			this.Changed_NonZeroUserFeatureCounts_numberOfIterationsDecreased_UserCount_Init_AffinityNoiseVariance_It44_isDone = true;
			this.Changed_NonZeroUserFeatureCounts_numberOfIterationsDecreased_UserCount_Init_AffinityNoiseVariance_It44_isInitialised = true;
		}

		/// <summary>Computations that depend on the observed value of NonZeroUserFeatureCounts and TraitCount and UserCount</summary>
		private void Changed_NonZeroUserFeatureCounts_TraitCount_UserCount()
		{
			if (this.Changed_NonZeroUserFeatureCounts_TraitCount_UserCount_isDone) {
				return ;
			}
			for(int user = 0; user<this.userCount; user++) {
				for(int trait = 0; trait<this.traitCount; trait++) {
					this.UserTraitFeatureWeights_NonZeroUserFeatureIndices_B[trait][user] = new DistributionStructArray<Gaussian,double>(this.nonZeroUserFeatureCounts[user]);
					this.UserTraitFeatureWeights_NonZeroUserFeatureIndices_F[trait][user] = new DistributionStructArray<Gaussian,double>(this.nonZeroUserFeatureCounts[user]);
					this.nonZeroUserTraitFeatureWeights_B[user][trait] = new DistributionStructArray<Gaussian,double>(this.nonZeroUserFeatureCounts[user]);
					this.nonZeroUserTraitFeatureWeightProducts_F[user][trait] = new DistributionStructArray<Gaussian,double>(this.nonZeroUserFeatureCounts[user]);
					this.nonZeroUserTraitFeatureWeightProducts_B[user][trait] = new DistributionStructArray<Gaussian,double>(this.nonZeroUserFeatureCounts[user]);
				}
			}
			this.Changed_NonZeroUserFeatureCounts_TraitCount_UserCount_isDone = true;
		}

		/// <summary>Computations that depend on the observed value of NonZeroUserFeatureCounts and UserCount</summary>
		private void Changed_NonZeroUserFeatureCounts_UserCount()
		{
			if (this.Changed_NonZeroUserFeatureCounts_UserCount_isDone) {
				return ;
			}
			for(int user = 0; user<this.userCount; user++) {
				this.UserBiasFeatureWeights_NonZeroUserFeatureIndices_F[user] = new DistributionStructArray<Gaussian,double>(this.nonZeroUserFeatureCounts[user]);
				this.nonZeroUserBiasFeatureWeights_B[user] = new DistributionStructArray<Gaussian,double>(this.nonZeroUserFeatureCounts[user]);
				this.nonZeroUserBiasFeatureWeightProducts_F[user] = new DistributionStructArray<Gaussian,double>(this.nonZeroUserFeatureCounts[user]);
				this.nonZeroUserBiasFeatureWeightProducts_B[user] = new DistributionStructArray<Gaussian,double>(this.nonZeroUserFeatureCounts[user]);
			}
			this.Changed_NonZeroUserFeatureCounts_UserCount_isDone = true;
		}

		/// <summary>Computations that depend on the observed value of numberOfIterationsDecreased and ObservationCount and must reset on changes to AffinityNoiseVariance and ItemBiasFeatureWeightPriorVariance and ItemBiasInitializer and ItemBiasMessage and ItemBiasVariance and ItemCount and ItemFeatureCount and ItemIds and ItemTraitFeatureWeightPriorVariance and ItemTraitsInitializer and ItemTraitsMessage and ItemTraitVariance and MiddleUserThresholdIndex and NonZeroItemFeatureCounts and NonZeroItemFeatureIndices and NonZeroItemFeatureValues and NonZeroUserFeatureCounts and NonZeroUserFeatureIndices and NonZeroUserFeatureValues and Ratings and TraitCount and UserBiasFeatureWeightPriorVariance and UserBiasInitializer and UserBiasMessage and UserBiasVariance and UserCount and UserFeatureCount and UserIds and UserThresholdCount and UserThresholdNoiseVariance and UserThresholdPriorMean and UserThresholdPriorVariance and UserThresholdsInitializer and UserThresholdsMessage and UserTraitFeatureWeightPriorVariance and UserTraitsInitializer and UserTraitsMessage and UserTraitVariance and UseSharedUserThresholds</summary>
		/// <param name="initialise">If true, reset messages that initialise loops</param>
		private void Changed_numberOfIterationsDecreased_ObservationCount_Init_AffinityNoiseVariance_ItemBiasFeatureWeigh31(bool initialise)
		{
			if (this.Changed_numberOfIterationsDecreased_ObservationCount_Init_AffinityNoiseVariance_ItemBiasFeatureWeigh31_isDone&&((!initialise)||this.Changed_numberOfIterationsDecreased_ObservationCount_Init_AffinityNoiseVariance_ItemBiasFeatureWeigh31_isInitialised)) {
				return ;
			}
			for(int observation = 0; observation<this.observationCount; observation++) {
				this.UserBias_itemUserIds_observation__F[observation] = Gaussian.Uniform();
				this.userBiasObs_B[observation] = Gaussian.Uniform();
				this.vdouble109_F[observation] = Gaussian.Uniform();
				this.ItemBias_itemItemIds_observation__F[observation] = Gaussian.Uniform();
				this.itemBiasObs_B[observation] = Gaussian.Uniform();
				this.vdouble111_F[observation] = Gaussian.Uniform();
				this.vdouble112_F[observation] = Gaussian.Uniform();
				this.vdouble113_F[observation] = Gaussian.Uniform();
				this.vdouble114_F[observation] = Gaussian.Uniform();
				this.vdouble115_F[observation] = Gaussian.Uniform();
				this.true_logZ[observation] = default(double);
				this.vdouble115_use_B[observation] = Gaussian.Uniform();
				this.vdouble114_B[observation] = Gaussian.Uniform();
				this.vdouble113_B[observation] = Gaussian.Uniform();
				this.vdouble112_B[observation] = Gaussian.Uniform();
				this.vdouble109_B[observation] = Gaussian.Uniform();
				this.vdouble111_B[observation] = Gaussian.Uniform();
			}
			this.Changed_numberOfIterationsDecreased_ObservationCount_Init_AffinityNoiseVariance_ItemBiasFeatureWeigh31_isDone = true;
			this.Changed_numberOfIterationsDecreased_ObservationCount_Init_AffinityNoiseVariance_ItemBiasFeatureWeigh31_isInitialised = true;
		}

		/// <summary>Computations that depend on the observed value of numberOfIterationsDecreased and ObservationCount and Ratings and UserThresholdCount and must reset on changes to AffinityNoiseVariance and ItemBiasFeatureWeightPriorVariance and ItemBiasInitializer and ItemBiasMessage and ItemBiasVariance and ItemCount and ItemFeatureCount and ItemIds and ItemTraitFeatureWeightPriorVariance and ItemTraitsInitializer and ItemTraitsMessage and ItemTraitVariance and MiddleUserThresholdIndex and NonZeroItemFeatureCounts and NonZeroItemFeatureIndices and NonZeroItemFeatureValues and NonZeroUserFeatureCounts and NonZeroUserFeatureIndices and NonZeroUserFeatureValues and TraitCount and UserBiasFeatureWeightPriorVariance and UserBiasInitializer and UserBiasMessage and UserBiasVariance and UserCount and UserFeatureCount and UserIds and UserThresholdNoiseVariance and UserThresholdPriorMean and UserThresholdPriorVariance and UserThresholdsInitializer and UserThresholdsMessage and UserTraitFeatureWeightPriorVariance and UserTraitsInitializer and UserTraitsMessage and UserTraitVariance and UseSharedUserThresholds</summary>
		/// <param name="initialise">If true, reset messages that initialise loops</param>
		private void Changed_numberOfIterationsDecreased_ObservationCount_Ratings_UserThresholdCount_Init_AffinityNoiseVa38(bool initialise)
		{
			if (this.Changed_numberOfIterationsDecreased_ObservationCount_Ratings_UserThresholdCount_Init_AffinityNoiseVa38_isDone&&((!initialise)||this.Changed_numberOfIterationsDecreased_ObservationCount_Ratings_UserThresholdCount_Init_AffinityNoiseVa38_isInitialised)) {
				return ;
			}
			for(int observation = 0; observation<this.observationCount; observation++) {
				for(int userThreshold = 0; userThreshold<this.userThresholdCount; userThreshold++) {
					this.NoisyUserThresholds_use_B[observation][userThreshold] = Gaussian.Uniform();
				}
			}
			this.Changed_numberOfIterationsDecreased_ObservationCount_Ratings_UserThresholdCount_Init_AffinityNoiseVa38_isDone = true;
			this.Changed_numberOfIterationsDecreased_ObservationCount_Ratings_UserThresholdCount_Init_AffinityNoiseVa38_isInitialised = true;
		}

		/// <summary>Computations that depend on the observed value of numberOfIterationsDecreased and ObservationCount and TraitCount and must reset on changes to AffinityNoiseVariance and ItemBiasFeatureWeightPriorVariance and ItemBiasInitializer and ItemBiasMessage and ItemBiasVariance and ItemCount and ItemFeatureCount and ItemIds and ItemTraitFeatureWeightPriorVariance and ItemTraitsInitializer and ItemTraitsMessage and ItemTraitVariance and MiddleUserThresholdIndex and NonZeroItemFeatureCounts and NonZeroItemFeatureIndices and NonZeroItemFeatureValues and NonZeroUserFeatureCounts and NonZeroUserFeatureIndices and NonZeroUserFeatureValues and Ratings and UserBiasFeatureWeightPriorVariance and UserBiasInitializer and UserBiasMessage and UserBiasVariance and UserCount and UserFeatureCount and UserIds and UserThresholdCount and UserThresholdNoiseVariance and UserThresholdPriorMean and UserThresholdPriorVariance and UserThresholdsInitializer and UserThresholdsMessage and UserTraitFeatureWeightPriorVariance and UserTraitsInitializer and UserTraitsMessage and UserTraitVariance and UseSharedUserThresholds</summary>
		/// <param name="initialise">If true, reset messages that initialise loops</param>
		private void Changed_numberOfIterationsDecreased_ObservationCount_TraitCount_Init_AffinityNoiseVariance_ItemBiasF30(bool initialise)
		{
			if (this.Changed_numberOfIterationsDecreased_ObservationCount_TraitCount_Init_AffinityNoiseVariance_ItemBiasF30_isDone&&((!initialise)||this.Changed_numberOfIterationsDecreased_ObservationCount_TraitCount_Init_AffinityNoiseVariance_ItemBiasF30_isInitialised)) {
				return ;
			}
			for(int observation = 0; observation<this.observationCount; observation++) {
				for(int trait = 0; trait<this.traitCount; trait++) {
					this.ItemTraits_itemItemIds_observation__F[observation][trait] = Gaussian.Uniform();
					this.itemTrait_B[observation][trait] = Gaussian.Uniform();
					this.UserTraits_itemUserIds_observation__F[observation][trait] = Gaussian.Uniform();
					this.userTrait_B[observation][trait] = Gaussian.Uniform();
					this.vdouble__51_F[observation][trait] = Gaussian.Uniform();
					this.vdouble__51_B[observation][trait] = Gaussian.Uniform();
				}
			}
			this.userTrait_B_new = ArrayHelper.CopyStorage<DistributionStructArray<Gaussian,double>[]>(this.userTrait_B);
			this.Changed_numberOfIterationsDecreased_ObservationCount_TraitCount_Init_AffinityNoiseVariance_ItemBiasF30_isDone = true;
			this.Changed_numberOfIterationsDecreased_ObservationCount_TraitCount_Init_AffinityNoiseVariance_ItemBiasF30_isInitialised = true;
		}

		/// <summary>Computations that depend on the observed value of numberOfIterationsDecreased and ObservationCount and UserThresholdCount and must reset on changes to AffinityNoiseVariance and ItemBiasFeatureWeightPriorVariance and ItemBiasInitializer and ItemBiasMessage and ItemBiasVariance and ItemCount and ItemFeatureCount and ItemIds and ItemTraitFeatureWeightPriorVariance and ItemTraitsInitializer and ItemTraitsMessage and ItemTraitVariance and MiddleUserThresholdIndex and NonZeroItemFeatureCounts and NonZeroItemFeatureIndices and NonZeroItemFeatureValues and NonZeroUserFeatureCounts and NonZeroUserFeatureIndices and NonZeroUserFeatureValues and Ratings and TraitCount and UserBiasFeatureWeightPriorVariance and UserBiasInitializer and UserBiasMessage and UserBiasVariance and UserCount and UserFeatureCount and UserIds and UserThresholdNoiseVariance and UserThresholdPriorMean and UserThresholdPriorVariance and UserThresholdsInitializer and UserThresholdsMessage and UserTraitFeatureWeightPriorVariance and UserTraitsInitializer and UserTraitsMessage and UserTraitVariance and UseSharedUserThresholds</summary>
		/// <param name="initialise">If true, reset messages that initialise loops</param>
		private void Changed_numberOfIterationsDecreased_ObservationCount_UserThresholdCount_Init_AffinityNoiseVariance_I35(bool initialise)
		{
			if (this.Changed_numberOfIterationsDecreased_ObservationCount_UserThresholdCount_Init_AffinityNoiseVariance_I35_isDone&&((!initialise)||this.Changed_numberOfIterationsDecreased_ObservationCount_UserThresholdCount_Init_AffinityNoiseVariance_I35_isInitialised)) {
				return ;
			}
			for(int observation = 0; observation<this.observationCount; observation++) {
				for(int userThreshold = 0; userThreshold<this.userThresholdCount; userThreshold++) {
					this.UserThresholdsObs_B[observation][userThreshold] = Gaussian.Uniform();
					this.vdouble__61_F[observation][userThreshold] = Gaussian.Uniform();
					this.NoisyUserThresholds_F[observation][userThreshold] = Gaussian.Uniform();
					this.vdouble__61_B[observation][userThreshold] = Gaussian.Uniform();
				}
			}
			this.Changed_numberOfIterationsDecreased_ObservationCount_UserThresholdCount_Init_AffinityNoiseVariance_I35_isDone = true;
			this.Changed_numberOfIterationsDecreased_ObservationCount_UserThresholdCount_Init_AffinityNoiseVariance_I35_isInitialised = true;
		}

		/// <summary>Computations that depend on the observed value of numberOfIterationsDecreased and ObservationCount and UserThresholdCount and UseSharedUserThresholds and must reset on changes to AffinityNoiseVariance and ItemBiasFeatureWeightPriorVariance and ItemBiasInitializer and ItemBiasMessage and ItemBiasVariance and ItemCount and ItemFeatureCount and ItemIds and ItemTraitFeatureWeightPriorVariance and ItemTraitsInitializer and ItemTraitsMessage and ItemTraitVariance and MiddleUserThresholdIndex and NonZeroItemFeatureCounts and NonZeroItemFeatureIndices and NonZeroItemFeatureValues and NonZeroUserFeatureCounts and NonZeroUserFeatureIndices and NonZeroUserFeatureValues and Ratings and TraitCount and UserBiasFeatureWeightPriorVariance and UserBiasInitializer and UserBiasMessage and UserBiasVariance and UserCount and UserFeatureCount and UserIds and UserThresholdNoiseVariance and UserThresholdPriorMean and UserThresholdPriorVariance and UserThresholdsInitializer and UserThresholdsMessage and UserTraitFeatureWeightPriorVariance and UserTraitsInitializer and UserTraitsMessage and UserTraitVariance</summary>
		/// <param name="initialise">If true, reset messages that initialise loops</param>
		private void Changed_numberOfIterationsDecreased_ObservationCount_UserThresholdCount_UseSharedUserThresholds_Init33(bool initialise)
		{
			if (this.Changed_numberOfIterationsDecreased_ObservationCount_UserThresholdCount_UseSharedUserThresholds_Init33_isDone&&((!initialise)||this.Changed_numberOfIterationsDecreased_ObservationCount_UserThresholdCount_UseSharedUserThresholds_Init33_isInitialised)) {
				return ;
			}
			for(int observation = 0; observation<this.observationCount; observation++) {
				for(int userThreshold = 0; userThreshold<this.userThresholdCount; userThreshold++) {
					if (this.useSharedUserThresholds) {
						this.UserThresholds_rep_F[userThreshold][observation] = Gaussian.Uniform();
					}
					this.UserThresholdsObs_F[observation][userThreshold] = Gaussian.Uniform();
					if (!this.useSharedUserThresholds) {
						if (!this.useSharedUserThresholds) {
							this.UserThresholds_itemUserIds_observation__F[observation][userThreshold] = Gaussian.Uniform();
						}
					}
					if (this.useSharedUserThresholds) {
						this.UserThresholds_rep_B[userThreshold][observation] = Gaussian.Uniform();
					}
				}
			}
			this.Changed_numberOfIterationsDecreased_ObservationCount_UserThresholdCount_UseSharedUserThresholds_Init33_isDone = true;
			this.Changed_numberOfIterationsDecreased_ObservationCount_UserThresholdCount_UseSharedUserThresholds_Init33_isInitialised = true;
		}

		/// <summary>Computations that depend on the observed value of numberOfIterationsDecreased and TraitCount and UserCount and must reset on changes to AffinityNoiseVariance and ItemBiasFeatureWeightPriorVariance and ItemBiasInitializer and ItemBiasMessage and ItemBiasVariance and ItemCount and ItemFeatureCount and ItemIds and ItemTraitFeatureWeightPriorVariance and ItemTraitsInitializer and ItemTraitsMessage and ItemTraitVariance and MiddleUserThresholdIndex and NonZeroItemFeatureCounts and NonZeroItemFeatureIndices and NonZeroItemFeatureValues and NonZeroUserFeatureCounts and NonZeroUserFeatureIndices and NonZeroUserFeatureValues and ObservationCount and Ratings and UserBiasFeatureWeightPriorVariance and UserBiasInitializer and UserBiasMessage and UserBiasVariance and UserFeatureCount and UserIds and UserThresholdCount and UserThresholdNoiseVariance and UserThresholdPriorMean and UserThresholdPriorVariance and UserThresholdsInitializer and UserThresholdsMessage and UserTraitFeatureWeightPriorVariance and UserTraitsInitializer and UserTraitsMessage and UserTraitVariance and UseSharedUserThresholds</summary>
		/// <param name="initialise">If true, reset messages that initialise loops</param>
		private void Changed_numberOfIterationsDecreased_TraitCount_UserCount_Init_AffinityNoiseVariance_ItemBiasFeatureW3(bool initialise)
		{
			if (this.Changed_numberOfIterationsDecreased_TraitCount_UserCount_Init_AffinityNoiseVariance_ItemBiasFeatureW3_isDone&&((!initialise)||this.Changed_numberOfIterationsDecreased_TraitCount_UserCount_Init_AffinityNoiseVariance_ItemBiasFeatureW3_isInitialised)) {
				return ;
			}
			for(int user = 0; user<this.userCount; user++) {
				for(int trait = 0; trait<this.traitCount; trait++) {
					this.UserTraits_F[user][trait] = Gaussian.Uniform();
					this.UserTraits_uses_F[1][user][trait] = Gaussian.Uniform();
				}
			}
			this.UserTraits_uses_F_1__marginal = GetItemsOp<double[]>.MarginalInit<DistributionRefArray<DistributionStructArray<Gaussian,double>,double[]>>(this.UserTraits_uses_F[1]);
			for(int user = 0; user<this.userCount; user++) {
				for(int trait = 0; trait<this.traitCount; trait++) {
					this.UserTraits_uses_B[1][user][trait] = Gaussian.Uniform();
					this.UserTraits_use_B[user][trait] = Gaussian.Uniform();
					this.userTraitMean_B[user][trait] = Gaussian.Uniform();
					this.userTraitMean_F[user][trait] = Gaussian.Uniform();
				}
			}
			this.Changed_numberOfIterationsDecreased_TraitCount_UserCount_Init_AffinityNoiseVariance_ItemBiasFeatureW3_isDone = true;
			this.Changed_numberOfIterationsDecreased_TraitCount_UserCount_Init_AffinityNoiseVariance_ItemBiasFeatureW3_isInitialised = true;
		}

		/// <summary>Computations that depend on the observed value of numberOfIterationsDecreased and TraitCount and UserCount and UserTraitsInitializer and must reset on changes to AffinityNoiseVariance and ItemBiasFeatureWeightPriorVariance and ItemBiasInitializer and ItemBiasMessage and ItemBiasVariance and ItemCount and ItemFeatureCount and ItemIds and ItemTraitFeatureWeightPriorVariance and ItemTraitsInitializer and ItemTraitsMessage and ItemTraitVariance and MiddleUserThresholdIndex and NonZeroItemFeatureCounts and NonZeroItemFeatureIndices and NonZeroItemFeatureValues and NonZeroUserFeatureCounts and NonZeroUserFeatureIndices and NonZeroUserFeatureValues and ObservationCount and Ratings and UserBiasFeatureWeightPriorVariance and UserBiasInitializer and UserBiasMessage and UserBiasVariance and UserFeatureCount and UserIds and UserThresholdCount and UserThresholdNoiseVariance and UserThresholdPriorMean and UserThresholdPriorVariance and UserThresholdsInitializer and UserThresholdsMessage and UserTraitFeatureWeightPriorVariance and UserTraitsMessage and UserTraitVariance and UseSharedUserThresholds</summary>
		/// <param name="initialise">If true, reset messages that initialise loops</param>
		private void Changed_numberOfIterationsDecreased_TraitCount_UserCount_UserTraitsInitializer_Init_AffinityNoiseVar27(bool initialise)
		{
			if (this.Changed_numberOfIterationsDecreased_TraitCount_UserCount_UserTraitsInitializer_Init_AffinityNoiseVar27_isDone&&((!initialise)||this.Changed_numberOfIterationsDecreased_TraitCount_UserCount_UserTraitsInitializer_Init_AffinityNoiseVar27_isInitialised)) {
				return ;
			}
			for(int user = 0; user<this.userCount; user++) {
				for(int trait = 0; trait<this.traitCount; trait++) {
					this.UserTraits_use_F[user][trait] = ArrayHelper.MakeCopy<Gaussian>(this.userTraitsInitializer[user][trait]);
				}
			}
			this.Changed_numberOfIterationsDecreased_TraitCount_UserCount_UserTraitsInitializer_Init_AffinityNoiseVar27_isDone = true;
			this.Changed_numberOfIterationsDecreased_TraitCount_UserCount_UserTraitsInitializer_Init_AffinityNoiseVar27_isInitialised = true;
		}

		/// <summary>Computations that depend on the observed value of numberOfIterationsDecreased and TraitCount and UserFeatureCount and must reset on changes to AffinityNoiseVariance and ItemBiasFeatureWeightPriorVariance and ItemBiasInitializer and ItemBiasMessage and ItemBiasVariance and ItemCount and ItemFeatureCount and ItemIds and ItemTraitFeatureWeightPriorVariance and ItemTraitsInitializer and ItemTraitsMessage and ItemTraitVariance and MiddleUserThresholdIndex and NonZeroItemFeatureCounts and NonZeroItemFeatureIndices and NonZeroItemFeatureValues and NonZeroUserFeatureCounts and NonZeroUserFeatureIndices and NonZeroUserFeatureValues and ObservationCount and Ratings and UserBiasFeatureWeightPriorVariance and UserBiasInitializer and UserBiasMessage and UserBiasVariance and UserCount and UserIds and UserThresholdCount and UserThresholdNoiseVariance and UserThresholdPriorMean and UserThresholdPriorVariance and UserThresholdsInitializer and UserThresholdsMessage and UserTraitFeatureWeightPriorVariance and UserTraitsInitializer and UserTraitsMessage and UserTraitVariance and UseSharedUserThresholds</summary>
		/// <param name="initialise">If true, reset messages that initialise loops</param>
		private void Changed_numberOfIterationsDecreased_TraitCount_UserFeatureCount_Init_AffinityNoiseVariance_ItemBiasF39(bool initialise)
		{
			if (this.Changed_numberOfIterationsDecreased_TraitCount_UserFeatureCount_Init_AffinityNoiseVariance_ItemBiasF39_isDone&&((!initialise)||this.Changed_numberOfIterationsDecreased_TraitCount_UserFeatureCount_Init_AffinityNoiseVariance_ItemBiasF39_isInitialised)) {
				return ;
			}
			for(int trait = 0; trait<this.traitCount; trait++) {
				this.UserTraitFeatureWeights_use_F_trait__marginal[trait] = JaggedSubarrayOp<double>.MarginalInit<DistributionStructArray<Gaussian,double>>(this.UserTraitFeatureWeights_F[trait]);
			}
			this.Changed_numberOfIterationsDecreased_TraitCount_UserFeatureCount_Init_AffinityNoiseVariance_ItemBiasF39_isDone = true;
			this.Changed_numberOfIterationsDecreased_TraitCount_UserFeatureCount_Init_AffinityNoiseVariance_ItemBiasF39_isInitialised = true;
		}

		/// <summary>Computations that depend on the observed value of numberOfIterationsDecreased and UserBiasInitializer and UserCount and must reset on changes to AffinityNoiseVariance and ItemBiasFeatureWeightPriorVariance and ItemBiasInitializer and ItemBiasMessage and ItemBiasVariance and ItemCount and ItemFeatureCount and ItemIds and ItemTraitFeatureWeightPriorVariance and ItemTraitsInitializer and ItemTraitsMessage and ItemTraitVariance and MiddleUserThresholdIndex and NonZeroItemFeatureCounts and NonZeroItemFeatureIndices and NonZeroItemFeatureValues and NonZeroUserFeatureCounts and NonZeroUserFeatureIndices and NonZeroUserFeatureValues and ObservationCount and Ratings and TraitCount and UserBiasFeatureWeightPriorVariance and UserBiasMessage and UserBiasVariance and UserFeatureCount and UserIds and UserThresholdCount and UserThresholdNoiseVariance and UserThresholdPriorMean and UserThresholdPriorVariance and UserThresholdsInitializer and UserThresholdsMessage and UserTraitFeatureWeightPriorVariance and UserTraitsInitializer and UserTraitsMessage and UserTraitVariance and UseSharedUserThresholds</summary>
		/// <param name="initialise">If true, reset messages that initialise loops</param>
		private void Changed_numberOfIterationsDecreased_UserBiasInitializer_UserCount_Init_AffinityNoiseVariance_ItemBia17(bool initialise)
		{
			if (this.Changed_numberOfIterationsDecreased_UserBiasInitializer_UserCount_Init_AffinityNoiseVariance_ItemBia17_isDone&&((!initialise)||this.Changed_numberOfIterationsDecreased_UserBiasInitializer_UserCount_Init_AffinityNoiseVariance_ItemBia17_isInitialised)) {
				return ;
			}
			for(int user = 0; user<this.userCount; user++) {
				this.UserBias_use_F[user] = ArrayHelper.MakeCopy<Gaussian>(this.userBiasInitializer[user]);
			}
			this.Changed_numberOfIterationsDecreased_UserBiasInitializer_UserCount_Init_AffinityNoiseVariance_ItemBia17_isDone = true;
			this.Changed_numberOfIterationsDecreased_UserBiasInitializer_UserCount_Init_AffinityNoiseVariance_ItemBia17_isInitialised = true;
		}

		/// <summary>Computations that depend on the observed value of numberOfIterationsDecreased and UserCount and must reset on changes to AffinityNoiseVariance and ItemBiasFeatureWeightPriorVariance and ItemBiasInitializer and ItemBiasMessage and ItemBiasVariance and ItemCount and ItemFeatureCount and ItemIds and ItemTraitFeatureWeightPriorVariance and ItemTraitsInitializer and ItemTraitsMessage and ItemTraitVariance and MiddleUserThresholdIndex and NonZeroItemFeatureCounts and NonZeroItemFeatureIndices and NonZeroItemFeatureValues and NonZeroUserFeatureCounts and NonZeroUserFeatureIndices and NonZeroUserFeatureValues and ObservationCount and Ratings and TraitCount and UserBiasFeatureWeightPriorVariance and UserBiasInitializer and UserBiasMessage and UserBiasVariance and UserFeatureCount and UserIds and UserThresholdCount and UserThresholdNoiseVariance and UserThresholdPriorMean and UserThresholdPriorVariance and UserThresholdsInitializer and UserThresholdsMessage and UserTraitFeatureWeightPriorVariance and UserTraitsInitializer and UserTraitsMessage and UserTraitVariance and UseSharedUserThresholds</summary>
		/// <param name="initialise">If true, reset messages that initialise loops</param>
		private void Changed_numberOfIterationsDecreased_UserCount_Init_AffinityNoiseVariance_ItemBiasFeatureWeightPriorV7(bool initialise)
		{
			if (this.Changed_numberOfIterationsDecreased_UserCount_Init_AffinityNoiseVariance_ItemBiasFeatureWeightPriorV7_isDone&&((!initialise)||this.Changed_numberOfIterationsDecreased_UserCount_Init_AffinityNoiseVariance_ItemBiasFeatureWeightPriorV7_isInitialised)) {
				return ;
			}
			for(int user = 0; user<this.userCount; user++) {
				this.UserBias_F[user] = Gaussian.Uniform();
				this.UserBias_uses_F[1][user] = Gaussian.Uniform();
			}
			this.UserBias_uses_F_1__marginal = GetItemsOp<double>.MarginalInit<DistributionStructArray<Gaussian,double>>(this.UserBias_uses_F[1]);
			for(int user = 0; user<this.userCount; user++) {
				this.UserBias_uses_B[1][user] = Gaussian.Uniform();
				this.UserBias_use_B[user] = Gaussian.Uniform();
				this.userBiasMean_B[user] = Gaussian.Uniform();
				this.userBiasMean_F[user] = Gaussian.Uniform();
			}
			this.Changed_numberOfIterationsDecreased_UserCount_Init_AffinityNoiseVariance_ItemBiasFeatureWeightPriorV7_isDone = true;
			this.Changed_numberOfIterationsDecreased_UserCount_Init_AffinityNoiseVariance_ItemBiasFeatureWeightPriorV7_isInitialised = true;
		}

		/// <summary>Computations that depend on the observed value of numberOfIterationsDecreased and UserCount and UserThresholdCount and must reset on changes to AffinityNoiseVariance and ItemBiasFeatureWeightPriorVariance and ItemBiasInitializer and ItemBiasMessage and ItemBiasVariance and ItemCount and ItemFeatureCount and ItemIds and ItemTraitFeatureWeightPriorVariance and ItemTraitsInitializer and ItemTraitsMessage and ItemTraitVariance and MiddleUserThresholdIndex and NonZeroItemFeatureCounts and NonZeroItemFeatureIndices and NonZeroItemFeatureValues and NonZeroUserFeatureCounts and NonZeroUserFeatureIndices and NonZeroUserFeatureValues and ObservationCount and Ratings and TraitCount and UserBiasFeatureWeightPriorVariance and UserBiasInitializer and UserBiasMessage and UserBiasVariance and UserFeatureCount and UserIds and UserThresholdNoiseVariance and UserThresholdPriorMean and UserThresholdPriorVariance and UserThresholdsInitializer and UserThresholdsMessage and UserTraitFeatureWeightPriorVariance and UserTraitsInitializer and UserTraitsMessage and UserTraitVariance and UseSharedUserThresholds</summary>
		/// <param name="initialise">If true, reset messages that initialise loops</param>
		private void Changed_numberOfIterationsDecreased_UserCount_UserThresholdCount_Init_AffinityNoiseVariance_ItemBias20(bool initialise)
		{
			if (this.Changed_numberOfIterationsDecreased_UserCount_UserThresholdCount_Init_AffinityNoiseVariance_ItemBias20_isDone&&((!initialise)||this.Changed_numberOfIterationsDecreased_UserCount_UserThresholdCount_Init_AffinityNoiseVariance_ItemBias20_isInitialised)) {
				return ;
			}
			for(int user = 0; user<this.userCount; user++) {
				for(int userThreshold = 0; userThreshold<this.userThresholdCount; userThreshold++) {
					this.UserThresholds_depth0_B[user][userThreshold] = Gaussian.Uniform();
					this.UserThresholds_uses_B[user][userThreshold][0] = Gaussian.Uniform();
					this.UserThresholds_uses_F[user][userThreshold][1] = Gaussian.Uniform();
					this.UserThresholds_uses_F[user][userThreshold][0] = Gaussian.Uniform();
					this.UserThresholds_depth0_F[user][userThreshold] = Gaussian.Uniform();
					this.UserThresholds_depth0_uses_F[1][user][userThreshold] = Gaussian.Uniform();
				}
			}
			this.Changed_numberOfIterationsDecreased_UserCount_UserThresholdCount_Init_AffinityNoiseVariance_ItemBias20_isDone = true;
			this.Changed_numberOfIterationsDecreased_UserCount_UserThresholdCount_Init_AffinityNoiseVariance_ItemBias20_isInitialised = true;
		}

		/// <summary>Computations that depend on the observed value of numberOfIterationsDecreased and UserCount and UserThresholdCount and UserThresholdsInitializer and must reset on changes to AffinityNoiseVariance and ItemBiasFeatureWeightPriorVariance and ItemBiasInitializer and ItemBiasMessage and ItemBiasVariance and ItemCount and ItemFeatureCount and ItemIds and ItemTraitFeatureWeightPriorVariance and ItemTraitsInitializer and ItemTraitsMessage and ItemTraitVariance and MiddleUserThresholdIndex and NonZeroItemFeatureCounts and NonZeroItemFeatureIndices and NonZeroItemFeatureValues and NonZeroUserFeatureCounts and NonZeroUserFeatureIndices and NonZeroUserFeatureValues and ObservationCount and Ratings and TraitCount and UserBiasFeatureWeightPriorVariance and UserBiasInitializer and UserBiasMessage and UserBiasVariance and UserFeatureCount and UserIds and UserThresholdNoiseVariance and UserThresholdPriorMean and UserThresholdPriorVariance and UserThresholdsMessage and UserTraitFeatureWeightPriorVariance and UserTraitsInitializer and UserTraitsMessage and UserTraitVariance and UseSharedUserThresholds</summary>
		/// <param name="initialise">If true, reset messages that initialise loops</param>
		private void Changed_numberOfIterationsDecreased_UserCount_UserThresholdCount_UserThresholdsInitializer_Init_Affi23(bool initialise)
		{
			if (this.Changed_numberOfIterationsDecreased_UserCount_UserThresholdCount_UserThresholdsInitializer_Init_Affi23_isDone&&((!initialise)||this.Changed_numberOfIterationsDecreased_UserCount_UserThresholdCount_UserThresholdsInitializer_Init_Affi23_isInitialised)) {
				return ;
			}
			for(int user = 0; user<this.userCount; user++) {
				for(int userThreshold = 0; userThreshold<this.userThresholdCount; userThreshold++) {
					this.UserThresholds_use_F[user][userThreshold] = ArrayHelper.MakeCopy<Gaussian>(this.userThresholdsInitializer[user][userThreshold]);
				}
			}
			this.Changed_numberOfIterationsDecreased_UserCount_UserThresholdCount_UserThresholdsInitializer_Init_Affi23_isDone = true;
			this.Changed_numberOfIterationsDecreased_UserCount_UserThresholdCount_UserThresholdsInitializer_Init_Affi23_isInitialised = true;
		}

		/// <summary>Computations that depend on the observed value of numberOfIterationsDecreased and UserCount and UserThresholdCount and UseSharedUserThresholds and must reset on changes to AffinityNoiseVariance and ItemBiasFeatureWeightPriorVariance and ItemBiasInitializer and ItemBiasMessage and ItemBiasVariance and ItemCount and ItemFeatureCount and ItemIds and ItemTraitFeatureWeightPriorVariance and ItemTraitsInitializer and ItemTraitsMessage and ItemTraitVariance and MiddleUserThresholdIndex and NonZeroItemFeatureCounts and NonZeroItemFeatureIndices and NonZeroItemFeatureValues and NonZeroUserFeatureCounts and NonZeroUserFeatureIndices and NonZeroUserFeatureValues and ObservationCount and Ratings and TraitCount and UserBiasFeatureWeightPriorVariance and UserBiasInitializer and UserBiasMessage and UserBiasVariance and UserFeatureCount and UserIds and UserThresholdNoiseVariance and UserThresholdPriorMean and UserThresholdPriorVariance and UserThresholdsInitializer and UserThresholdsMessage and UserTraitFeatureWeightPriorVariance and UserTraitsInitializer and UserTraitsMessage and UserTraitVariance</summary>
		/// <param name="initialise">If true, reset messages that initialise loops</param>
		private void Changed_numberOfIterationsDecreased_UserCount_UserThresholdCount_UseSharedUserThresholds_Init_Affini21(bool initialise)
		{
			if (this.Changed_numberOfIterationsDecreased_UserCount_UserThresholdCount_UseSharedUserThresholds_Init_Affini21_isDone&&((!initialise)||this.Changed_numberOfIterationsDecreased_UserCount_UserThresholdCount_UseSharedUserThresholds_Init_Affini21_isInitialised)) {
				return ;
			}
			for(int user = 0; user<this.userCount; user++) {
				for(int userThreshold = 0; userThreshold<this.userThresholdCount; userThreshold++) {
					this.UserThresholds_depth0_uses_B[1][user][userThreshold] = Gaussian.Uniform();
					this.UserThresholds_uses_B[user][userThreshold][1] = Gaussian.Uniform();
				}
			}
			for(int userThreshold = 0; userThreshold<this.userThresholdCount; userThreshold++) {
				if (this.useSharedUserThresholds) {
					this.UserThresholds_rep_F_marginal[userThreshold] = ReplicateOp_Divide.MarginalInit<Gaussian>(this.UserThresholds_uses_F[0][userThreshold][1]);
					this.UserThresholds_rep_B_toDef[userThreshold] = ReplicateOp_Divide.ToDefInit<Gaussian>(this.UserThresholds_uses_F[0][userThreshold][1]);
				}
			}
			if (!this.useSharedUserThresholds) {
				if (!this.useSharedUserThresholds) {
					this.UserThresholds_depth0_uses_F_1__marginal = GetItemsOp<double[]>.MarginalInit<DistributionRefArray<DistributionStructArray<Gaussian,double>,double[]>>(this.UserThresholds_depth0_uses_F[1]);
				}
			}
			this.Changed_numberOfIterationsDecreased_UserCount_UserThresholdCount_UseSharedUserThresholds_Init_Affini21_isDone = true;
			this.Changed_numberOfIterationsDecreased_UserCount_UserThresholdCount_UseSharedUserThresholds_Init_Affini21_isInitialised = true;
		}

		/// <summary>Computations that depend on the observed value of ObservationCount</summary>
		private void Changed_ObservationCount()
		{
			if (this.Changed_ObservationCount_isDone) {
				return ;
			}
			this.ItemTraits_itemItemIds_observation__F = new DistributionRefArray<DistributionStructArray<Gaussian,double>,double[]>(this.observationCount);
			this.itemTrait_B = new DistributionStructArray<Gaussian,double>[this.observationCount];
			this.UserBias_itemUserIds_observation__F = new DistributionStructArray<Gaussian,double>(this.observationCount);
			this.userBiasObs_B = new Gaussian[this.observationCount];
			this.vdouble109_F = new Gaussian[this.observationCount];
			this.ItemBias_itemItemIds_observation__F = new DistributionStructArray<Gaussian,double>(this.observationCount);
			this.itemBiasObs_B = new Gaussian[this.observationCount];
			this.vdouble111_F = new Gaussian[this.observationCount];
			this.vdouble112_F = new Gaussian[this.observationCount];
			this.UserThresholdsObs_B = new DistributionStructArray<Gaussian,double>[this.observationCount];
			this.UserThresholdsObs_F = new DistributionStructArray<Gaussian,double>[this.observationCount];
			this.vdouble__61_F = new DistributionStructArray<Gaussian,double>[this.observationCount];
			this.NoisyUserThresholds_F = new DistributionStructArray<Gaussian,double>[this.observationCount];
			this.UserTraits_itemUserIds_observation__F = new DistributionRefArray<DistributionStructArray<Gaussian,double>,double[]>(this.observationCount);
			this.userTrait_B = new DistributionStructArray<Gaussian,double>[this.observationCount];
			this.vdouble__51_F = new DistributionStructArray<Gaussian,double>[this.observationCount];
			this.vdouble113_F = new Gaussian[this.observationCount];
			this.vdouble114_F = new Gaussian[this.observationCount];
			this.vdouble115_F = new Gaussian[this.observationCount];
			this.true_logZ = new double[this.observationCount];
			this.CurrentRating = new int[this.observationCount];
			this.NextRating = new int[this.observationCount];
			this.vdouble115_use_B = new Gaussian[this.observationCount];
			this.vdouble114_B = new Gaussian[this.observationCount];
			this.vdouble113_B = new Gaussian[this.observationCount];
			this.vdouble__51_B = new DistributionStructArray<Gaussian,double>[this.observationCount];
			this.vdouble112_B = new Gaussian[this.observationCount];
			this.vdouble109_B = new Gaussian[this.observationCount];
			this.vdouble111_B = new Gaussian[this.observationCount];
			this.NoisyUserThresholds_use_B = new DistributionStructArray<Gaussian,double>[this.observationCount];
			this.vdouble__61_B = new DistributionStructArray<Gaussian,double>[this.observationCount];
			if (this.observationCount>0) {
				this.vbool6_reduced = true;
				Constrain.Equal<bool>(true, this.vbool6_reduced);
			}
			this.Changed_ObservationCount_isDone = true;
		}

		/// <summary>Computations that depend on the observed value of ObservationCount and Ratings</summary>
		private void Changed_ObservationCount_Ratings()
		{
			if (this.Changed_ObservationCount_Ratings_isDone) {
				return ;
			}
			for(int observation = 0; observation<this.observationCount; observation++) {
				this.CurrentRating[observation] = Factor.Plus(this.ratings[observation], 0);
				this.NextRating[observation] = Factor.Plus(this.ratings[observation], 1);
			}
			this.Changed_ObservationCount_Ratings_isDone = true;
		}

		/// <summary>Computations that depend on the observed value of ObservationCount and TraitCount</summary>
		private void Changed_ObservationCount_TraitCount()
		{
			if (this.Changed_ObservationCount_TraitCount_isDone) {
				return ;
			}
			for(int observation = 0; observation<this.observationCount; observation++) {
				this.ItemTraits_itemItemIds_observation__F[observation] = new DistributionStructArray<Gaussian,double>(this.traitCount);
				this.itemTrait_B[observation] = new DistributionStructArray<Gaussian,double>(this.traitCount);
				this.UserTraits_itemUserIds_observation__F[observation] = new DistributionStructArray<Gaussian,double>(this.traitCount);
				this.userTrait_B[observation] = new DistributionStructArray<Gaussian,double>(this.traitCount);
				this.vdouble__51_F[observation] = new DistributionStructArray<Gaussian,double>(this.traitCount);
				this.vdouble__51_B[observation] = new DistributionStructArray<Gaussian,double>(this.traitCount);
			}
			this.Changed_ObservationCount_TraitCount_isDone = true;
		}

		/// <summary>Computations that depend on the observed value of ObservationCount and UserThresholdCount</summary>
		private void Changed_ObservationCount_UserThresholdCount()
		{
			if (this.Changed_ObservationCount_UserThresholdCount_isDone) {
				return ;
			}
			for(int observation = 0; observation<this.observationCount; observation++) {
				this.UserThresholdsObs_B[observation] = new DistributionStructArray<Gaussian,double>(this.userThresholdCount);
				this.UserThresholdsObs_F[observation] = new DistributionStructArray<Gaussian,double>(this.userThresholdCount);
				this.vdouble__61_F[observation] = new DistributionStructArray<Gaussian,double>(this.userThresholdCount);
				this.NoisyUserThresholds_F[observation] = new DistributionStructArray<Gaussian,double>(this.userThresholdCount);
				this.NoisyUserThresholds_use_B[observation] = new DistributionStructArray<Gaussian,double>(this.userThresholdCount);
				this.vdouble__61_B[observation] = new DistributionStructArray<Gaussian,double>(this.userThresholdCount);
			}
			this.Changed_ObservationCount_UserThresholdCount_isDone = true;
		}

		/// <summary>Computations that depend on the observed value of ObservationCount and UserThresholdCount and UseSharedUserThresholds</summary>
		private void Changed_ObservationCount_UserThresholdCount_UseSharedUserThresholds()
		{
			if (this.Changed_ObservationCount_UserThresholdCount_UseSharedUserThresholds_isDone) {
				return ;
			}
			for(int userThreshold = 0; userThreshold<this.userThresholdCount; userThreshold++) {
				if (this.useSharedUserThresholds) {
					this.UserThresholds_rep_F[userThreshold] = new Gaussian[this.observationCount];
				}
			}
			for(int observation = 0; observation<this.observationCount; observation++) {
				if (!this.useSharedUserThresholds) {
					if (!this.useSharedUserThresholds) {
						this.UserThresholds_itemUserIds_observation__F[observation] = new DistributionStructArray<Gaussian,double>(this.userThresholdCount);
					}
				}
			}
			for(int userThreshold = 0; userThreshold<this.userThresholdCount; userThreshold++) {
				if (this.useSharedUserThresholds) {
					this.UserThresholds_rep_B[userThreshold] = new Gaussian[this.observationCount];
				}
			}
			this.Changed_ObservationCount_UserThresholdCount_UseSharedUserThresholds_isDone = true;
		}

		/// <summary>Computations that depend on the observed value of ObservationCount and UseSharedUserThresholds</summary>
		private void Changed_ObservationCount_UseSharedUserThresholds()
		{
			if (this.Changed_ObservationCount_UseSharedUserThresholds_isDone) {
				return ;
			}
			if (!this.useSharedUserThresholds) {
				if (!this.useSharedUserThresholds) {
					this.UserThresholds_itemUserIds_observation__F = new DistributionRefArray<DistributionStructArray<Gaussian,double>,double[]>(this.observationCount);
				}
			}
			this.Changed_ObservationCount_UseSharedUserThresholds_isDone = true;
		}

		/// <summary>Computations that depend on the observed value of TraitCount</summary>
		private void Changed_TraitCount()
		{
			if (this.Changed_TraitCount_isDone) {
				return ;
			}
			this.UserTraitFeatureWeights_F = new DistributionRefArray<DistributionStructArray<Gaussian,double>,double[]>(this.traitCount);
			this.UserTraitFeatureWeights_marginal_F = new DistributionRefArray<DistributionStructArray<Gaussian,double>,double[]>(this.traitCount);
			this.UserTraitFeatureWeights_use_B = new DistributionRefArray<DistributionStructArray<Gaussian,double>,double[]>(this.traitCount);
			this.vbool3 = new bool[this.traitCount][];
			this.ItemTraits_index10_index10_0__index10__B = new Gaussian[this.traitCount][];
			this.ItemTraits_trait_index10_0__0__B = new Gaussian[this.traitCount][];
			for(int trait = 0; trait<this.traitCount; trait++) {
				this.vbool3[trait] = new bool[this.traitCount];
			}
			this.UserTraitFeatureWeights_use_F_trait__marginal = new DistributionStructArray<Gaussian,double>[this.traitCount];
			this.UserTraitFeatureWeights_NonZeroUserFeatureIndices_B = new DistributionRefArray<DistributionStructArray<Gaussian,double>,double[]>[this.traitCount];
			this.UserTraitFeatureWeights_NonZeroUserFeatureIndices_F = new DistributionRefArray<DistributionStructArray<Gaussian,double>,double[]>[this.traitCount];
			this.ItemTraitFeatureWeights_use_F_trait__marginal = new DistributionStructArray<Gaussian,double>[this.traitCount];
			this.ItemTraitFeatureWeights_F = new DistributionRefArray<DistributionStructArray<Gaussian,double>,double[]>(this.traitCount);
			this.ItemTraitFeatureWeights_NonZeroItemFeatureIndices_B = new DistributionRefArray<DistributionStructArray<Gaussian,double>,double[]>[this.traitCount];
			this.ItemTraitFeatureWeights_NonZeroItemFeatureIndices_F = new DistributionRefArray<DistributionStructArray<Gaussian,double>,double[]>[this.traitCount];
			this.ItemTraitFeatureWeights_marginal_F = new DistributionRefArray<DistributionStructArray<Gaussian,double>,double[]>(this.traitCount);
			this.ItemTraitFeatureWeights_use_B = new DistributionRefArray<DistributionStructArray<Gaussian,double>,double[]>(this.traitCount);
			this.Changed_TraitCount_isDone = true;
		}

		/// <summary>Computations that depend on the observed value of TraitCount and UserCount</summary>
		private void Changed_TraitCount_UserCount()
		{
			if (this.Changed_TraitCount_UserCount_isDone) {
				return ;
			}
			for(int user = 0; user<this.userCount; user++) {
				this.UserTraits_F[user] = new DistributionStructArray<Gaussian,double>(this.traitCount);
				this.UserTraits_uses_F[1][user] = new DistributionStructArray<Gaussian,double>(this.traitCount);
				this.UserTraits_uses_B[0][user] = new DistributionStructArray<Gaussian,double>(this.traitCount);
				for(int trait = 0; trait<this.traitCount; trait++) {
					this.UserTraits_uses_B[0][user][trait] = Gaussian.Uniform();
				}
				this.UserTraits_use_F[user] = new DistributionStructArray<Gaussian,double>(this.traitCount);
				this.UserTraits_uses_B[1][user] = new DistributionStructArray<Gaussian,double>(this.traitCount);
				this.UserTraits_use_B[user] = new DistributionStructArray<Gaussian,double>(this.traitCount);
				this.userTraitMean_B[user] = new DistributionStructArray<Gaussian,double>(this.traitCount);
			}
			for(int trait = 0; trait<this.traitCount; trait++) {
				this.UserTraitFeatureWeights_NonZeroUserFeatureIndices_B[trait] = new DistributionRefArray<DistributionStructArray<Gaussian,double>,double[]>(this.userCount);
				this.UserTraitFeatureWeights_NonZeroUserFeatureIndices_F[trait] = new DistributionRefArray<DistributionStructArray<Gaussian,double>,double[]>(this.userCount);
			}
			for(int user = 0; user<this.userCount; user++) {
				this.nonZeroUserTraitFeatureWeights_B[user] = new DistributionRefArray<DistributionStructArray<Gaussian,double>,double[]>(this.traitCount);
				this.nonZeroUserTraitFeatureWeightProducts_F[user] = new DistributionRefArray<DistributionStructArray<Gaussian,double>,double[]>(this.traitCount);
				this.userTraitMean_F[user] = new DistributionStructArray<Gaussian,double>(this.traitCount);
				this.nonZeroUserTraitFeatureWeightProducts_B[user] = new DistributionRefArray<DistributionStructArray<Gaussian,double>,double[]>(this.traitCount);
				this.UserTraits_marginal_F[user] = new DistributionStructArray<Gaussian,double>(this.traitCount);
			}
			this.Changed_TraitCount_UserCount_isDone = true;
		}

		/// <summary>Computations that depend on the observed value of TraitCount and UserCount and UserTraitsInitializer</summary>
		private void Changed_TraitCount_UserCount_UserTraitsInitializer()
		{
			if (this.Changed_TraitCount_UserCount_UserTraitsInitializer_isDone) {
				return ;
			}
			for(int user = 0; user<this.userCount; user++) {
				for(int trait = 0; trait<this.traitCount; trait++) {
					this.UserTraits_marginal_F[user][trait] = ArrayHelper.MakeCopy<Gaussian>(this.userTraitsInitializer[user][trait]);
				}
			}
			this.Changed_TraitCount_UserCount_UserTraitsInitializer_isDone = true;
		}

		/// <summary>Computations that depend on the observed value of TraitCount and UserCount and UserTraitsMessage</summary>
		private void Changed_TraitCount_UserCount_UserTraitsMessage()
		{
			if (this.Changed_TraitCount_UserCount_UserTraitsMessage_isDone) {
				return ;
			}
			this.UserTraits_uses_B[0] = ArrayHelper.SetTo<DistributionRefArray<DistributionStructArray<Gaussian,double>,double[]>>(this.UserTraits_uses_B[0], this.userTraitsMessage);
			this.Changed_TraitCount_UserCount_UserTraitsMessage_isDone = true;
		}

		/// <summary>Computations that depend on the observed value of TraitCount and UserFeatureCount</summary>
		private void Changed_TraitCount_UserFeatureCount()
		{
			if (this.Changed_TraitCount_UserFeatureCount_isDone) {
				return ;
			}
			this.UserTraitFeatureWeights_F_reduced = default(Gaussian);
			if (this.traitCount>0) {
				if (this.userFeatureCount>0) {
					this.UserTraitFeatureWeights_F_reduced = Gaussian.Uniform();
				}
			}
			for(int trait = 0; trait<this.traitCount; trait++) {
				this.UserTraitFeatureWeights_F[trait] = new DistributionStructArray<Gaussian,double>(this.userFeatureCount);
				for(int userFeature = 0; userFeature<this.userFeatureCount; userFeature++) {
					this.UserTraitFeatureWeights_F[trait][userFeature] = this.UserTraitFeatureWeights_F_reduced;
				}
				this.UserTraitFeatureWeights_marginal_F[trait] = new DistributionStructArray<Gaussian,double>(this.userFeatureCount);
				this.UserTraitFeatureWeights_use_B[trait] = new DistributionStructArray<Gaussian,double>(this.userFeatureCount);
				for(int userFeature = 0; userFeature<this.userFeatureCount; userFeature++) {
					this.UserTraitFeatureWeights_use_B[trait][userFeature] = Gaussian.Uniform();
					this.UserTraitFeatureWeights_marginal_F[trait][userFeature] = Gaussian.Uniform();
				}
			}
			this.Changed_TraitCount_UserFeatureCount_isDone = true;
		}

		/// <summary>Computations that depend on the observed value of TraitCount and UserFeatureCount and UserTraitFeatureWeightPriorVariance</summary>
		private void Changed_TraitCount_UserFeatureCount_UserTraitFeatureWeightPriorVariance()
		{
			if (this.Changed_TraitCount_UserFeatureCount_UserTraitFeatureWeightPriorVariance_isDone) {
				return ;
			}
			if (this.traitCount>0) {
				if (this.userFeatureCount>0) {
					this.UserTraitFeatureWeights_F_reduced = GaussianFromMeanAndVarianceOp.SampleAverageConditional(0.0, this.userTraitFeatureWeightPriorVariance);
				}
			}
			for(int trait = 0; trait<this.traitCount; trait++) {
				for(int userFeature = 0; userFeature<this.userFeatureCount; userFeature++) {
					this.UserTraitFeatureWeights_F[trait][userFeature] = this.UserTraitFeatureWeights_F_reduced;
				}
			}
			this.Changed_TraitCount_UserFeatureCount_UserTraitFeatureWeightPriorVariance_isDone = true;
		}

		/// <summary>Computations that depend on the observed value of UserBiasFeatureWeightPriorVariance and UserFeatureCount</summary>
		private void Changed_UserBiasFeatureWeightPriorVariance_UserFeatureCount()
		{
			if (this.Changed_UserBiasFeatureWeightPriorVariance_UserFeatureCount_isDone) {
				return ;
			}
			if (this.userFeatureCount>0) {
				this.UserBiasFeatureWeights_F_reduced = GaussianFromMeanAndVarianceOp.SampleAverageConditional(0.0, this.userBiasFeatureWeightPriorVariance);
			}
			for(int userFeature = 0; userFeature<this.userFeatureCount; userFeature++) {
				this.UserBiasFeatureWeights_F[userFeature] = this.UserBiasFeatureWeights_F_reduced;
			}
			this.Changed_UserBiasFeatureWeightPriorVariance_UserFeatureCount_isDone = true;
		}

		/// <summary>Computations that depend on the observed value of UserBiasInitializer and UserCount</summary>
		private void Changed_UserBiasInitializer_UserCount()
		{
			if (this.Changed_UserBiasInitializer_UserCount_isDone) {
				return ;
			}
			for(int user = 0; user<this.userCount; user++) {
				this.UserBias_marginal_F[user] = ArrayHelper.MakeCopy<Gaussian>(this.userBiasInitializer[user]);
			}
			this.Changed_UserBiasInitializer_UserCount_isDone = true;
		}

		/// <summary>Computations that depend on the observed value of UserBiasMessage and UserCount</summary>
		private void Changed_UserBiasMessage_UserCount()
		{
			if (this.Changed_UserBiasMessage_UserCount_isDone) {
				return ;
			}
			this.UserBias_uses_B[0] = ArrayHelper.SetTo<DistributionStructArray<Gaussian,double>>(this.UserBias_uses_B[0], this.userBiasMessage);
			this.Changed_UserBiasMessage_UserCount_isDone = true;
		}

		/// <summary>Computations that depend on the observed value of UserCount</summary>
		private void Changed_UserCount()
		{
			if (this.Changed_UserCount_isDone) {
				return ;
			}
			this.UserTraits_F = new DistributionRefArray<DistributionStructArray<Gaussian,double>,double[]>(this.userCount);
			this.UserBias_F = new DistributionStructArray<Gaussian,double>(this.userCount);
			this.UserThresholds_F_reduced = default(DistributionStructArray<Gaussian,double>);
			this.UserBias_uses_F[1] = new DistributionStructArray<Gaussian,double>(this.userCount);
			this.UserBias_uses_B[0] = new DistributionStructArray<Gaussian,double>(this.userCount);
			for(int user = 0; user<this.userCount; user++) {
				this.UserBias_uses_B[0][user] = Gaussian.Uniform();
			}
			this.UserBias_use_F = new DistributionStructArray<Gaussian,double>(this.userCount);
			this.UserBias_uses_B[1] = new DistributionStructArray<Gaussian,double>(this.userCount);
			this.UserThresholds_depth0_B = new DistributionRefArray<DistributionStructArray<Gaussian,double>,double[]>(this.userCount);
			this.UserThresholds_depth0_uses_B[1] = new DistributionRefArray<DistributionStructArray<Gaussian,double>,double[]>(this.userCount);
			this.UserThresholds_depth0_uses_B[0] = new DistributionRefArray<DistributionStructArray<Gaussian,double>,double[]>(this.userCount);
			this.UserThresholds_uses_B = new Gaussian[this.userCount][][];
			this.UserThresholds_uses_F = new Gaussian[this.userCount][][];
			this.UserThresholds_use_F = new DistributionRefArray<DistributionStructArray<Gaussian,double>,double[]>(this.userCount);
			this.UserThresholds_depth0_F = new DistributionRefArray<DistributionStructArray<Gaussian,double>,double[]>(this.userCount);
			this.UserThresholds_depth0_uses_F[1] = new DistributionRefArray<DistributionStructArray<Gaussian,double>,double[]>(this.userCount);
			this.UserTraits_uses_F[1] = new DistributionRefArray<DistributionStructArray<Gaussian,double>,double[]>(this.userCount);
			this.UserTraits_uses_B[0] = new DistributionRefArray<DistributionStructArray<Gaussian,double>,double[]>(this.userCount);
			this.UserTraits_use_F = new DistributionRefArray<DistributionStructArray<Gaussian,double>,double[]>(this.userCount);
			this.UserTraits_uses_B[1] = new DistributionRefArray<DistributionStructArray<Gaussian,double>,double[]>(this.userCount);
			this.UserTraits_use_B = new DistributionRefArray<DistributionStructArray<Gaussian,double>,double[]>(this.userCount);
			this.userTraitMean_B = new DistributionStructArray<Gaussian,double>[this.userCount];
			this.nonZeroUserTraitFeatureWeights_B = new DistributionRefArray<DistributionStructArray<Gaussian,double>,double[]>[this.userCount];
			this.nonZeroUserTraitFeatureWeightProducts_F = new DistributionRefArray<DistributionStructArray<Gaussian,double>,double[]>[this.userCount];
			this.userTraitMean_F = new DistributionStructArray<Gaussian,double>[this.userCount];
			this.nonZeroUserTraitFeatureWeightProducts_B = new DistributionRefArray<DistributionStructArray<Gaussian,double>,double[]>[this.userCount];
			this.UserBias_use_B = new DistributionStructArray<Gaussian,double>(this.userCount);
			this.userBiasMean_B = new Gaussian[this.userCount];
			this.UserBiasFeatureWeights_NonZeroUserFeatureIndices_F = new DistributionRefArray<DistributionStructArray<Gaussian,double>,double[]>(this.userCount);
			this.nonZeroUserBiasFeatureWeights_B = new DistributionStructArray<Gaussian,double>[this.userCount];
			this.nonZeroUserBiasFeatureWeightProducts_F = new DistributionStructArray<Gaussian,double>[this.userCount];
			this.userBiasMean_F = new Gaussian[this.userCount];
			this.nonZeroUserBiasFeatureWeightProducts_B = new DistributionStructArray<Gaussian,double>[this.userCount];
			this.UserThresholds_marginal_F = new DistributionRefArray<DistributionStructArray<Gaussian,double>,double[]>(this.userCount);
			this.UserThresholds_use_B = new DistributionRefArray<DistributionStructArray<Gaussian,double>,double[]>(this.userCount);
			this.UserTraits_marginal_F = new DistributionRefArray<DistributionStructArray<Gaussian,double>,double[]>(this.userCount);
			this.UserBias_marginal_F = new DistributionStructArray<Gaussian,double>(this.userCount);
			this.Changed_UserCount_isDone = true;
		}

		/// <summary>Computations that depend on the observed value of UserCount and UserThresholdCount</summary>
		private void Changed_UserCount_UserThresholdCount()
		{
			if (this.Changed_UserCount_UserThresholdCount_isDone) {
				return ;
			}
			if (this.userCount>0) {
				this.UserThresholds_F_reduced = new DistributionStructArray<Gaussian,double>(this.userThresholdCount);
			}
			for(int userThreshold = 0; userThreshold<this.userThresholdCount; userThreshold++) {
				if (this.userCount>0) {
					this.UserThresholds_F_reduced[userThreshold] = Gaussian.Uniform();
				}
			}
			for(int user = 0; user<this.userCount; user++) {
				this.UserThresholds_depth0_B[user] = new DistributionStructArray<Gaussian,double>(this.userThresholdCount);
				this.UserThresholds_depth0_uses_B[1][user] = new DistributionStructArray<Gaussian,double>(this.userThresholdCount);
				this.UserThresholds_depth0_uses_B[0][user] = new DistributionStructArray<Gaussian,double>(this.userThresholdCount);
				for(int userThreshold = 0; userThreshold<this.userThresholdCount; userThreshold++) {
					this.UserThresholds_depth0_uses_B[0][user][userThreshold] = Gaussian.Uniform();
				}
				this.UserThresholds_uses_B[user] = new Gaussian[this.userThresholdCount][];
				for(int userThreshold = 0; userThreshold<this.userThresholdCount; userThreshold++) {
					this.UserThresholds_uses_B[user][userThreshold] = new Gaussian[2];
				}
				this.UserThresholds_uses_F[user] = new Gaussian[this.userThresholdCount][];
				for(int userThreshold = 0; userThreshold<this.userThresholdCount; userThreshold++) {
					this.UserThresholds_uses_F[user][userThreshold] = new Gaussian[2];
				}
				this.UserThresholds_use_F[user] = new DistributionStructArray<Gaussian,double>(this.userThresholdCount);
				this.UserThresholds_depth0_F[user] = new DistributionStructArray<Gaussian,double>(this.userThresholdCount);
				this.UserThresholds_depth0_uses_F[1][user] = new DistributionStructArray<Gaussian,double>(this.userThresholdCount);
				this.UserThresholds_marginal_F[user] = new DistributionStructArray<Gaussian,double>(this.userThresholdCount);
				this.UserThresholds_use_B[user] = new DistributionStructArray<Gaussian,double>(this.userThresholdCount);
				for(int userThreshold = 0; userThreshold<this.userThresholdCount; userThreshold++) {
					this.UserThresholds_use_B[user][userThreshold] = Gaussian.Uniform();
				}
			}
			this.Changed_UserCount_UserThresholdCount_isDone = true;
		}

		/// <summary>Computations that depend on the observed value of UserCount and UserThresholdCount and UserThresholdsInitializer</summary>
		private void Changed_UserCount_UserThresholdCount_UserThresholdsInitializer()
		{
			if (this.Changed_UserCount_UserThresholdCount_UserThresholdsInitializer_isDone) {
				return ;
			}
			for(int user = 0; user<this.userCount; user++) {
				for(int userThreshold = 0; userThreshold<this.userThresholdCount; userThreshold++) {
					this.UserThresholds_marginal_F[user][userThreshold] = ArrayHelper.MakeCopy<Gaussian>(this.userThresholdsInitializer[user][userThreshold]);
				}
			}
			this.Changed_UserCount_UserThresholdCount_UserThresholdsInitializer_isDone = true;
		}

		/// <summary>Computations that depend on the observed value of UserCount and UserThresholdCount and UserThresholdsMessage</summary>
		private void Changed_UserCount_UserThresholdCount_UserThresholdsMessage()
		{
			if (this.Changed_UserCount_UserThresholdCount_UserThresholdsMessage_isDone) {
				return ;
			}
			this.UserThresholds_depth0_uses_B[0] = ArrayHelper.SetTo<DistributionRefArray<DistributionStructArray<Gaussian,double>,double[]>>(this.UserThresholds_depth0_uses_B[0], this.userThresholdsMessage);
			this.Changed_UserCount_UserThresholdCount_UserThresholdsMessage_isDone = true;
		}

		/// <summary>Computations that depend on the observed value of UserFeatureCount</summary>
		private void Changed_UserFeatureCount()
		{
			if (this.Changed_UserFeatureCount_isDone) {
				return ;
			}
			this.UserBiasFeatureWeights_F_reduced = default(Gaussian);
			this.UserBiasFeatureWeights_F = new DistributionStructArray<Gaussian,double>(this.userFeatureCount);
			if (this.userFeatureCount>0) {
				this.UserBiasFeatureWeights_F_reduced = Gaussian.Uniform();
			}
			for(int userFeature = 0; userFeature<this.userFeatureCount; userFeature++) {
				this.UserBiasFeatureWeights_F[userFeature] = this.UserBiasFeatureWeights_F_reduced;
			}
			this.UserBiasFeatureWeights_marginal_F = new DistributionStructArray<Gaussian,double>(this.userFeatureCount);
			for(int userFeature = 0; userFeature<this.userFeatureCount; userFeature++) {
				this.UserBiasFeatureWeights_marginal_F[userFeature] = Gaussian.Uniform();
			}
			this.Changed_UserFeatureCount_isDone = true;
		}

		/// <summary>Computations that depend on the observed value of UserThresholdCount and UseSharedUserThresholds</summary>
		private void Changed_UserThresholdCount_UseSharedUserThresholds()
		{
			if (this.Changed_UserThresholdCount_UseSharedUserThresholds_isDone) {
				return ;
			}
			if (this.useSharedUserThresholds) {
				this.UserThresholds_rep_F_marginal = new Gaussian[this.userThresholdCount];
				this.UserThresholds_rep_B_toDef = new Gaussian[this.userThresholdCount];
				this.UserThresholds_rep_F = new Gaussian[this.userThresholdCount][];
				this.UserThresholds_rep_B = new Gaussian[this.userThresholdCount][];
			}
			this.Changed_UserThresholdCount_UseSharedUserThresholds_isDone = true;
		}

		/// <summary>Computations that depend on the observed value of UseSharedUserThresholds</summary>
		private void Changed_UseSharedUserThresholds()
		{
			if (this.Changed_UseSharedUserThresholds_isDone) {
				return ;
			}
			this.UserThresholds_rep_F_marginal = default(Gaussian[]);
			this.UserThresholds_rep_B_toDef = default(Gaussian[]);
			this.UserThresholds_depth0_uses_F_1__marginal = default(DistributionRefArray<DistributionStructArray<Gaussian,double>,double[]>);
			this.UserThresholds_rep_F = default(Gaussian[][]);
			this.UserThresholds_itemUserIds_observation__F = default(DistributionRefArray<DistributionStructArray<Gaussian,double>,double[]>);
			this.UserThresholds_rep_B = default(Gaussian[][]);
			this.Changed_UseSharedUserThresholds_isDone = true;
		}

		/// <summary>Computations that do not depend on observed values</summary>
		private void Constant()
		{
			if (this.Constant_isDone) {
				return ;
			}
			this.ItemTraits_depth0_uses_F = new DistributionRefArray<DistributionStructArray<Gaussian,double>,double[]>[2];
			this.ItemTraits_depth0_uses_B = new DistributionRefArray<DistributionStructArray<Gaussian,double>,double[]>[2];
			this.UserBias_uses_F = new DistributionStructArray<Gaussian,double>[2];
			this.UserBias_uses_B = new DistributionStructArray<Gaussian,double>[2];
			this.ItemBias_uses_F = new DistributionStructArray<Gaussian,double>[2];
			this.ItemBias_uses_B = new DistributionStructArray<Gaussian,double>[2];
			this.UserThresholds_depth0_uses_B = new DistributionRefArray<DistributionStructArray<Gaussian,double>,double[]>[2];
			this.UserThresholds_depth0_uses_F = new DistributionRefArray<DistributionStructArray<Gaussian,double>,double[]>[2];
			this.UserTraits_uses_F = new DistributionRefArray<DistributionStructArray<Gaussian,double>,double[]>[2];
			this.UserTraits_uses_B = new DistributionRefArray<DistributionStructArray<Gaussian,double>,double[]>[2];
			this.Constant_isDone = true;
		}

		/// <summary>Update all marginals, by iterating message passing the given number of times</summary>
		/// <param name="numberOfIterations">The number of times to iterate each loop</param>
		/// <param name="initialise">If true, messages that initialise loops are reset when observed values change</param>
		private void Execute(int numberOfIterations, bool initialise)
		{
			if (numberOfIterations!=this.numberOfIterationsDone) {
				if (numberOfIterations<this.numberOfIterationsDone) {
					this.numberOfIterationsDone = 0;
					this.Changed_numberOfIterationsDecreased_ObservationCount_Ratings_UserThresholdCount_Init_AffinityNoiseVa38_isDone = false;
					this.Changed_numberOfIterationsDecreased_ObservationCount_UserThresholdCount_UseSharedUserThresholds_Init33_isDone = false;
					this.Changed_numberOfIterationsDecreased_ObservationCount_UserThresholdCount_Init_AffinityNoiseVariance_I35_isDone = false;
					this.Changed_numberOfIterationsDecreased_ObservationCount_Init_AffinityNoiseVariance_ItemBiasFeatureWeigh31_isDone = false;
					this.Changed_numberOfIterationsDecreased_ObservationCount_TraitCount_Init_AffinityNoiseVariance_ItemBiasF30_isDone = false;
					this.Changed_ItemFeatureCount_numberOfIterationsDecreased_TraitCount_Init_AffinityNoiseVariance_ItemBiasF47_isDone = false;
					this.Changed_numberOfIterationsDecreased_TraitCount_UserFeatureCount_Init_AffinityNoiseVariance_ItemBiasF39_isDone = false;
					this.Changed_ItemCount_NonZeroItemFeatureCounts_numberOfIterationsDecreased_Init_AffinityNoiseVariance_It52_isDone = false;
					this.Changed_ItemBiasFeatureWeightPriorVariance_ItemCount_ItemFeatureCount_NonZeroItemFeatureCounts_NonZe55_isDone = false;
					this.Changed_ItemBiasInitializer_ItemCount_numberOfIterationsDecreased_Init_AffinityNoiseVariance_ItemBia19_isDone = false;
					this.Changed_ItemCount_numberOfIterationsDecreased_Init_AffinityNoiseVariance_ItemBiasFeatureWeightPriorV8_isDone = false;
					this.Changed_ItemCount_NonZeroItemFeatureCounts_numberOfIterationsDecreased_TraitCount_Init_AffinityNoise50_isDone = false;
					this.Changed_ItemCount_ItemTraitsInitializer_numberOfIterationsDecreased_TraitCount_Init_AffinityNoiseVar14_isDone = false;
					this.Changed_ItemCount_numberOfIterationsDecreased_TraitCount_Init_AffinityNoiseVariance_ItemBiasFeatureW6_isDone = false;
					this.Changed_NonZeroUserFeatureCounts_numberOfIterationsDecreased_UserCount_Init_AffinityNoiseVariance_It44_isDone = false;
					this.Changed_NonZeroUserFeatureCounts_NonZeroUserFeatureIndices_numberOfIterationsDecreased_UserBiasFeatu45_isDone = false;
					this.Changed_numberOfIterationsDecreased_UserBiasInitializer_UserCount_Init_AffinityNoiseVariance_ItemBia17_isDone = false;
					this.Changed_numberOfIterationsDecreased_UserCount_UserThresholdCount_UserThresholdsInitializer_Init_Affi23_isDone = false;
					this.Changed_numberOfIterationsDecreased_UserCount_UserThresholdCount_Init_AffinityNoiseVariance_ItemBias20_isDone = false;
					this.Changed_numberOfIterationsDecreased_UserCount_UserThresholdCount_UseSharedUserThresholds_Init_Affini21_isDone = false;
					this.Changed_numberOfIterationsDecreased_UserCount_Init_AffinityNoiseVariance_ItemBiasFeatureWeightPriorV7_isDone = false;
					this.Changed_NonZeroUserFeatureCounts_numberOfIterationsDecreased_TraitCount_UserCount_Init_AffinityNoise42_isDone = false;
					this.Changed_numberOfIterationsDecreased_TraitCount_UserCount_UserTraitsInitializer_Init_AffinityNoiseVar27_isDone = false;
					this.Changed_numberOfIterationsDecreased_TraitCount_UserCount_Init_AffinityNoiseVariance_ItemBiasFeatureW3_isDone = false;
					this.Changed_AffinityNoiseVariance_ItemBiasFeatureWeightPriorVariance_ItemBiasInitializer_ItemBiasMessage59_isDone = false;
				}
				this.Changed_AffinityNoiseVariance_ItemBiasFeatureWeightPriorVariance_ItemBiasInitializer_ItemBiasMessage60_isDone = false;
			}
			this.Changed_MiddleUserThresholdIndex_UserThresholdCount();
			this.Changed_MiddleUserThresholdIndex_UserThresholdCount_UserThresholdPriorVariance();
			this.Changed_UseSharedUserThresholds();
			this.Changed_ObservationCount_UseSharedUserThresholds();
			this.Changed_UserThresholdCount_UseSharedUserThresholds();
			this.Changed_ObservationCount_UserThresholdCount_UseSharedUserThresholds();
			this.Constant();
			this.Changed_ItemFeatureCount();
			this.Changed_ItemBiasFeatureWeightPriorVariance_ItemFeatureCount();
			this.Changed_ObservationCount();
			this.Changed_ObservationCount_Ratings();
			this.Changed_ObservationCount_UserThresholdCount();
			this.Changed_numberOfIterationsDecreased_ObservationCount_Ratings_UserThresholdCount_Init_AffinityNoiseVa38(initialise);
			this.Changed_numberOfIterationsDecreased_ObservationCount_UserThresholdCount_UseSharedUserThresholds_Init33(initialise);
			this.Changed_numberOfIterationsDecreased_ObservationCount_UserThresholdCount_Init_AffinityNoiseVariance_I35(initialise);
			this.Changed_numberOfIterationsDecreased_ObservationCount_Init_AffinityNoiseVariance_ItemBiasFeatureWeigh31(initialise);
			this.Changed_ObservationCount_TraitCount();
			this.Changed_numberOfIterationsDecreased_ObservationCount_TraitCount_Init_AffinityNoiseVariance_ItemBiasF30(initialise);
			this.Changed_UserFeatureCount();
			this.Changed_UserBiasFeatureWeightPriorVariance_UserFeatureCount();
			this.Changed_TraitCount();
			this.Changed_ItemFeatureCount_TraitCount();
			this.Changed_ItemFeatureCount_ItemTraitFeatureWeightPriorVariance_TraitCount();
			this.Changed_ItemFeatureCount_numberOfIterationsDecreased_TraitCount_Init_AffinityNoiseVariance_ItemBiasF47(initialise);
			this.Changed_TraitCount_UserFeatureCount();
			this.Changed_TraitCount_UserFeatureCount_UserTraitFeatureWeightPriorVariance();
			this.Changed_numberOfIterationsDecreased_TraitCount_UserFeatureCount_Init_AffinityNoiseVariance_ItemBiasF39(initialise);
			this.Changed_ItemCount();
			this.Changed_ItemBiasInitializer_ItemCount();
			this.Changed_ItemCount_NonZeroItemFeatureCounts();
			this.Changed_ItemCount_NonZeroItemFeatureCounts_numberOfIterationsDecreased_Init_AffinityNoiseVariance_It52(initialise);
			this.Changed_ItemBiasFeatureWeightPriorVariance_ItemCount_ItemFeatureCount_NonZeroItemFeatureCounts_NonZe55(initialise);
			this.Changed_ItemBiasInitializer_ItemCount_numberOfIterationsDecreased_Init_AffinityNoiseVariance_ItemBia19(initialise);
			this.Changed_ItemBiasMessage_ItemCount();
			this.Changed_ItemCount_numberOfIterationsDecreased_Init_AffinityNoiseVariance_ItemBiasFeatureWeightPriorV8(initialise);
			this.Changed_ItemCount_TraitCount();
			this.Changed_ItemCount_ItemTraitsInitializer_TraitCount();
			this.Changed_ItemCount_NonZeroItemFeatureCounts_TraitCount();
			this.Changed_ItemCount_NonZeroItemFeatureCounts_numberOfIterationsDecreased_TraitCount_Init_AffinityNoise50(initialise);
			this.Changed_ItemCount_ItemTraitsMessage_TraitCount();
			this.Changed_ItemCount_ItemTraitsInitializer_numberOfIterationsDecreased_TraitCount_Init_AffinityNoiseVar14(initialise);
			this.Changed_ItemCount_numberOfIterationsDecreased_TraitCount_Init_AffinityNoiseVariance_ItemBiasFeatureW6(initialise);
			this.Changed_UserCount();
			this.Changed_UserBiasInitializer_UserCount();
			this.Changed_NonZeroUserFeatureCounts_UserCount();
			this.Changed_NonZeroUserFeatureCounts_numberOfIterationsDecreased_UserCount_Init_AffinityNoiseVariance_It44(initialise);
			this.Changed_NonZeroUserFeatureCounts_NonZeroUserFeatureIndices_numberOfIterationsDecreased_UserBiasFeatu45(initialise);
			this.Changed_numberOfIterationsDecreased_UserBiasInitializer_UserCount_Init_AffinityNoiseVariance_ItemBia17(initialise);
			this.Changed_UserBiasMessage_UserCount();
			this.Changed_UserCount_UserThresholdCount();
			this.Changed_UserCount_UserThresholdCount_UserThresholdsInitializer();
			this.Changed_MiddleUserThresholdIndex_UserCount_UserThresholdCount_UserThresholdPriorMean_UserThresholdPr58();
			this.Changed_numberOfIterationsDecreased_UserCount_UserThresholdCount_UserThresholdsInitializer_Init_Affi23(initialise);
			this.Changed_UserCount_UserThresholdCount_UserThresholdsMessage();
			this.Changed_numberOfIterationsDecreased_UserCount_UserThresholdCount_Init_AffinityNoiseVariance_ItemBias20(initialise);
			this.Changed_numberOfIterationsDecreased_UserCount_UserThresholdCount_UseSharedUserThresholds_Init_Affini21(initialise);
			this.Changed_numberOfIterationsDecreased_UserCount_Init_AffinityNoiseVariance_ItemBiasFeatureWeightPriorV7(initialise);
			this.Changed_TraitCount_UserCount();
			this.Changed_TraitCount_UserCount_UserTraitsInitializer();
			this.Changed_NonZeroUserFeatureCounts_TraitCount_UserCount();
			this.Changed_NonZeroUserFeatureCounts_numberOfIterationsDecreased_TraitCount_UserCount_Init_AffinityNoise42(initialise);
			this.Changed_numberOfIterationsDecreased_TraitCount_UserCount_UserTraitsInitializer_Init_AffinityNoiseVar27(initialise);
			this.Changed_TraitCount_UserCount_UserTraitsMessage();
			this.Changed_numberOfIterationsDecreased_TraitCount_UserCount_Init_AffinityNoiseVariance_ItemBiasFeatureW3(initialise);
			this.Changed_AffinityNoiseVariance_ItemBiasFeatureWeightPriorVariance_ItemBiasInitializer_ItemBiasMessage59();
			this.Changed_AffinityNoiseVariance_ItemBiasFeatureWeightPriorVariance_ItemBiasInitializer_ItemBiasMessage60(numberOfIterations);
			this.numberOfIterationsDone = numberOfIterations;
		}

		/// <summary>Update all marginals, by iterating message-passing the given number of times</summary>
		/// <param name="numberOfIterations">The total number of iterations that should be executed for the current set of observed values.  If this is more than the number already done, only the extra iterations are done.  If this is less than the number already done, message-passing is restarted from the beginning.  Changing the observed values resets the iteration count to 0.</param>
		public void Execute(int numberOfIterations)
		{
			this.Execute(numberOfIterations, true);
		}

		/// <summary>Get the observed value of the specified variable.</summary>
		/// <param name="variableName">Variable name</param>
		public object GetObservedValue(string variableName)
		{
			if (variableName=="UserCount") {
				return this.UserCount;
			}
			if (variableName=="ItemCount") {
				return this.ItemCount;
			}
			if (variableName=="UserThresholdCount") {
				return this.UserThresholdCount;
			}
			if (variableName=="ObservationCount") {
				return this.ObservationCount;
			}
			if (variableName=="TraitCount") {
				return this.TraitCount;
			}
			if (variableName=="UserFeatureCount") {
				return this.UserFeatureCount;
			}
			if (variableName=="NonZeroUserFeatureCounts") {
				return this.NonZeroUserFeatureCounts;
			}
			if (variableName=="NonZeroUserFeatureIndices") {
				return this.NonZeroUserFeatureIndices;
			}
			if (variableName=="NonZeroUserFeatureValues") {
				return this.NonZeroUserFeatureValues;
			}
			if (variableName=="UserTraitFeatureWeightPriorVariance") {
				return this.UserTraitFeatureWeightPriorVariance;
			}
			if (variableName=="UserBiasFeatureWeightPriorVariance") {
				return this.UserBiasFeatureWeightPriorVariance;
			}
			if (variableName=="UserTraitVariance") {
				return this.UserTraitVariance;
			}
			if (variableName=="UserBiasVariance") {
				return this.UserBiasVariance;
			}
			if (variableName=="UserThresholdPriorMean") {
				return this.UserThresholdPriorMean;
			}
			if (variableName=="UserThresholdPriorVariance") {
				return this.UserThresholdPriorVariance;
			}
			if (variableName=="MiddleUserThresholdIndex") {
				return this.MiddleUserThresholdIndex;
			}
			if (variableName=="UserTraitsMessage") {
				return this.UserTraitsMessage;
			}
			if (variableName=="UserBiasMessage") {
				return this.UserBiasMessage;
			}
			if (variableName=="UserThresholdsMessage") {
				return this.UserThresholdsMessage;
			}
			if (variableName=="UserTraitsInitializer") {
				return this.UserTraitsInitializer;
			}
			if (variableName=="UserBiasInitializer") {
				return this.UserBiasInitializer;
			}
			if (variableName=="UserThresholdsInitializer") {
				return this.UserThresholdsInitializer;
			}
			if (variableName=="ItemFeatureCount") {
				return this.ItemFeatureCount;
			}
			if (variableName=="NonZeroItemFeatureCounts") {
				return this.NonZeroItemFeatureCounts;
			}
			if (variableName=="NonZeroItemFeatureIndices") {
				return this.NonZeroItemFeatureIndices;
			}
			if (variableName=="NonZeroItemFeatureValues") {
				return this.NonZeroItemFeatureValues;
			}
			if (variableName=="ItemTraitFeatureWeightPriorVariance") {
				return this.ItemTraitFeatureWeightPriorVariance;
			}
			if (variableName=="ItemBiasFeatureWeightPriorVariance") {
				return this.ItemBiasFeatureWeightPriorVariance;
			}
			if (variableName=="ItemTraitVariance") {
				return this.ItemTraitVariance;
			}
			if (variableName=="ItemBiasVariance") {
				return this.ItemBiasVariance;
			}
			if (variableName=="ItemTraitsMessage") {
				return this.ItemTraitsMessage;
			}
			if (variableName=="ItemBiasMessage") {
				return this.ItemBiasMessage;
			}
			if (variableName=="ItemTraitsInitializer") {
				return this.ItemTraitsInitializer;
			}
			if (variableName=="ItemBiasInitializer") {
				return this.ItemBiasInitializer;
			}
			if (variableName=="UserIds") {
				return this.UserIds;
			}
			if (variableName=="ItemIds") {
				return this.ItemIds;
			}
			if (variableName=="Ratings") {
				return this.Ratings;
			}
			if (variableName=="AffinityNoiseVariance") {
				return this.AffinityNoiseVariance;
			}
			if (variableName=="UserThresholdNoiseVariance") {
				return this.UserThresholdNoiseVariance;
			}
			if (variableName=="UseSharedUserThresholds") {
				return this.UseSharedUserThresholds;
			}
			throw new ArgumentException("Not an observed variable name: "+variableName);
		}

		/// <summary>
		/// Returns the marginal distribution for 'ItemBiasFeatureWeights' given by the current state of the
		/// message passing algorithm.
		/// </summary>
		/// <returns>The marginal distribution</returns>
		public DistributionStructArray<Gaussian,double> ItemBiasFeatureWeightsMarginal()
		{
			return ArrayHelper.MakeCopy<DistributionStructArray<Gaussian,double>>(this.ItemBiasFeatureWeights_marginal_F);
		}

		/// <summary>
		/// Returns the marginal distribution for 'ItemBias' given by the current state of the
		/// message passing algorithm.
		/// </summary>
		/// <returns>The marginal distribution</returns>
		public DistributionStructArray<Gaussian,double> ItemBiasMarginal()
		{
			return ArrayHelper.MakeCopy<DistributionStructArray<Gaussian,double>>(this.ItemBias_marginal_F);
		}

		/// <summary>
		/// Returns the output message (the posterior divided by the prior) for 'ItemBias' given by the current state of the
		/// message passing algorithm.
		/// </summary>
		/// <returns>The output message (the posterior divided by the prior)</returns>
		public DistributionStructArray<Gaussian,double> ItemBiasMarginalDividedByPrior()
		{
			return ArrayHelper.MakeCopy<DistributionStructArray<Gaussian,double>>(this.ItemBias_use_B);
		}

		/// <summary>
		/// Returns the marginal distribution for 'ItemTraitFeatureWeights' given by the current state of the
		/// message passing algorithm.
		/// </summary>
		/// <returns>The marginal distribution</returns>
		public DistributionRefArray<DistributionStructArray<Gaussian,double>,double[]> ItemTraitFeatureWeightsMarginal()
		{
			return ArrayHelper.MakeCopy<DistributionRefArray<DistributionStructArray<Gaussian,double>,double[]>>(this.ItemTraitFeatureWeights_marginal_F);
		}

		/// <summary>
		/// Returns the marginal distribution for 'ItemTraits' given by the current state of the
		/// message passing algorithm.
		/// </summary>
		/// <returns>The marginal distribution</returns>
		public DistributionRefArray<DistributionStructArray<Gaussian,double>,double[]> ItemTraitsMarginal()
		{
			return ArrayHelper.MakeCopy<DistributionRefArray<DistributionStructArray<Gaussian,double>,double[]>>(this.ItemTraits_marginal_F);
		}

		/// <summary>
		/// Returns the output message (the posterior divided by the prior) for 'ItemTraits' given by the current state of the
		/// message passing algorithm.
		/// </summary>
		/// <returns>The output message (the posterior divided by the prior)</returns>
		public DistributionRefArray<DistributionStructArray<Gaussian,double>,double[]> ItemTraitsMarginalDividedByPrior()
		{
			return ArrayHelper.MakeCopy<DistributionRefArray<DistributionStructArray<Gaussian,double>,double[]>>(this.ItemTraits_use_B);
		}

		/// <summary>Get the marginal distribution (computed up to this point) of a variable</summary>
		/// <param name="variableName">Name of the variable in the generated code</param>
		/// <returns>The marginal distribution computed up to this point</returns>
		/// <remarks>Execute, Update, or Reset must be called first to set the value of the marginal.</remarks>
		public object Marginal(string variableName)
		{
			if (variableName=="UserTraits") {
				return this.UserTraitsMarginal();
			}
			if (variableName=="ItemTraits") {
				return this.ItemTraitsMarginal();
			}
			if (variableName=="UserBias") {
				return this.UserBiasMarginal();
			}
			if (variableName=="ItemBias") {
				return this.ItemBiasMarginal();
			}
			if (variableName=="UserThresholds") {
				return this.UserThresholdsMarginal();
			}
			if (variableName=="UserTraitFeatureWeights") {
				return this.UserTraitFeatureWeightsMarginal();
			}
			if (variableName=="UserBiasFeatureWeights") {
				return this.UserBiasFeatureWeightsMarginal();
			}
			if (variableName=="ItemTraitFeatureWeights") {
				return this.ItemTraitFeatureWeightsMarginal();
			}
			if (variableName=="ItemBiasFeatureWeights") {
				return this.ItemBiasFeatureWeightsMarginal();
			}
			throw new ArgumentException("This class was not built to infer "+variableName);
		}

		/// <summary>Get the marginal distribution (computed up to this point) of a variable, converted to type T</summary>
		/// <typeparam name="T">The distribution type.</typeparam>
		/// <param name="variableName">Name of the variable in the generated code</param>
		/// <returns>The marginal distribution computed up to this point</returns>
		/// <remarks>Execute, Update, or Reset must be called first to set the value of the marginal.</remarks>
		public T Marginal<T>(string variableName)
		{
			return Distribution.ChangeType<T>(this.Marginal(variableName));
		}

		/// <summary>Get the query-specific marginal distribution of a variable.</summary>
		/// <param name="variableName">Name of the variable in the generated code</param>
		/// <param name="query">QueryType name. For example, GibbsSampling answers 'Marginal', 'Samples', and 'Conditionals' queries</param>
		/// <remarks>Execute, Update, or Reset must be called first to set the value of the marginal.</remarks>
		public object Marginal(string variableName, string query)
		{
			if (query=="Marginal") {
				return this.Marginal(variableName);
			}
			if ((variableName=="UserTraits")&&(query=="MarginalDividedByPrior")) {
				return this.UserTraitsMarginalDividedByPrior();
			}
			if ((variableName=="ItemTraits")&&(query=="MarginalDividedByPrior")) {
				return this.ItemTraitsMarginalDividedByPrior();
			}
			if ((variableName=="UserBias")&&(query=="MarginalDividedByPrior")) {
				return this.UserBiasMarginalDividedByPrior();
			}
			if ((variableName=="ItemBias")&&(query=="MarginalDividedByPrior")) {
				return this.ItemBiasMarginalDividedByPrior();
			}
			if ((variableName=="UserThresholds")&&(query=="MarginalDividedByPrior")) {
				return this.UserThresholdsMarginalDividedByPrior();
			}
			throw new ArgumentException(((("This class was not built to infer \'"+variableName)+"\' with query \'")+query)+"\'");
		}

		/// <summary>Get the query-specific marginal distribution of a variable, converted to type T</summary>
		/// <typeparam name="T">The distribution type.</typeparam>
		/// <param name="variableName">Name of the variable in the generated code</param>
		/// <param name="query">QueryType name. For example, GibbsSampling answers 'Marginal', 'Samples', and 'Conditionals' queries</param>
		/// <remarks>Execute, Update, or Reset must be called first to set the value of the marginal.</remarks>
		public T Marginal<T>(string variableName, string query)
		{
			return Distribution.ChangeType<T>(this.Marginal(variableName, query));
		}

		private void OnProgressChanged(ProgressChangedEventArgs e)
		{
			// Make a temporary copy of the event to avoid a race condition
			// if the last subscriber unsubscribes immediately after the null check and before the event is raised.
			EventHandler<ProgressChangedEventArgs> handler = this.ProgressChanged;
			if (handler!=null) {
				handler(this, e);
			}
		}

		/// <summary>Reset all messages to their initial values.  Sets NumberOfIterationsDone to 0.</summary>
		public void Reset()
		{
			this.Execute(0);
		}

		/// <summary>Set the observed value of the specified variable.</summary>
		/// <param name="variableName">Variable name</param>
		/// <param name="value">Observed value</param>
		public void SetObservedValue(string variableName, object value)
		{
			if (variableName=="UserCount") {
				this.UserCount = (int)value;
				return ;
			}
			if (variableName=="ItemCount") {
				this.ItemCount = (int)value;
				return ;
			}
			if (variableName=="UserThresholdCount") {
				this.UserThresholdCount = (int)value;
				return ;
			}
			if (variableName=="ObservationCount") {
				this.ObservationCount = (int)value;
				return ;
			}
			if (variableName=="TraitCount") {
				this.TraitCount = (int)value;
				return ;
			}
			if (variableName=="UserFeatureCount") {
				this.UserFeatureCount = (int)value;
				return ;
			}
			if (variableName=="NonZeroUserFeatureCounts") {
				this.NonZeroUserFeatureCounts = (IReadOnlyList<int>)value;
				return ;
			}
			if (variableName=="NonZeroUserFeatureIndices") {
				this.NonZeroUserFeatureIndices = (IReadOnlyList<IReadOnlyList<int>>)value;
				return ;
			}
			if (variableName=="NonZeroUserFeatureValues") {
				this.NonZeroUserFeatureValues = (IReadOnlyList<IReadOnlyList<double>>)value;
				return ;
			}
			if (variableName=="UserTraitFeatureWeightPriorVariance") {
				this.UserTraitFeatureWeightPriorVariance = (double)value;
				return ;
			}
			if (variableName=="UserBiasFeatureWeightPriorVariance") {
				this.UserBiasFeatureWeightPriorVariance = (double)value;
				return ;
			}
			if (variableName=="UserTraitVariance") {
				this.UserTraitVariance = (double)value;
				return ;
			}
			if (variableName=="UserBiasVariance") {
				this.UserBiasVariance = (double)value;
				return ;
			}
			if (variableName=="UserThresholdPriorMean") {
				this.UserThresholdPriorMean = (double[])value;
				return ;
			}
			if (variableName=="UserThresholdPriorVariance") {
				this.UserThresholdPriorVariance = (double)value;
				return ;
			}
			if (variableName=="MiddleUserThresholdIndex") {
				this.MiddleUserThresholdIndex = (int)value;
				return ;
			}
			if (variableName=="UserTraitsMessage") {
				this.UserTraitsMessage = (DistributionRefArray<DistributionStructArray<Gaussian,double>,double[]>)value;
				return ;
			}
			if (variableName=="UserBiasMessage") {
				this.UserBiasMessage = (DistributionStructArray<Gaussian,double>)value;
				return ;
			}
			if (variableName=="UserThresholdsMessage") {
				this.UserThresholdsMessage = (DistributionRefArray<DistributionStructArray<Gaussian,double>,double[]>)value;
				return ;
			}
			if (variableName=="UserTraitsInitializer") {
				this.UserTraitsInitializer = (DistributionRefArray<DistributionStructArray<Gaussian,double>,double[]>)value;
				return ;
			}
			if (variableName=="UserBiasInitializer") {
				this.UserBiasInitializer = (DistributionStructArray<Gaussian,double>)value;
				return ;
			}
			if (variableName=="UserThresholdsInitializer") {
				this.UserThresholdsInitializer = (DistributionRefArray<DistributionStructArray<Gaussian,double>,double[]>)value;
				return ;
			}
			if (variableName=="ItemFeatureCount") {
				this.ItemFeatureCount = (int)value;
				return ;
			}
			if (variableName=="NonZeroItemFeatureCounts") {
				this.NonZeroItemFeatureCounts = (IReadOnlyList<int>)value;
				return ;
			}
			if (variableName=="NonZeroItemFeatureIndices") {
				this.NonZeroItemFeatureIndices = (IReadOnlyList<IReadOnlyList<int>>)value;
				return ;
			}
			if (variableName=="NonZeroItemFeatureValues") {
				this.NonZeroItemFeatureValues = (IReadOnlyList<IReadOnlyList<double>>)value;
				return ;
			}
			if (variableName=="ItemTraitFeatureWeightPriorVariance") {
				this.ItemTraitFeatureWeightPriorVariance = (double)value;
				return ;
			}
			if (variableName=="ItemBiasFeatureWeightPriorVariance") {
				this.ItemBiasFeatureWeightPriorVariance = (double)value;
				return ;
			}
			if (variableName=="ItemTraitVariance") {
				this.ItemTraitVariance = (double)value;
				return ;
			}
			if (variableName=="ItemBiasVariance") {
				this.ItemBiasVariance = (double)value;
				return ;
			}
			if (variableName=="ItemTraitsMessage") {
				this.ItemTraitsMessage = (DistributionRefArray<DistributionStructArray<Gaussian,double>,double[]>)value;
				return ;
			}
			if (variableName=="ItemBiasMessage") {
				this.ItemBiasMessage = (DistributionStructArray<Gaussian,double>)value;
				return ;
			}
			if (variableName=="ItemTraitsInitializer") {
				this.ItemTraitsInitializer = (DistributionRefArray<DistributionStructArray<Gaussian,double>,double[]>)value;
				return ;
			}
			if (variableName=="ItemBiasInitializer") {
				this.ItemBiasInitializer = (DistributionStructArray<Gaussian,double>)value;
				return ;
			}
			if (variableName=="UserIds") {
				this.UserIds = (IReadOnlyList<int>)value;
				return ;
			}
			if (variableName=="ItemIds") {
				this.ItemIds = (IReadOnlyList<int>)value;
				return ;
			}
			if (variableName=="Ratings") {
				this.Ratings = (IReadOnlyList<int>)value;
				return ;
			}
			if (variableName=="AffinityNoiseVariance") {
				this.AffinityNoiseVariance = (double)value;
				return ;
			}
			if (variableName=="UserThresholdNoiseVariance") {
				this.UserThresholdNoiseVariance = (double)value;
				return ;
			}
			if (variableName=="UseSharedUserThresholds") {
				this.UseSharedUserThresholds = (bool)value;
				return ;
			}
			throw new ArgumentException("Not an observed variable name: "+variableName);
		}

		/// <summary>Update all marginals, by iterating message-passing an additional number of times</summary>
		/// <param name="additionalIterations">The number of iterations that should be executed, starting from the current message state.  Messages are not reset, even if observed values have changed.</param>
		public void Update(int additionalIterations)
		{
			this.Execute(checked(this.numberOfIterationsDone+additionalIterations), false);
		}

		/// <summary>
		/// Returns the marginal distribution for 'UserBiasFeatureWeights' given by the current state of the
		/// message passing algorithm.
		/// </summary>
		/// <returns>The marginal distribution</returns>
		public DistributionStructArray<Gaussian,double> UserBiasFeatureWeightsMarginal()
		{
			return ArrayHelper.MakeCopy<DistributionStructArray<Gaussian,double>>(this.UserBiasFeatureWeights_marginal_F);
		}

		/// <summary>
		/// Returns the marginal distribution for 'UserBias' given by the current state of the
		/// message passing algorithm.
		/// </summary>
		/// <returns>The marginal distribution</returns>
		public DistributionStructArray<Gaussian,double> UserBiasMarginal()
		{
			return ArrayHelper.MakeCopy<DistributionStructArray<Gaussian,double>>(this.UserBias_marginal_F);
		}

		/// <summary>
		/// Returns the output message (the posterior divided by the prior) for 'UserBias' given by the current state of the
		/// message passing algorithm.
		/// </summary>
		/// <returns>The output message (the posterior divided by the prior)</returns>
		public DistributionStructArray<Gaussian,double> UserBiasMarginalDividedByPrior()
		{
			return ArrayHelper.MakeCopy<DistributionStructArray<Gaussian,double>>(this.UserBias_use_B);
		}

		/// <summary>
		/// Returns the marginal distribution for 'UserThresholds' given by the current state of the
		/// message passing algorithm.
		/// </summary>
		/// <returns>The marginal distribution</returns>
		public DistributionRefArray<DistributionStructArray<Gaussian,double>,double[]> UserThresholdsMarginal()
		{
			return ArrayHelper.MakeCopy<DistributionRefArray<DistributionStructArray<Gaussian,double>,double[]>>(this.UserThresholds_marginal_F);
		}

		/// <summary>
		/// Returns the output message (the posterior divided by the prior) for 'UserThresholds' given by the current state of the
		/// message passing algorithm.
		/// </summary>
		/// <returns>The output message (the posterior divided by the prior)</returns>
		public DistributionRefArray<DistributionStructArray<Gaussian,double>,double[]> UserThresholdsMarginalDividedByPrior()
		{
			return ArrayHelper.MakeCopy<DistributionRefArray<DistributionStructArray<Gaussian,double>,double[]>>(this.UserThresholds_use_B);
		}

		/// <summary>
		/// Returns the marginal distribution for 'UserTraitFeatureWeights' given by the current state of the
		/// message passing algorithm.
		/// </summary>
		/// <returns>The marginal distribution</returns>
		public DistributionRefArray<DistributionStructArray<Gaussian,double>,double[]> UserTraitFeatureWeightsMarginal()
		{
			return ArrayHelper.MakeCopy<DistributionRefArray<DistributionStructArray<Gaussian,double>,double[]>>(this.UserTraitFeatureWeights_marginal_F);
		}

		/// <summary>
		/// Returns the marginal distribution for 'UserTraits' given by the current state of the
		/// message passing algorithm.
		/// </summary>
		/// <returns>The marginal distribution</returns>
		public DistributionRefArray<DistributionStructArray<Gaussian,double>,double[]> UserTraitsMarginal()
		{
			return ArrayHelper.MakeCopy<DistributionRefArray<DistributionStructArray<Gaussian,double>,double[]>>(this.UserTraits_marginal_F);
		}

		/// <summary>
		/// Returns the output message (the posterior divided by the prior) for 'UserTraits' given by the current state of the
		/// message passing algorithm.
		/// </summary>
		/// <returns>The output message (the posterior divided by the prior)</returns>
		public DistributionRefArray<DistributionStructArray<Gaussian,double>,double[]> UserTraitsMarginalDividedByPrior()
		{
			return ArrayHelper.MakeCopy<DistributionRefArray<DistributionStructArray<Gaussian,double>,double[]>>(this.UserTraits_use_B);
		}

		#endregion

		#region Events
		/// <summary>Event that is fired when the progress of inference changes, typically at the end of one iteration of the inference algorithm.</summary>
		public event EventHandler<ProgressChangedEventArgs> ProgressChanged;
		#endregion

	}

}
