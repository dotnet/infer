<Project Sdk="Microsoft.NET.Sdk">
  <Import Project="$(MSBuildThisFileDirectory)..\..\..\build\nuget-properties.props" />

  <PropertyGroup>
    <Description>Infer.NET is a framework for running Bayesian inference in graphical models. It can also be used for probabilistic programming. This package contains visualization tools for exploring and analyzing models on Windows platform.</Description>
    <TargetFrameworks>net6.0-windows;net472</TargetFrameworks>
    <AssemblyName>Microsoft.ML.Probabilistic.Compiler.Visualizers.Windows</AssemblyName>
    <PackageId>Microsoft.ML.Probabilistic.Visualizers.Windows$(NuGetPackageIdSuffix)</PackageId>
    <DefineConstants>TRACE;SUPPRESS_XMLDOC_WARNINGS, SUPPRESS_UNREACHABLE_CODE_WARNINGS, SUPPRESS_AMBIGUOUS_REFERENCE_WARNINGS</DefineConstants>
    <NoWarn>1591</NoWarn>
    <RootNamespace>Microsoft.ML.Probabilistic.Compiler.Visualizers</RootNamespace>
    <Configurations>Debug;Release</Configurations>
    <MonoSupport>false</MonoSupport>
    <UseWindowsForms>true</UseWindowsForms>
    <DefineConstants Condition=" '$(MonoSupport)' == 'false' ">$(DefineConstants);INCLUDE_TRANSFORM_BROWSER</DefineConstants>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|AnyCPU'">
    <DebugType>full</DebugType>
    <DebugSymbols>true</DebugSymbols>
    <DefineConstants>$(DefineConstants);DEBUG</DefineConstants>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|AnyCPU'">
    <DebugType>pdbonly</DebugType>
    <Optimize>true</Optimize>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="AutomaticGraphLayout" Version="1.1.12" />
    <PackageReference Include="AutomaticGraphLayout.Drawing" Version="1.1.12" />
    <PackageReference Include="AutomaticGraphLayout.GraphViewerGDI" Version="1.1.12" />
  </ItemGroup>

  <PropertyGroup Condition=" $(DefineConstants.Contains('INCLUDE_TRANSFORM_BROWSER'))">
    <UseWpf>true</UseWpf>
    <LanguageTargets Condition="Exists('$(MSBuildExtensionsPath)\$(VisualStudioVersion)\Bin\Microsoft.CSharp.targets')">$(MSBuildExtensionsPath)\$(VisualStudioVersion)\Bin\Microsoft.CSharp.targets</LanguageTargets>
  </PropertyGroup>
  <ItemGroup Condition=" !($(DefineConstants.Contains('INCLUDE_TRANSFORM_BROWSER')))">
    <!-- XAML elements -->
    <None Include="**\*.xaml" />
    <None Include="TransformerChainView\*.cs" />
    <None Update="TransformerChainView\*.xaml.cs" SubType="Code" DependentUpon="%(Filename)" />
    <Compile Remove="**\*.xaml.cs" />
    <Compile Remove="TransformerChainView\*.cs" />
  </ItemGroup>

  <ItemGroup>
    <Compile Include="..\..\Shared\SharedAssemblyFileVersion.cs" />
    <Compile Include="..\..\Shared\SharedAssemblyInfo.cs" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\..\Compiler\Compiler.csproj" />
  </ItemGroup>

  <PropertyGroup>
    <DocumentationFile>bin\$(Configuration)\$(TargetFramework)\$(AssemblyNamePrefix)Microsoft.ML.Probabilistic.Compiler.Visualizers.Windows.xml</DocumentationFile>
  </PropertyGroup>

  <ItemGroup>
    <!--
    NuGet's IncludeSymbols setting creates a separate symbols NuGet package, but we would like the
    symbols included in the same package - hence this workaround.
    -->
    <!--
    First we remove the entry that is added by nuget-properties.props that does not work here because
    of the multiple target platforms.
    -->
    <None Remove="$(OutDir)$(AssemblyName).pdb" />
    <!--
    There isn't a convenient way right now to use the $(TargetPlatform) because of the manner NuGet
    resolves property values during packing; or to map these platforms to the target-framework paths used
    by the NuGet package format; so we list them explicitly here.
    -->
    <None Include="bin\Any CPU\$(Configuration)\net6.0-windows\$(AssemblyName).pdb" Pack="true" PackagePath="\lib\net6.0-windows7.0\" />
    <None Include="bin\Any CPU\$(Configuration)\net472\$(AssemblyName).pdb" Pack="true" PackagePath="\lib\net472\" />
  </ItemGroup>
</Project>
